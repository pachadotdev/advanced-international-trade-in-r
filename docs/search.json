[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Advanced International Trade in R",
    "section": "",
    "text": "About\nI tried to replicate Feenstra’s results in R, because I had to learn a bit of Stata for the course ECO3300 (International Trade) taught at the University of Toronto. To organize my notes, I used Quarto to present my R outputs in a decently formatted HTML file.\nI have a printed copy of the first edition, so I am using the data and codes from the first edition.\nThe goal of these solutions is to provide a reference for those who come from Stata and want to learn R. I prioritized readability and simplicity over performance and elegance. There were parts of the code were it was challenging to stick to a literal code translation, and I had to use R idioms to make the code more readable.\nThere are tasks that are hard to write in Stata, but easy in R, and vice versa. As the exercises progress, I intentionally used more R idioms to make the code less repetitive and using R idioms, while keeping the code as readable as possible.\nThese notes have a public GitHub repository. The repository has a detailed track of changes, but not all the codes outside the Quarto documents therein are required as of June, 2024.\nWhen I started this project (Sept, 2023), the links from Prof. Feenstra’s website were broken, so I went to the Internet Archive Wayback Machine to find the linked site (The Center for International Data) from 2005-03-08 and I downloaded it with wget (i.e., I ran bash 00-download-wayback-backup.sh from the repository). This is not needed anymore because:\n\nI added the data files to the repository.\nProf. Feenstra’s website is now working, and he was really kind to fix the links when I asked him for permission to use the data and codes that I recovered.\n\nAll the datasets and Stata codes are intellectual property of Dr. Robert C. Feenstra. The R codes are of my authorship, but these are a translation of the Stata codes, so I released them under Creative Commons Zero v1.0 Universal.\nI appreciate the feedback that I received from Prof. Feenstra and Prof. Mingzhi “Jimmy” Xu.\nPlease do not hesistate to email me if this is useful, or if you have any questions or suggestions. My email is m.sepulveda@mail.utoronto.ca.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>About</span>"
    ]
  },
  {
    "objectID": "chapter2.html#read-and-transform-the-data",
    "href": "chapter2.html#read-and-transform-the-data",
    "title": "Chapter 2. The Heckscher-Ohlin Model",
    "section": "",
    "text": "Feenstra’s code\n* This is to read the data into Stata *\n\nset mem 30m\n* insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler.csv *\ninsheet using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\hov_pub.csv\"\nrename v1 country\nrename v2 factor\nrename v3 AT\nrename v4 V\nrename v5 Y\nrename v6 B\nrename v7 YPC\nrename v8 POP\n\n* create country index *\nquietly summarize YPC\nlocal maxYPC=_result(6)\ngen ratio=YPC/`maxYPC'\nreplace ratio=ratio+0.0001 if country==\"Italy\"\n\nsort ratio\negen indexc=group(ratio)\n\n* create factor index *\nsort factor\negen indexf=group(factor)\n\n* include delta *\n\ngen delta=1\nreplace delta=0.03 if country==\"Bangladesh\"\nreplace delta=0.09 if country==\"Pakistan\"\nreplace delta=0.10 if country==\"Indonesia\"\nreplace delta=0.09 if country==\"Sri Lanka\"\nreplace delta=0.17 if country==\"Thailand\"\nreplace delta=0.16 if country==\"Colombia\"\nreplace delta=0.28 if country==\"Panama\"\nreplace delta=0.29 if country==\"Yugoslavia\"\nreplace delta=0.14 if country==\"Portugal\"\nreplace delta=0.11 if country==\"Uruguay\"\nreplace delta=0.45 if country==\"Greece\"\nreplace delta=0.55 if country==\"Ireland\"\nreplace delta=0.42 if country==\"Spain\"\nreplace delta=0.49 if country==\"Israel\"\nreplace delta=0.40 if country==\"Hong Kong\"\nreplace delta=0.38 if country==\"New Zealand\"\nreplace delta=0.60 if country==\"Austria\"\nreplace delta=0.48 if country==\"Singapore\"\nreplace delta=0.60 if country==\"Italy\"\nreplace delta=0.58 if country==\"UK\"\nreplace delta=0.70 if country==\"Japan\"\nreplace delta=0.65 if country==\"Belgium\"\nreplace delta=0.47 if country==\"Trinidad\"\nreplace delta=0.72 if country==\"Netherlands\"\nreplace delta=0.65 if country==\"Finland\"\nreplace delta=0.73 if country==\"Denmark\"\nreplace delta=0.78 if country==\"West Germany\"\nreplace delta=0.74 if country==\"France\"\nreplace delta=0.57 if country==\"Sweden\"\nreplace delta=0.69 if country==\"Norway\"\nreplace delta=0.79 if country==\"Switzerland\"\nreplace delta=0.55 if country==\"Canada\"\nreplace delta=1 if country==\"USA\"\n\ncompress\n\nlabel var country \"Name of the country\"\nlabel var factor \"Name of the factor\"\nlabel var AT \"Factor content of trade F=A*T\"\nlabel var V \"Endowment\"\nlabel var Y \"GDP, World Bank, y=p*Q\"\nlabel var B \"Trade balance, World Bank b=p*T\"\nlabel var YPC \"GDP per capita, PWT\"\nlabel var indexc \"Country indentifier\"\nlabel var indexf \"Factor Indentifier\"\n\n* save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", replace\n\nexit\nOutput:\n. * This is to read the data into Stata *\n. set mem 30m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           30M    max. data space                 30.000M\n    set matsize         400     max. RHS vars in models          1.254M\n                                                            -----------\n                                                                33.163M\n\n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-2\\hov_pub.csv\n(8 vars, 297 obs)\n\n. rename v1 country\n\n. rename v2 factor\n\n. rename v3 AT\n\n. rename v4 V\n\n. rename v5 Y\n\n. rename v6 B\n\n. rename v7 YPC\n\n. rename v8 POP\n\n. \n. * create country index *\n. quietly summarize YPC\n\n. local maxYPC=_result(6)\n\n. gen ratio=YPC/`maxYPC'\n\n. replace ratio=ratio+0.0001 if country==\"Italy\"\n(9 real changes made)\n\n. \n. sort ratio\n\n. egen indexc=group(ratio)\n\n. \n. * create factor index *\n. sort factor\n\n. egen indexf=group(factor)\n\n. \n. * include delta *\n. \n. gen delta=1\n\n. replace delta=0.03 if country==\"Bangladesh\"\n(9 real changes made)\n\n. replace delta=0.09 if country==\"Pakistan\"\n(9 real changes made)\n\n. replace delta=0.10 if country==\"Indonesia\"\n(9 real changes made)\n\n. replace delta=0.09 if country==\"Sri Lanka\"\n(9 real changes made)\n\n. replace delta=0.17 if country==\"Thailand\"\n(9 real changes made)\n\n. replace delta=0.16 if country==\"Colombia\"\n(9 real changes made)\n\n. replace delta=0.28 if country==\"Panama\"\n(9 real changes made)\n\n. replace delta=0.29 if country==\"Yugoslavia\"\n(9 real changes made)\n\n. replace delta=0.14 if country==\"Portugal\"\n(9 real changes made)\n\n. replace delta=0.11 if country==\"Uruguay\"\n(9 real changes made)\n\n. replace delta=0.45 if country==\"Greece\"\n(9 real changes made)\n\n. replace delta=0.55 if country==\"Ireland\"\n(9 real changes made)\n\n. replace delta=0.42 if country==\"Spain\"\n(9 real changes made)\n\n. replace delta=0.49 if country==\"Israel\"\n(9 real changes made)\n\n. replace delta=0.40 if country==\"Hong Kong\"\n(9 real changes made)\n\n. replace delta=0.38 if country==\"New Zealand\"\n(9 real changes made)\n\n. replace delta=0.60 if country==\"Austria\"\n(9 real changes made)\n\n. replace delta=0.48 if country==\"Singapore\"\n(9 real changes made)\n\n. replace delta=0.60 if country==\"Italy\"\n(9 real changes made)\n\n. replace delta=0.58 if country==\"UK\"\n(9 real changes made)\n\n. replace delta=0.70 if country==\"Japan\"\n(9 real changes made)\n\n. replace delta=0.65 if country==\"Belgium\"\n(9 real changes made)\n\n. replace delta=0.47 if country==\"Trinidad\"\n(9 real changes made)\n\n. replace delta=0.72 if country==\"Netherlands\"\n(9 real changes made)\n\n. replace delta=0.65 if country==\"Finland\"\n(9 real changes made)\n\n. replace delta=0.73 if country==\"Denmark\"\n(9 real changes made)\n\n. replace delta=0.78 if country==\"West Germany\"\n(9 real changes made)\n\n. replace delta=0.74 if country==\"France\"\n(9 real changes made)\n\n. replace delta=0.57 if country==\"Sweden\"\n(9 real changes made)\n\n. replace delta=0.69 if country==\"Norway\"\n(9 real changes made)\n\n. replace delta=0.79 if country==\"Switzerland\"\n(9 real changes made)\n\n. replace delta=0.55 if country==\"Canada\"\n(9 real changes made)\n\n. replace delta=1 if country==\"USA\"\n(0 real changes made)\n\n. \n. compress\nYPC was float now int\nindexc was float now byte\nindexf was float now byte\n\n. \n. label var country \"Name of the country\"\n\n. label var factor \"Name of the factor\"\n\n. label var AT \"Factor content of trade F=A*T\"\n\n. label var V \"Endowment\"\n\n. label var Y \"GDP, World Bank, y=p*Q\"\n\n. label var B \"Trade balance, World Bank b=p*T\"\n\n. label var YPC \"GDP per capita, PWT\"\n\n. label var indexc \"Country indentifier\"\n\n. label var indexf \"Factor Indentifier\"\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\t\n&gt; refler,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\tre\n&gt; fler.dta saved\n\n. \n. exit\n\nend of do-file\n\n\nMy code\n\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(knitr)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-2.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read ----\n\nfout &lt;- paste0(dout, \"/trefler.rds\")\nfout2 &lt;- paste0(dout, \"/trefler_desc.rds\")\n\nif (!file.exists(fout)) {\n  trefler &lt;- read_csv(\"first-edition/Chapter-2/hov_pub.csv\", col_names = F) %&gt;%\n    rename(\n      country = X1,\n      factor = X2,\n      at = X3,\n      v = X4,\n      y = X5,\n      b = X6,\n      ypc = X7,\n      pop = X8\n    )\n\n  # Transform ----\n\n  # see https://www.stata.com/manuals/rsummarize.pdf\n  # https://www.stata.com/manuals/degen.pdf\n  # https://www.stata.com/manuals/degen.pdf\n\n  # Create an auxiliary table for delta values\n  delta_values &lt;- tibble(\n    country = c(\n      \"Bangladesh\", \"Pakistan\", \"Indonesia\", \"Sri Lanka\", \"Thailand\",\n      \"Colombia\", \"Panama\", \"Yugoslavia\", \"Portugal\", \"Uruguay\", \"Greece\",\n      \"Ireland\", \"Spain\", \"Israel\", \"Hong Kong\", \"New Zealand\", \"Austria\",\n      \"Singapore\", \"Italy\", \"UK\", \"Japan\", \"Belgium\", \"Trinidad\", \"Netherlands\",\n      \"Finland\", \"Denmark\", \"West Germany\", \"France\", \"Sweden\", \"Norway\",\n      \"Switzerland\", \"Canada\", \"USA\"\n    ),\n    delta = c(\n      0.03, 0.09, 0.10, 0.09, 0.17, 0.16, 0.28, 0.29, 0.14, 0.11, 0.45,\n      0.55, 0.42, 0.49, 0.40, 0.38, 0.60, 0.48, 0.60, 0.58, 0.70, 0.65, 0.47,\n      0.72, 0.65, 0.73, 0.78, 0.74, 0.57, 0.69, 0.79, 0.55, 1\n    )\n  )\n\n  trefler &lt;- trefler %&gt;%\n    mutate(ypc_max = max(ypc)) %&gt;%\n    mutate(\n      ratio = case_when(\n        country != \"Italy\" ~ ypc / ypc_max,\n        country == \"Italy\" ~ (ypc / ypc_max) + 0.0001\n      )\n    ) %&gt;%\n    select(-ypc_max) %&gt;%\n    arrange(ratio) %&gt;%\n    group_by(ratio) %&gt;%\n    mutate(indexc = cur_group_id()) %&gt;%\n    group_by(factor) %&gt;%\n    mutate(indexf = cur_group_id()) %&gt;%\n    ungroup() %&gt;%\n    left_join(delta_values)\n\n  # Labels ----\n\n  # Create a separate table with the variables description\n\n  trefler_desc &lt;- tibble(\n    variable = c(\n      \"country\", \"factor\", \"at\", \"v\", \"y\", \"b\", \"ypc\", \"indexc\",\n      \"indexf\"\n    ),\n    description = c(\n      \"Name of the country\", \"Name of the factor\",\n      \"Factor content of trade F=A*T\", \"Endowment\", \"GDP, World Bank, y=p*Q\",\n      \"Trade balance, World Bank b=p*T\", \"GDP per capita, PWT\",\n      \"Country indentifier\", \"Factor Indentifier\"\n    )\n  )\n\n  # Save ----\n\n  saveRDS(trefler, fout)\n  saveRDS(trefler_desc, fout2)\n} else {\n  trefler &lt;- readRDS(fout)\n  trefler_desc &lt;- readRDS(fout2)\n}",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Chapter 2. The Heckscher-Ohlin Model</span>"
    ]
  },
  {
    "objectID": "chapter2.html#exercise-1",
    "href": "chapter2.html#exercise-1",
    "title": "Chapter 2. The Heckscher-Ohlin Model",
    "section": "Exercise 1",
    "text": "Exercise 1\nGiven identical technologies across countries, run the program sign_rank_1.do to conduct the sign test, rank test, and test for missing trade. Use the results in sign_rank_1.log to replicate columns (2) and (4) in Table 2.5.\n\nFeenstra’s code\n* This program is to conduct sign test, Rank test and Missing trade test *\n\ncapture log close\n* log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_1.log, replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_1.log\", replace\n\nset mem 30m\n\n* use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)*\ngen Efc=AT-(V-Sc*Vfw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=AT/(sigmaf*sqrt(Sc))\ngen trV=V/(sigmaf*sqrt(Sc))\ngen trY=Y/sqrt(Sc)\ngen trB=B/sqrt(Sc)\ngen trVfw=Vfw/sigmaf\n\ngen AThat=trV-Sc*trVfw\ngen AThat2=(V-Sc*Vfw)/weight\n\n* Correlation, should be .28 *\n\ncorr trAT AThat2\n\n*************\n* Sign Test *\n*************\n\nsort indexc\nby indexc: count if trAT*AThat2&gt;0\n\ncount if trAT*AThat2&gt;0\ndisplay _result(1)/_N\n\n*****************\n* Missing Trade *\n*****************\n\n* Checking for the missing trade, should be .032 *\n\nquietly summarize trAT\nlocal varAT=_result(4)\nquietly summarize AThat\nlocal varHat=_result(4)\nquietly summarize AThat2\nlocal varHat2=_result(4)\ndisplay `varAT'/`varHat'\ndisplay `varAT'/`varHat2'\n\n**************\n* Rank Tests *\n**************\n\nkeep country indexc indexf trAT AThat2\n\nsort indexc indexf\nreshape wide trAT AThat2, i(indexc) j(indexf)\n\nlocal i=1\nwhile `i'&lt;9{\n    local j=`i'+1\n    while `j'&lt;=9{\n        gen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')&gt;0)\n        local j=`j'+1\n    }\n    local i=`i'+1\n}\n\nkeep country indexc rank*\nreshape long rank, i(indexc) j(factor)\negen r1=sum(rank), by(indexc)\ngen r2=r1/36\ncollapse r2,by(indexc country)\nsum r2\nlist\n\nlog close\nexit\nOutput:\n. * This program is to conduct sign test, Rank test and Missing trade test *\n. \n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-2\\sign_rank_1.log, replace\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\sign_rank_1.log\n  log type:  text\n opened on:  19 Jun 2024, 15:29:23\n\n. \n. set mem 30m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           30M    max. data space                 30.000M\n    set matsize         400     max. RHS vars in models          1.254M\n                                                            -----------\n                                                                33.163M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\tr\n&gt; efler, clear\n\n. \n. * number of country in the dataset *\n. egen C=max(indexc)\n\n. egen F=max(indexf)\n\n. \n. * Calculate the world level of Yw, Bw and Vw *\n. egen Yww=sum(Y)\n\n. gen Yw=Yww/F\n\n. egen Bww=sum(B)\n\n. gen Bw=Bww/F\n\n. egen Vfw=sum(V), by(indexf)\n\n. \n. * Calculate country share Sc *\n. gen Sc=(Y-B)/(Yw-Bw)\n\n. \n. * Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)*\n. gen Efc=AT-(V-Sc*Vfw)\n\n. \n. * Construct the average epsilon for a given factor *\n. egen total=sum(Efc),by(indexf)\n\n. gen ave=total/C\n\n. \n. * Construct sigma^2 and the weight *\n. \n. egen tot=sum((Efc-ave)^2), by(indexf)\n\n. gen sigma2f=tot/(C-1)\n\n. \n. codebook sigma2f\n\n----------------------------------------------------------------------------------\nsigma2f                                                                (unlabeled)\n----------------------------------------------------------------------------------\n\n                  type:  numeric (float)\n\n                 range:  [98198290,7.112e+22]         units:  10\n         unique values:  9                        missing .:  0/297\n\n            tabulation:  Freq.  Value\n                            33  98198288\n                            33  2.419e+08\n                            33  7.455e+11\n                            33  9.191e+11\n                            33  1.210e+12\n                            33  4.383e+12\n                            33  2.106e+13\n                            33  1.009e+14\n                            33  7.112e+22\n\n. gen sigmaf=sqrt(sigma2f)\n\n. gen weight=sigmaf*sqrt(Sc)\n\n. \n. * Using the weight, convert all the data *\n. \n. gen trAT=AT/(sigmaf*sqrt(Sc))\n\n. gen trV=V/(sigmaf*sqrt(Sc))\n\n. gen trY=Y/sqrt(Sc)\n\n. gen trB=B/sqrt(Sc)\n\n. gen trVfw=Vfw/sigmaf\n\n. \n. gen AThat=trV-Sc*trVfw\n\n. gen AThat2=(V-Sc*Vfw)/weight\n\n. \n. * Correlation, should be .28 *\n. \n. corr trAT AThat2\n(obs=297)\n\n             |     trAT   AThat2\n-------------+------------------\n        trAT |   1.0000\n      AThat2 |   0.2823   1.0000\n\n\n. \n. *************\n. * Sign Test *\n. *************\n. \n. sort indexc\n\n. by indexc: count if trAT*AThat2&gt;0\n\n----------------------------------------------------------------------------------\n-&gt; indexc = 1\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 2\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 3\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 4\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 5\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 6\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 7\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 8\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 9\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 10\n    9\n----------------------------------------------------------------------------------\n-&gt; indexc = 11\n    1\n----------------------------------------------------------------------------------\n-&gt; indexc = 12\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 13\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 14\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 15\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 16\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 17\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 18\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 19\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 20\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 21\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 22\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 23\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 24\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 25\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 26\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 27\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 28\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 29\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 30\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 31\n    8\n----------------------------------------------------------------------------------\n-&gt; indexc = 32\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 33\n    8\n\n. \n. count if trAT*AThat2&gt;0\n  148\n\n. display _result(1)/_N\n.4983165\n\n. \n. *****************\n. * Missing Trade *\n. *****************\n. \n. * Checking for the missing trade, should be .032 *\n. \n. quietly summarize trAT\n\n. local varAT=_result(4)\n\n. quietly summarize AThat\n\n. local varHat=_result(4)\n\n. quietly summarize AThat2\n\n. local varHat2=_result(4)\n\n. display `varAT'/`varHat'\n.03375119\n\n. display `varAT'/`varHat2'\n.031999\n\n. \n. **************\n. * Rank Tests *\n. **************\n. \n. keep country indexc indexf trAT AThat2\n\n. \n. sort indexc indexf\n\n. reshape wide trAT AThat2, i(indexc) j(indexf)\n(note: j = 1 2 3 4 5 6 7 8 9)\n\nData                               long   -&gt;   wide\n-----------------------------------------------------------------------------\nNumber of obs.                      297   -&gt;      33\nNumber of variables                   5   -&gt;      20\nj variable (9 values)            indexf   -&gt;   (dropped)\nxij variables:\n                                   trAT   -&gt;   trAT1 trAT2 ... trAT9\n                                 AThat2   -&gt;   AThat21 AThat22 ... AThat29\n-----------------------------------------------------------------------------\n\n. \n. local i=1\n\n. while `i'&lt;9{\n  2.         local j=`i'+1\n  3.         while `j'&lt;=9{\n  4.                 gen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')&gt;0)\n  5.                 local j=`j'+1\n  6.         }\n  7.         local i=`i'+1\n  8. }\n\n. \n. keep country indexc rank*\n\n. reshape long rank, i(indexc) j(factor)\n(note: j = 12 13 14 15 16 17 18 19 23 24 25 26 27 28 29 34 35 36 37 38 39 45 46 47\n&gt;  48 49 56 57 58 59 67 68 69 78 79 89)\n\nData                               wide   -&gt;   long\n-----------------------------------------------------------------------------\nNumber of obs.                       33   -&gt;    1188\nNumber of variables                  38   -&gt;       4\nj variable (36 values)                    -&gt;   factor\nxij variables:\n               rank12 rank13 ... rank89   -&gt;   rank\n-----------------------------------------------------------------------------\n\n. egen r1=sum(rank), by(indexc)\n\n. gen r2=r1/36\n\n. collapse r2,by(indexc country)\n\n. sum r2\n\n    Variable |       Obs        Mean    Std. Dev.       Min        Max\n-------------+--------------------------------------------------------\n          r2 |        33    .6026936    .1721445   .0833333   .9166667\n\n. list\n\n     +----------------------------------+\n     | indexc        country         r2 |\n     |----------------------------------|\n  1. |      1     Bangladesh        .75 |\n  2. |      2       Pakistan   .7222222 |\n  3. |      3      Indonesia   .6666667 |\n  4. |      4      Sri Lanka   .4166667 |\n  5. |      5       Thailand   .6944444 |\n     |----------------------------------|\n  6. |      6       Colombia   .8055556 |\n  7. |      7         Panama   .5555556 |\n  8. |      8     Yugoslavia   .4444444 |\n  9. |      9       Portugal   .5277778 |\n 10. |     10        Uruguay   .7222222 |\n     |----------------------------------|\n 11. |     11         Greece   .4722222 |\n 12. |     12        Ireland   .5277778 |\n 13. |     13          Spain   .3888889 |\n 14. |     14         Israel   .3888889 |\n 15. |     15      Hong Kong   .8333333 |\n     |----------------------------------|\n 16. |     16    New Zealand   .5277778 |\n 17. |     17        Austria   .5277778 |\n 18. |     18      Singapore   .6111111 |\n 19. |     19          Italy   .7777778 |\n 20. |     20             UK   .5833333 |\n     |----------------------------------|\n 21. |     21          Japan   .7777778 |\n 22. |     22        Belgium   .6111111 |\n 23. |     23       Trinidad         .5 |\n 24. |     24    Netherlands   .5277778 |\n 25. |     25        Finland   .4722222 |\n     |----------------------------------|\n 26. |     26        Denmark   .5277778 |\n 27. |     27   West Germany   .8055556 |\n 28. |     28         France   .0833333 |\n 29. |     29         Sweden   .6666667 |\n 30. |     30         Norway   .6111111 |\n     |----------------------------------|\n 31. |     31    Switzerland   .5555556 |\n 32. |     32         Canada   .8888889 |\n 33. |     33            USA   .9166667 |\n     +----------------------------------+\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\sign_rank_1.log\n  log type:  text\n closed on:  19 Jun 2024, 15:29:31\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nMy code\n\n# Transform ----\n\ntrefler &lt;- readRDS(fout) %&gt;%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %&gt;%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %&gt;%\n  group_by(indexf) %&gt;%\n  mutate(\n    vfw = sum(v)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %&gt;%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = at - (v - sc * vfw)\n  ) %&gt;%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %&gt;%\n  mutate(ave = sum(efc) / c) %&gt;%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Using the weight, convert all the data\n  mutate(\n    trat = at / (sigmaf * sqrt(sc)),\n    athat2 = (v - (sc * vfw)) / weight\n  ) %&gt;%\n  arrange(country)\n\n# Correlation, should be .28\ntrefler %&gt;%\n  select(trat, athat2) %&gt;%\n  cor()\n\n            trat    athat2\ntrat   1.0000000 0.2822883\nathat2 0.2822883 1.0000000\n\n# Sign Test ----\n\ntrefler %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  )\n\n# A tibble: 33 × 3\n# Groups:   country [33]\n   country    indexc     p\n   &lt;chr&gt;       &lt;int&gt; &lt;dbl&gt;\n 1 Austria        17 0.556\n 2 Bangladesh      1 0.333\n 3 Belgium        22 0.667\n 4 Canada         32 0.556\n 5 Colombia        6 0.333\n 6 Denmark        26 0.444\n 7 Finland        25 0.333\n 8 France         28 0.333\n 9 Greece         11 0.111\n10 Hong Kong      15 0.667\n# ℹ 23 more rows\n\ntrefler %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  )\n\n# A tibble: 1 × 1\n      p\n  &lt;dbl&gt;\n1 0.498\n\n# Missing Trade ----\n\n# Checking for the missing trade, should be .032\n\ntrefler %&gt;%\n  summarize(\n    varat = var(trat),\n    varhat2 = var(athat2)\n  ) %&gt;%\n  mutate(\n    varat_varhat2 = varat / varhat2\n  )\n\n# A tibble: 1 × 3\n  varat varhat2 varat_varhat2\n  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1  1.61    50.3        0.0320\n\n# Rank Tests ----\n\ntrefler_wide &lt;- trefler %&gt;%\n  select(country, indexc, indexf, trat, athat2) %&gt;%\n  arrange(indexc, indexf) %&gt;%\n  pivot_wider(\n    names_from = indexf,\n    values_from = c(trat, athat2)\n  )\n\n# This would be too long\n# trefler_wide &lt;- trefler_wide %&gt;%\n#   mutate(\n#     rank12 = (trat_1 - trat_2) * (athat2_1 - athat2_2) &gt; 0,\n#     rank13 = (trat_1 - trat_3) * (athat2_1 - athat2_3) &gt; 0,\n#     ...\n#     rank89 = (trat_8 - trat_9) * (athat2_8 - athat2_9) &gt; 0,\n#   )\n\n# create all relevant trat_1 - trat_2, trat_1 - trat_3, etc.\n\nranks &lt;- expand_grid(\n  x = 1:8,\n  y = 1:9\n) %&gt;%\n  filter(x &lt; y)\n\n# The syntax here is based on internal R developer functions, but these\n# allow to create columns with minimal lines of code and avoids more complicated\n# bracket syntax\ntrefler_rank &lt;- map2_df(\n  pull(ranks, x),\n  pull(ranks, y),\n  function(x, y) {\n    trefler_wide %&gt;%\n      mutate(\n        name = paste0(\"rank\", x, y),\n        value = (!!sym(paste0(\"trat_\", x)) - !!sym(paste0(\"trat_\", y))) *\n          (!!sym(paste0(\"athat2_\", x)) - !!sym(paste0(\"athat2_\", y))) &gt; 0\n      ) %&gt;%\n      select(country, indexc, name, value)\n  }\n) %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarise(r1 = sum(value)) %&gt;%\n  mutate(r2 = r1 / 36)\n\ntrefler_rank\n\n# A tibble: 33 × 4\n# Groups:   country [33]\n   country    indexc    r1     r2\n   &lt;chr&gt;       &lt;int&gt; &lt;int&gt;  &lt;dbl&gt;\n 1 Austria        17    19 0.528 \n 2 Bangladesh      1    27 0.75  \n 3 Belgium        22    22 0.611 \n 4 Canada         32    32 0.889 \n 5 Colombia        6    29 0.806 \n 6 Denmark        26    19 0.528 \n 7 Finland        25    17 0.472 \n 8 France         28     3 0.0833\n 9 Greece         11    17 0.472 \n10 Hong Kong      15    30 0.833 \n# ℹ 23 more rows\n\ntrefler_rank %&gt;%\n  pull(r2) %&gt;%\n  mean()\n\n[1] 0.6026936\n\n\n\n\nExtra step: formatting the table\n\ntrefler %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  ) %&gt;%\n  arrange(indexc) %&gt;% # same order as in the book\n  select(country, sign_hov = p) %&gt;%\n  left_join(\n    trefler_rank %&gt;%\n      select(country, rank_hov = r2)\n  ) %&gt;%\n  bind_rows(\n    trefler %&gt;%\n      summarize(\n        p = sum(trat * athat2 &gt; 0) / n()\n      ) %&gt;%\n      mutate(\n        country = \"All countries\",\n        rank_hov = mean(pull(trefler_rank, r2))\n      ) %&gt;%\n      select(country, sign_hov = p, rank_hov)\n  ) %&gt;%\n  mutate_if(is.numeric, round, 2) %&gt;% # same no of decimals as in the book\n  kable()\n\n\n\n\ncountry\nsign_hov\nrank_hov\n\n\n\n\nBangladesh\n0.33\n0.75\n\n\nPakistan\n0.33\n0.72\n\n\nIndonesia\n0.22\n0.67\n\n\nSri Lanka\n0.22\n0.42\n\n\nThailand\n0.22\n0.69\n\n\nColombia\n0.33\n0.81\n\n\nPanama\n0.33\n0.56\n\n\nYugoslavia\n0.56\n0.44\n\n\nPortugal\n0.22\n0.53\n\n\nUruguay\n1.00\n0.72\n\n\nGreece\n0.11\n0.47\n\n\nIreland\n0.67\n0.53\n\n\nSpain\n0.22\n0.39\n\n\nIsrael\n0.67\n0.39\n\n\nHong Kong\n0.67\n0.83\n\n\nNew Zealand\n0.44\n0.53\n\n\nAustria\n0.56\n0.53\n\n\nSingapore\n0.56\n0.61\n\n\nItaly\n0.67\n0.78\n\n\nUK\n0.67\n0.58\n\n\nJapan\n0.78\n0.78\n\n\nBelgium\n0.67\n0.61\n\n\nTrinidad\n0.67\n0.50\n\n\nNetherlands\n0.44\n0.53\n\n\nFinland\n0.33\n0.47\n\n\nDenmark\n0.44\n0.53\n\n\nWest Germany\n0.56\n0.81\n\n\nFrance\n0.33\n0.08\n\n\nSweden\n0.44\n0.67\n\n\nNorway\n0.44\n0.61\n\n\nSwitzerland\n0.89\n0.56\n\n\nCanada\n0.56\n0.89\n\n\nUSA\n0.89\n0.92\n\n\nAll countries\n0.50\n0.60",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Chapter 2. The Heckscher-Ohlin Model</span>"
    ]
  },
  {
    "objectID": "chapter2.html#exercise-2",
    "href": "chapter2.html#exercise-2",
    "title": "Chapter 2. The Heckscher-Ohlin Model",
    "section": "Exercise 2",
    "text": "Exercise 2\nGiven uniform technological differences across countries, run the program sign_rank_2.do to redo the sign test, rank test, and missing trade. Use the results in sign_rank_2.log to replicate column (3) and (5), given column (6) in Table 2.5.\n\nFeenstra’s code\n* This program is to conduct sign test, Rank test and Missing trade test *\n* using delta *\n\ncapture log close\n* log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_2.log, replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\sign_rank_2.log\", replace\n\nset mem 30m\n\n* use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\negen Vw=sum(delta*V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n\ngen Efc=delta*AT-(delta*V-Sc*Vw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=delta*AT/weight\ngen AThat2=(delta*V-Sc*Vw)/weight\n\n* Correlation *\n\ncorr trAT AThat2\n\n*************\n* Sign Test *\n*************\n\nsort indexc\nby indexc: count if trAT*AThat2&gt;0\n\ncount if trAT*AThat2&gt;0\ndisplay _result(1)/_N\n\n*****************\n* Missing Trade *\n*****************\n\nquietly summarize trAT\nlocal varAT=_result(4)\nquietly summarize AThat\nlocal varHat=_result(4)\nquietly summarize AThat2\nlocal varHat2=_result(4)\ndisplay `varAT'/`varHat'\ndisplay `varAT'/`varHat2'\n\n*************\n* Rank Test *\n*************\n\nkeep country indexc indexf trAT AThat2\n\nsort indexc indexf\nreshape wide trAT AThat2, i(indexc) j(indexf)\n\nlocal i=1\nwhile `i'&lt;9{\n    local j=`i'+1\n    while `j'&lt;=9{\n        gen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')&gt;0)\n        local j=`j'+1\n    }\n    local i=`i'+1\n}\n\nkeep country indexc rank*\nreshape long rank, i(indexc) j(factor)\negen r1=sum(rank), by(indexc)\ngen r2=r1/36\ncollapse r2,by(indexc country)\nsum r2\nlist\n\nlog close\nexit\nOutput:\n. * This program is to conduct sign test, Rank test and Missing trade test *\n. * using delta *\n. \n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-2\\sign_rank_2.log, replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-2\\sign_rank_2.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\sign_rank_2.log\n  log type:  text\n opened on:  19 Jun 2024, 15:30:38\n\n. \n. set mem 30m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           30M    max. data space                 30.000M\n    set matsize         400     max. RHS vars in models          1.254M\n                                                            -----------\n                                                                33.163M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\tr\n&gt; efler, clear\n\n. \n. * number of country in the dataset *\n. egen C=max(indexc)\n\n. egen F=max(indexf)\n\n. \n. * Calculate the world level of Yw, Bw and Vw *\n. egen Yww=sum(Y)\n\n. gen Yw=Yww/F\n\n. egen Bww=sum(B)\n\n. gen Bw=Bww/F\n\n. egen Vfw=sum(V), by(indexf)\n\n. egen Vw=sum(delta*V), by(indexf)\n\n. \n. * Calculate country share Sc *\n. gen Sc=(Y-B)/(Yw-Bw)\n\n. \n. * Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n. \n. gen Efc=delta*AT-(delta*V-Sc*Vw)\n\n. \n. * Construct the average epsilon for a given factor *\n. egen total=sum(Efc),by(indexf)\n\n. gen ave=total/C\n\n. \n. * Construct sigma^2 and the weight *\n. \n. egen tot=sum((Efc-ave)^2), by(indexf)\n\n. gen sigma2f=tot/(C-1)\n\n. \n. codebook sigma2f\n\n----------------------------------------------------------------------------------\nsigma2f                                                                (unlabeled)\n----------------------------------------------------------------------------------\n\n                  type:  numeric (float)\n\n                 range:  [51579730,3.418e+21]         units:  10\n         unique values:  9                        missing .:  0/297\n\n            tabulation:  Freq.  Value\n                            33  51579728\n                            33  3.926e+08\n                            33  6.172e+10\n                            33  1.211e+11\n                            33  1.883e+11\n                            33  2.320e+11\n                            33  2.662e+11\n                            33  2.113e+12\n                            33  3.418e+21\n\n. gen sigmaf=sqrt(sigma2f)\n\n. gen weight=sigmaf*sqrt(Sc)\n\n. \n. * Using the weight, convert all the data *\n. \n. gen trAT=delta*AT/weight\n\n. gen AThat2=(delta*V-Sc*Vw)/weight\n\n. \n. * Correlation *\n. \n. corr trAT AThat2\n(obs=297)\n\n             |     trAT   AThat2\n-------------+------------------\n        trAT |   1.0000\n      AThat2 |   0.4100   1.0000\n\n\n. \n. *************\n. * Sign Test *\n. *************\n. \n. sort indexc\n\n. by indexc: count if trAT*AThat2&gt;0\n\n----------------------------------------------------------------------------------\n-&gt; indexc = 1\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 2\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 3\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 4\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 5\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 6\n    8\n----------------------------------------------------------------------------------\n-&gt; indexc = 7\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 8\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 9\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 10\n    1\n----------------------------------------------------------------------------------\n-&gt; indexc = 11\n    5\n----------------------------------------------------------------------------------\n-&gt; indexc = 12\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 13\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 14\n    8\n----------------------------------------------------------------------------------\n-&gt; indexc = 15\n    8\n----------------------------------------------------------------------------------\n-&gt; indexc = 16\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 17\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 18\n    9\n----------------------------------------------------------------------------------\n-&gt; indexc = 19\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 20\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 21\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 22\n    7\n----------------------------------------------------------------------------------\n-&gt; indexc = 23\n    9\n----------------------------------------------------------------------------------\n-&gt; indexc = 24\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 25\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 26\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 27\n    6\n----------------------------------------------------------------------------------\n-&gt; indexc = 28\n    3\n----------------------------------------------------------------------------------\n-&gt; indexc = 29\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 30\n    4\n----------------------------------------------------------------------------------\n-&gt; indexc = 31\n    8\n----------------------------------------------------------------------------------\n-&gt; indexc = 32\n    2\n----------------------------------------------------------------------------------\n-&gt; indexc = 33\n    5\n\n. \n. count if trAT*AThat2&gt;0\n  184\n\n. display _result(1)/_N\n.61952862\n\n. \n. *****************\n. * Missing Trade *\n. *****************\n. \n. quietly summarize trAT\n\n. local varAT=_result(4)\n\n. quietly summarize AThat\n\n. local varHat=_result(4)\n\n. quietly summarize AThat2\n\n. local varHat2=_result(4)\n\n. display `varAT'/`varHat'\n.07061819\n\n. display `varAT'/`varHat2'\n.07061819\n\n. \n. *************\n. * Rank Test *\n. *************\n. \n. keep country indexc indexf trAT AThat2\n\n. \n. sort indexc indexf\n\n. reshape wide trAT AThat2, i(indexc) j(indexf)\n(note: j = 1 2 3 4 5 6 7 8 9)\n\nData                               long   -&gt;   wide\n-----------------------------------------------------------------------------\nNumber of obs.                      297   -&gt;      33\nNumber of variables                   5   -&gt;      20\nj variable (9 values)            indexf   -&gt;   (dropped)\nxij variables:\n                                   trAT   -&gt;   trAT1 trAT2 ... trAT9\n                                 AThat2   -&gt;   AThat21 AThat22 ... AThat29\n-----------------------------------------------------------------------------\n\n. \n. local i=1\n\n. while `i'&lt;9{\n  2.         local j=`i'+1\n  3.         while `j'&lt;=9{\n  4.                 gen rank`i'`j'=((trAT`i'-trAT`j')*(AThat2`i'-AThat2`j')&gt;0)\n  5.                 local j=`j'+1\n  6.         }\n  7.         local i=`i'+1\n  8. }\n\n. \n. keep country indexc rank*\n\n. reshape long rank, i(indexc) j(factor)\n(note: j = 12 13 14 15 16 17 18 19 23 24 25 26 27 28 29 34 35 36 37 38 39 45 46 47\n&gt;  48 49 56 57 58 59 67 68 69 78 79 89)\n\nData                               wide   -&gt;   long\n-----------------------------------------------------------------------------\nNumber of obs.                       33   -&gt;    1188\nNumber of variables                  38   -&gt;       4\nj variable (36 values)                    -&gt;   factor\nxij variables:\n               rank12 rank13 ... rank89   -&gt;   rank\n-----------------------------------------------------------------------------\n\n. egen r1=sum(rank), by(indexc)\n\n. gen r2=r1/36\n\n. collapse r2,by(indexc country)\n\n. sum r2\n\n    Variable |       Obs        Mean    Std. Dev.       Min        Max\n-------------+--------------------------------------------------------\n          r2 |        33    .6153199    .1508913   .1944444   .8611111\n\n. list\n\n     +----------------------------------+\n     | indexc        country         r2 |\n     |----------------------------------|\n  1. |      1     Bangladesh   .7777778 |\n  2. |      2       Pakistan   .7777778 |\n  3. |      3      Indonesia   .6666667 |\n  4. |      4      Sri Lanka   .6666667 |\n  5. |      5       Thailand   .7222222 |\n     |----------------------------------|\n  6. |      6       Colombia   .8611111 |\n  7. |      7         Panama   .7777778 |\n  8. |      8     Yugoslavia   .6111111 |\n  9. |      9       Portugal   .5833333 |\n 10. |     10        Uruguay   .5277778 |\n     |----------------------------------|\n 11. |     11         Greece        .75 |\n 12. |     12        Ireland   .3888889 |\n 13. |     13          Spain   .6944444 |\n 14. |     14         Israel   .6944444 |\n 15. |     15      Hong Kong   .7222222 |\n     |----------------------------------|\n 16. |     16    New Zealand   .6111111 |\n 17. |     17        Austria   .4444444 |\n 18. |     18      Singapore   .6111111 |\n 19. |     19          Italy   .6666667 |\n 20. |     20             UK   .6388889 |\n     |----------------------------------|\n 21. |     21          Japan   .7777778 |\n 22. |     22        Belgium   .5277778 |\n 23. |     23       Trinidad   .5277778 |\n 24. |     24    Netherlands   .4722222 |\n 25. |     25        Finland         .5 |\n     |----------------------------------|\n 26. |     26        Denmark   .4166667 |\n 27. |     27   West Germany   .7777778 |\n 28. |     28         France   .1944444 |\n 29. |     29         Sweden   .3611111 |\n 30. |     30         Norway   .7777778 |\n     |----------------------------------|\n 31. |     31    Switzerland         .5 |\n 32. |     32         Canada   .5555556 |\n 33. |     33            USA   .7222222 |\n     +----------------------------------+\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\sign_rank_2.log\n  log type:  text\n closed on:  19 Jun 2024, 15:30:44\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nMy code\n\n# Transform ----\n\ntrefler &lt;- readRDS(fout) %&gt;%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %&gt;%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %&gt;%\n  group_by(indexf) %&gt;%\n  mutate(\n    vfw = sum(v),\n    vw = sum(delta * v)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %&gt;%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = delta * at - (delta * v - sc * vw)\n  ) %&gt;%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %&gt;%\n  mutate(ave = sum(efc) / c) %&gt;%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Using the weight, convert all the data\n  mutate(\n    trat = delta * at / weight,\n    athat2 = (delta * v - (sc * vw)) / weight\n  )\n\n# Correlation should be .41\ntrefler %&gt;%\n  select(trat, athat2) %&gt;%\n  cor()\n\n            trat    athat2\ntrat   1.0000000 0.4099617\nathat2 0.4099617 1.0000000\n\n# Sign Test ----\n\ntrefler %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  )\n\n# A tibble: 33 × 3\n# Groups:   country [33]\n   country    indexc     p\n   &lt;chr&gt;       &lt;int&gt; &lt;dbl&gt;\n 1 Austria        17 0.667\n 2 Bangladesh      1 0.778\n 3 Belgium        22 0.778\n 4 Canada         32 0.222\n 5 Colombia        6 0.889\n 6 Denmark        26 0.444\n 7 Finland        25 0.444\n 8 France         28 0.333\n 9 Greece         11 0.556\n10 Hong Kong      15 0.889\n# ℹ 23 more rows\n\ntrefler %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  )\n\n# A tibble: 1 × 1\n      p\n  &lt;dbl&gt;\n1 0.620\n\n# Missing Trade ----\n\n# Checking for the missing trade, should be .07\n\ntrefler %&gt;%\n  summarize(\n    varat = var(trat),\n    varhat2 = var(athat2)\n  ) %&gt;%\n  mutate(\n    varat_varhat2 = varat / varhat2\n  )\n\n# A tibble: 1 × 3\n  varat varhat2 varat_varhat2\n  &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1  1.34    19.0        0.0706\n\n# Rank Tests ----\n\ntrefler_wide &lt;- trefler %&gt;%\n  select(country, indexc, indexf, trat, athat2) %&gt;%\n  arrange(indexc, indexf) %&gt;%\n  pivot_wider(\n    names_from = indexf,\n    values_from = c(trat, athat2)\n  )\n\nranks &lt;- expand_grid(\n  x = 1:8,\n  y = 1:9\n) %&gt;%\n  filter(x &lt; y)\n\ntrefler_rank &lt;- map2_df(\n  pull(ranks, x),\n  pull(ranks, y),\n  function(x, y) {\n    trefler_wide %&gt;%\n      mutate(\n        name = paste0(\"rank\", x, y),\n        value = (!!sym(paste0(\"trat_\", x)) - !!sym(paste0(\"trat_\", y))) *\n          (!!sym(paste0(\"athat2_\", x)) - !!sym(paste0(\"athat2_\", y))) &gt; 0\n      ) %&gt;%\n      select(country, indexc, name, value)\n  }\n) %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarise(r1 = sum(value)) %&gt;%\n  mutate(r2 = r1 / 36)\n\ntrefler_rank\n\n# A tibble: 33 × 4\n# Groups:   country [33]\n   country    indexc    r1    r2\n   &lt;chr&gt;       &lt;int&gt; &lt;int&gt; &lt;dbl&gt;\n 1 Austria        17    16 0.444\n 2 Bangladesh      1    28 0.778\n 3 Belgium        22    19 0.528\n 4 Canada         32    20 0.556\n 5 Colombia        6    31 0.861\n 6 Denmark        26    15 0.417\n 7 Finland        25    18 0.5  \n 8 France         28     7 0.194\n 9 Greece         11    27 0.75 \n10 Hong Kong      15    26 0.722\n# ℹ 23 more rows\n\ntrefler_rank %&gt;%\n  pull(r2) %&gt;%\n  mean()\n\n[1] 0.6153199\n\n\n\n\nExtra step: formatting the table\n\ntrefler %&gt;%\n  group_by(country, indexc) %&gt;%\n  summarize(\n    p = sum(trat * athat2 &gt; 0) / n()\n  ) %&gt;%\n  arrange(indexc) %&gt;% # same order as in the book\n  select(country, sign_hov = p) %&gt;%\n  left_join(\n    trefler_rank %&gt;%\n      select(country, rank_hov = r2)\n  ) %&gt;%\n  bind_rows(\n    trefler %&gt;%\n      summarize(\n        p = sum(trat * athat2 &gt; 0) / n()\n      ) %&gt;%\n      mutate(\n        country = \"All countries\",\n        rank_hov = mean(pull(trefler_rank, r2))\n      ) %&gt;%\n      select(country, sign_hov = p, rank_hov)\n  ) %&gt;%\n  mutate_if(is.numeric, round, 2) %&gt;% # same no of decimals as in the book\n  kable()\n\n\n\n\ncountry\nsign_hov\nrank_hov\n\n\n\n\nBangladesh\n0.78\n0.78\n\n\nPakistan\n0.67\n0.78\n\n\nIndonesia\n0.67\n0.67\n\n\nSri Lanka\n0.56\n0.67\n\n\nThailand\n0.67\n0.72\n\n\nColombia\n0.89\n0.86\n\n\nPanama\n0.78\n0.78\n\n\nYugoslavia\n0.67\n0.61\n\n\nPortugal\n0.78\n0.58\n\n\nUruguay\n0.11\n0.53\n\n\nGreece\n0.56\n0.75\n\n\nIreland\n0.44\n0.39\n\n\nSpain\n0.78\n0.69\n\n\nIsrael\n0.89\n0.69\n\n\nHong Kong\n0.89\n0.72\n\n\nNew Zealand\n0.22\n0.61\n\n\nAustria\n0.67\n0.44\n\n\nSingapore\n1.00\n0.61\n\n\nItaly\n0.33\n0.67\n\n\nUK\n0.78\n0.64\n\n\nJapan\n0.67\n0.78\n\n\nBelgium\n0.78\n0.53\n\n\nTrinidad\n1.00\n0.53\n\n\nNetherlands\n0.44\n0.47\n\n\nFinland\n0.44\n0.50\n\n\nDenmark\n0.44\n0.42\n\n\nWest Germany\n0.67\n0.78\n\n\nFrance\n0.33\n0.19\n\n\nSweden\n0.44\n0.36\n\n\nNorway\n0.44\n0.78\n\n\nSwitzerland\n0.89\n0.50\n\n\nCanada\n0.22\n0.56\n\n\nUSA\n0.56\n0.72\n\n\nAll countries\n0.62\n0.62\n\n\n\n\n\n\n\nNotes\nThe Stata code that I run returns the same values as R. However:\n\nAustria should have values 0.67 and 0.47. I got 0.67 and 0.44.\nFrance should have values 0.33 and 0.22. I got 0.33 and 0.19.\nSwitzerland should have values 0.89 and 0.47. I got 0.89 and 0.50.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Chapter 2. The Heckscher-Ohlin Model</span>"
    ]
  },
  {
    "objectID": "chapter2.html#exercise-3",
    "href": "chapter2.html#exercise-3",
    "title": "Chapter 2. The Heckscher-Ohlin Model",
    "section": "Exercise 3",
    "text": "Exercise 3\nAllowing all factors in each country to have different productivities, now run the program compute_pi.do to compute factor productivities \\(\\pi_k^i\\) as Trefler (1993). Note that there are 9 factors in the original data set, but these are now aggregated to just 4 factors, which are labor (endowment 1), capital (endowment 2), cropland (endowment 3) and pasture (endowment 4). Using the results in pi_.log or alternatively in the data files pi_1.dta, pi_2.dta, pi_3.dta, pi_4.dta to answer the following:\n\nWhich factor has the most negative productivities estimated?\nWhat is the correlation between the estimated labor productivity and the productivities of other factors? What is the correlation between each factor productivity and GDP per-capita (which you can find in the file trefler.dta)?\n\n\nFeenstra’s code\n* This program is to compute pai, the factor productivity *\n\ncapture log close\n* log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi.log,replace *\nlog using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi.log\", replace\n\nset mem 30m\n\n* use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\trefler\", clear\n\n* number of country in the dataset *\negen C=max(indexc)\negen F=max(indexf)\n\n* Calculate the world level of Yw, Bw and Vw *\negen Yww=sum(Y)\ngen Yw=Yww/F\negen Bww=sum(B)\ngen Bw=Bww/F\negen Vfw=sum(V), by(indexf)\n\n* Calculate country share Sc *\ngen Sc=(Y-B)/(Yw-Bw)\n\n* Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\ngen Efc=AT-(V-Sc*Vfw)\n\n* Construct the average epsilon for a given factor *\negen total=sum(Efc),by(indexf)\ngen ave=total/C\n\n* Construct sigma^2 and the weight *\n\negen tot=sum((Efc-ave)^2), by(indexf)\ngen sigma2f=tot/(C-1)\n\ncodebook sigma2f\ngen sigmaf=sqrt(sigma2f)\ngen weight=sigmaf*sqrt(Sc)\n\n* Using the weight, convert all the data *\n\ngen trAT=AT/(sigmaf*sqrt(Sc))\ngen trV=V/(sigmaf*sqrt(Sc))\ngen trY=Y/sqrt(Sc)\ngen trB=B/sqrt(Sc)\ngen trVfw=Vfw/sigmaf\n\ngen AThat=trV-Sc*trVfw\ngen AThat2=(V-Sc*Vfw)/weight\n\n* Construct Aggregate Labor Endowment *\n\npreserve\nkeep if indexf==7 |indexf==8 | indexf==9\ngen en=2\nreplace en=3 if indexf==8\nreplace en=4 if indexf==9\nkeep country factor AT V en indexc Sc\n\n* save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189\", replace\n\nrestore\n\npreserve\ndrop if indexf==7 |indexf==8 | indexf==9\n\negen v_l=sum(V), by(country)\negen AT_l=sum(AT), by(country)\n\ndrop V AT factor\nrename v_l V\nrename AT_l AT\ngen en=1\ncollapse (mean)AT V en indexc Sc, by(country)\ngen str5 factor=\"Labor\"\n* save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L\", replace\n\nrestore\n\n* use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189,clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_189\", clear\n\n* append using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L *\nappend using \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\indexf_L\"\nsort indexc en\n* save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi,replace *\nsave \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi\", replace\n\n************************************\n* Compute Pi: factor productivity *\n************************************\n\n* use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi, clear *\nuse \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi\", clear\n\ngen p_0=1\ngen p_1=1\n\nlocal i=1\nwhile `i'&lt;=4{\n    preserve\n    keep if en==`i'\n    local j=1\n    while `j'&lt;51{\n        replace p_0=p_1\n        gen Vp=p_0*V\n        egen Vpw=sum(Vp)\n        replace p_1=(AT+Sc*Vpw)/V\n        replace p_1=1 if country==\"USA\"\n        drop Vp Vpw\n        local j=`j'+1\n    }\n    keep en country indexc p_1\n    * save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i',replace *\n  save \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i'\", replace\n    restore\n    local i=`i'+1\n}\n\nlocal i=1\nwhile `i'&lt;=4{\n    * use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i',clear *\n  use \"Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_`i'\", clear\n    sort en indexc\n    by en: list en indexc country p_1\n    local i=`i'+1\n}\n\nlog close\n\nexit\nOutput:\n. * This program is to compute pai, the factor productivity *\n. \n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-2\\pi.log,replace\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\pi.log\n  log type:  text\n opened on:  19 Jun 2024, 15:32:25\n\n. \n. set mem 30m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           30M    max. data space                 30.000M\n    set matsize         400     max. RHS vars in models          1.254M\n                                                            -----------\n                                                                33.163M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\tr\n&gt; efler, clear\n\n. \n. * number of country in the dataset *\n. egen C=max(indexc)\n\n. egen F=max(indexf)\n\n. \n. * Calculate the world level of Yw, Bw and Vw *\n. egen Yww=sum(Y)\n\n. gen Yw=Yww/F\n\n. egen Bww=sum(B)\n\n. gen Bw=Bww/F\n\n. egen Vfw=sum(V), by(indexf)\n\n. \n. * Calculate country share Sc *\n. gen Sc=(Y-B)/(Yw-Bw)\n\n. \n. * Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n. gen Efc=AT-(V-Sc*Vfw)\n\n. \n. * Construct the average epsilon for a given factor *\n. egen total=sum(Efc),by(indexf)\n\n. gen ave=total/C\n\n. \n. * Construct sigma^2 and the weight *\n. \n. egen tot=sum((Efc-ave)^2), by(indexf)\n\n. gen sigma2f=tot/(C-1)\n\n. \n. codebook sigma2f\n\n----------------------------------------------------------------------------------\nsigma2f                                                                (unlabeled)\n----------------------------------------------------------------------------------\n\n                  type:  numeric (float)\n\n                 range:  [98198290,7.112e+22]         units:  10\n         unique values:  9                        missing .:  0/297\n\n            tabulation:  Freq.  Value\n                            33  98198288\n                            33  2.419e+08\n                            33  7.455e+11\n                            33  9.191e+11\n                            33  1.210e+12\n                            33  4.383e+12\n                            33  2.106e+13\n                            33  1.009e+14\n                            33  7.112e+22\n\n. gen sigmaf=sqrt(sigma2f)\n\n. gen weight=sigmaf*sqrt(Sc)\n\n. \n. * Using the weight, convert all the data *\n. \n. gen trAT=AT/(sigmaf*sqrt(Sc))\n\n. gen trV=V/(sigmaf*sqrt(Sc))\n\n. gen trY=Y/sqrt(Sc)\n\n. gen trB=B/sqrt(Sc)\n\n. gen trVfw=Vfw/sigmaf\n\n. \n. gen AThat=trV-Sc*trVfw\n\n. gen AThat2=(V-Sc*Vfw)/weight\n\n. \n. * Construct Aggregate Labor Endowment *\n. \n. preserve\n\n. keep if indexf==7 |indexf==8 | indexf==9\n(198 observations deleted)\n\n. gen en=2\n\n. replace en=3 if indexf==8\n(33 real changes made)\n\n. replace en=4 if indexf==9\n(33 real changes made)\n\n. keep country factor AT V en indexc Sc\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\i\n&gt; ndexf_189,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\ind\n&gt; exf_189.dta saved\n\n. \n. restore\n\n. \n. preserve\n\n. drop if indexf==7 |indexf==8 | indexf==9\n(99 observations deleted)\n\n. \n. egen v_l=sum(V), by(country)\n\n. egen AT_l=sum(AT), by(country)\n\n. \n. drop V AT factor\n\n. rename v_l V\n\n. rename AT_l AT\n\n. gen en=1\n\n. collapse (mean)AT V en indexc Sc, by(country)\n\n. gen str5 factor=\"Labor\"\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\i\n&gt; ndexf_L,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\ind\n&gt; exf_L.dta saved\n\n. \n. restore\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\in\n&gt; dexf_189,clear\n\n. append using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Cha\n&gt; pter-2\\indexf_L\nindexc was byte now float\n\n. sort indexc en\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\p\n&gt; i,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi.\n&gt; dta saved\n\n. \n. ************************************\n. * Compute Pi: factor productivity *\n. ************************************\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi\n&gt; , clear\n\n. \n. gen p_0=1\n\n. gen p_1=1\n\n. \n. local i=1\n\n. while `i'&lt;=4{\n  2.         preserve\n  3.         keep if en==`i'\n  4.         local j=1\n  5.         while `j'&lt;51{\n  6.                 replace p_0=p_1\n  7.                 gen Vp=p_0*V\n  8.                 egen Vpw=sum(Vp)\n  9.                 replace p_1=(AT+Sc*Vpw)/V\n 10.                 replace p_1=1 if country==\"USA\"\n 11.                 drop Vp Vpw\n 12.                 local j=`j'+1\n 13.         }\n 14.         keep en country indexc p_1\n 15.         save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\\n&gt; Chapter-2\\pi_`i',replace\n 16.         restore\n 17.         local i=`i'+1\n 18. }\n(99 observations deleted)\n(0 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(30 real changes made)\n(1 real change made)\n(29 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_\n&gt; 1.dta saved\n(99 observations deleted)\n(0 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_\n&gt; 2.dta saved\n(99 observations deleted)\n(0 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(32 real changes made)\n(1 real change made)\n(31 real changes made)\n(31 real changes made)\n(1 real change made)\n(30 real changes made)\n(29 real changes made)\n(1 real change made)\n(28 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_\n&gt; 3.dta saved\n(99 observations deleted)\n(0 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(33 real changes made)\n(1 real change made)\n(32 real changes made)\n(28 real changes made)\n(1 real change made)\n(27 real changes made)\n(31 real changes made)\n(1 real change made)\n(30 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\n(0 real changes made)\n(1 real change made)\n(1 real change made)\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-2\\pi_\n&gt; 4.dta saved\n\n. \n. local i=1\n\n. while `i'&lt;=4{\n  2.         use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\C\n&gt; hapter-2\\pi_`i',clear\n  3.         sort en indexc\n  4.         by en: list en indexc country p_1\n  5.         local i=`i'+1\n  6. }\n\n----------------------------------------------------------------------------------\n-&gt; en = 1\n\n     +---------------------------------------+\n     | en   indexc        country        p_1 |\n     |---------------------------------------|\n  1. |  1        1     Bangladesh   .0165219 |\n  2. |  1        2       Pakistan   .0394124 |\n  3. |  1        3      Indonesia   .0432824 |\n  4. |  1        4      Sri Lanka   .0344432 |\n  5. |  1        5       Thailand    .048902 |\n     |---------------------------------------|\n  6. |  1        6       Colombia   .1940833 |\n  7. |  1        7         Panama   .2279774 |\n  8. |  1        8     Yugoslavia   .1997569 |\n  9. |  1        9       Portugal   .1759864 |\n 10. |  1       10        Uruguay   .2029693 |\n     |---------------------------------------|\n 11. |  1       11         Greece   .3140718 |\n 12. |  1       12        Ireland   .4166084 |\n 13. |  1       13          Spain   .4172725 |\n 14. |  1       14         Israel   .6131932 |\n 15. |  1       15      Hong Kong   .3781684 |\n     |---------------------------------------|\n 16. |  1       16    New Zealand   .5850298 |\n 17. |  1       17        Austria   .5694186 |\n 18. |  1       18      Singapore   .4873306 |\n 19. |  1       19          Italy   .5907437 |\n 20. |  1       20             UK   .6332356 |\n     |---------------------------------------|\n 21. |  1       21          Japan    .604921 |\n 22. |  1       22        Belgium   .7233988 |\n 23. |  1       23       Trinidad    .448344 |\n 24. |  1       24    Netherlands   .7933354 |\n 25. |  1       25        Finland   .6969619 |\n     |---------------------------------------|\n 26. |  1       26        Denmark   .7061784 |\n 27. |  1       27   West Germany   .7691833 |\n 28. |  1       28         France    .735665 |\n 29. |  1       29         Sweden   .7270576 |\n 30. |  1       30         Norway   .7816517 |\n     |---------------------------------------|\n 31. |  1       31    Switzerland   .9317446 |\n 32. |  1       32         Canada   .7799865 |\n 33. |  1       33            USA          1 |\n     +---------------------------------------+\n\n\n----------------------------------------------------------------------------------\n-&gt; en = 2\n\n     +---------------------------------------+\n     | en   indexc        country        p_1 |\n     |---------------------------------------|\n  1. |  2        1     Bangladesh   .9119021 |\n  2. |  2        2       Pakistan   .4867497 |\n  3. |  2        3      Indonesia    .250653 |\n  4. |  2        4      Sri Lanka   .1259789 |\n  5. |  2        5       Thailand   .3929541 |\n     |---------------------------------------|\n  6. |  2        6       Colombia   .4856291 |\n  7. |  2        7         Panama   .3224079 |\n  8. |  2        8     Yugoslavia   .2985477 |\n  9. |  2        9       Portugal    .297107 |\n 10. |  2       10        Uruguay   .4060566 |\n     |---------------------------------------|\n 11. |  2       11         Greece   .4401574 |\n 12. |  2       12        Ireland   .4783922 |\n 13. |  2       13          Spain    .519489 |\n 14. |  2       14         Israel   .5049116 |\n 15. |  2       15      Hong Kong   .5150965 |\n     |---------------------------------------|\n 16. |  2       16    New Zealand   .6197254 |\n 17. |  2       17        Austria    .542198 |\n 18. |  2       18      Singapore   .3209652 |\n 19. |  2       19          Italy   .5122213 |\n 20. |  2       20             UK   .8159872 |\n     |---------------------------------------|\n 21. |  2       21          Japan   .6502131 |\n 22. |  2       22        Belgium   .6457499 |\n 23. |  2       23       Trinidad   .4193396 |\n 24. |  2       24    Netherlands   .7513015 |\n 25. |  2       25        Finland   .6453199 |\n     |---------------------------------------|\n 26. |  2       26        Denmark    .703564 |\n 27. |  2       27   West Germany   .6629313 |\n 28. |  2       28         France   .6150761 |\n 29. |  2       29         Sweden   .9445322 |\n 30. |  2       30         Norway   .6199874 |\n     |---------------------------------------|\n 31. |  2       31    Switzerland   .6079721 |\n 32. |  2       32         Canada   .7359194 |\n 33. |  2       33            USA          1 |\n     +---------------------------------------+\n\n\n----------------------------------------------------------------------------------\n-&gt; en = 3\n\n     +----------------------------------------+\n     | en   indexc        country         p_1 |\n     |----------------------------------------|\n  1. |  3        1     Bangladesh    .0230836 |\n  2. |  3        2       Pakistan    .0975686 |\n  3. |  3        3      Indonesia    .1641388 |\n  4. |  3        4      Sri Lanka    .2300839 |\n  5. |  3        5       Thailand    .3002517 |\n     |----------------------------------------|\n  6. |  3        6       Colombia    .5963939 |\n  7. |  3        7         Panama    .5834956 |\n  8. |  3        8     Yugoslavia    .3189657 |\n  9. |  3        9       Portugal    -.383313 |\n 10. |  3       10        Uruguay    .5709916 |\n     |----------------------------------------|\n 11. |  3       11         Greece    .6072472 |\n 12. |  3       12        Ireland    1.480371 |\n 13. |  3       13          Spain    .2365766 |\n 14. |  3       14         Israel    2.517195 |\n 15. |  3       15      Hong Kong    -229.073 |\n     |----------------------------------------|\n 16. |  3       16    New Zealand    7.520329 |\n 17. |  3       17        Austria    1.159659 |\n 18. |  3       18      Singapore   -25.49224 |\n 19. |  3       19          Italy    .6419317 |\n 20. |  3       20             UK     1.47654 |\n     |----------------------------------------|\n 21. |  3       21          Japan    4.292305 |\n 22. |  3       22        Belgium    .4575562 |\n 23. |  3       23       Trinidad    -.904206 |\n 24. |  3       24    Netherlands    9.091455 |\n 25. |  3       25        Finland      .67896 |\n     |----------------------------------------|\n 26. |  3       26        Denmark    1.759899 |\n 27. |  3       27   West Germany    1.054174 |\n 28. |  3       28         France    1.558952 |\n 29. |  3       29         Sweden     .907351 |\n 30. |  3       30         Norway    1.812922 |\n     |----------------------------------------|\n 31. |  3       31    Switzerland     3.74253 |\n 32. |  3       32         Canada    .4738446 |\n 33. |  3       33            USA           1 |\n     +----------------------------------------+\n\n\n----------------------------------------------------------------------------------\n-&gt; en = 4\n\n     +----------------------------------------+\n     | en   indexc        country         p_1 |\n     |----------------------------------------|\n  1. |  4        1     Bangladesh    1.256177 |\n  2. |  4        2       Pakistan    .4731916 |\n  3. |  4        3      Indonesia    .4576648 |\n  4. |  4        4      Sri Lanka    .7949094 |\n  5. |  4        5       Thailand    16.93923 |\n     |----------------------------------------|\n  6. |  4        6       Colombia    .1271541 |\n  7. |  4        7         Panama    .2973391 |\n  8. |  4        8     Yugoslavia    .6397428 |\n  9. |  4        9       Portugal    1.639775 |\n 10. |  4       10        Uruguay    .0984165 |\n     |----------------------------------------|\n 11. |  4       11         Greece    .5059133 |\n 12. |  4       12        Ireland    .6129137 |\n 13. |  4       13          Spain    1.017669 |\n 14. |  4       14         Israel     2.15672 |\n 15. |  4       15      Hong Kong   -879.5381 |\n     |----------------------------------------|\n 16. |  4       16    New Zealand    .3673215 |\n 17. |  4       17        Austria    1.975304 |\n 18. |  4       18      Singapore    795.1004 |\n 19. |  4       19          Italy    3.145272 |\n 20. |  4       20             UK    2.242249 |\n     |----------------------------------------|\n 21. |  4       21          Japan    100.5984 |\n 22. |  4       22        Belgium    6.886858 |\n 23. |  4       23       Trinidad     4.62197 |\n 24. |  4       24    Netherlands    13.09784 |\n 25. |  4       25        Finland    22.29664 |\n     |----------------------------------------|\n 26. |  4       26        Denmark    28.72834 |\n 27. |  4       27   West Germany    6.864776 |\n 28. |  4       28         France    3.166397 |\n 29. |  4       29         Sweden     7.64686 |\n 30. |  4       30         Norway    34.59857 |\n     |----------------------------------------|\n 31. |  4       31    Switzerland    3.335021 |\n 32. |  4       32         Canada    .9541135 |\n 33. |  4       33            USA           1 |\n     +----------------------------------------+\n\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-2\\pi.log\n  log type:  text\n closed on:  19 Jun 2024, 15:32:49\n----------------------------------------------------------------------------------\n\n. \n. exit\n\nend of do-file\n\n\nMy code\n\ntrefler &lt;- readRDS(fout) %&gt;%\n  # Number of country in the dataset\n  mutate(\n    c = max(indexc),\n    f = max(indexf)\n  ) %&gt;%\n  # Calculate the world level of Yw, Bw and Vw\n  mutate(\n    yww = sum(y),\n    yw = yww / f,\n    bww = sum(b),\n    bw = bww / f\n  ) %&gt;%\n  group_by(indexf) %&gt;%\n  mutate(\n    vfw = sum(v),\n    vw = sum(delta * v)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Calculate country share Sc\n  mutate(\n    sc = (y - b) / (yw - bw)\n  ) %&gt;%\n  # Calculate epsilon(fc) and sigma^2(f) according to eq.2 in Trefler (1995)\n  mutate(\n    efc = delta * at - (delta * v - sc * vw)\n  ) %&gt;%\n  # Construct the average epsilon for a given factor\n  group_by(indexf) %&gt;%\n  mutate(ave = sum(efc) / c) %&gt;%\n  # Construct sigma^2 and the weight\n  mutate(\n    sigma2f = sum((efc - ave)^2) / (c - 1),\n    sigmaf = sqrt(sigma2f),\n    weight = sigmaf * sqrt(sc)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Using the weight, convert all the data\n  mutate(\n    trat = delta * at / weight,\n    athat2 = (delta * v - (sc * vw)) / weight\n  )\n\n# No need to save changes and restore\ntrefler2 &lt;- trefler %&gt;%\n  # Construct Aggregate Labor Endowment\n  filter(indexf %in% 7:9) %&gt;%\n  mutate(\n    en = case_when(\n      indexf == 7 ~ 2,\n      indexf == 8 ~ 3,\n      indexf == 9 ~ 4\n    )\n  ) %&gt;%\n  select(country, factor, indexf, at, v, en, indexc, sc)\n\ntrefler3 &lt;- trefler %&gt;%\n  filter(!(indexf %in% 7:9)) %&gt;%\n  group_by(country) %&gt;%\n  # No need to create v_l and at_l to then rename and then collapse\n  summarise(\n    v = sum(v),\n    at = sum(at),\n    sc = mean(sc),\n    indexc = mean(indexc)\n  ) %&gt;%\n  mutate(\n    en = 1,\n    factor = \"Labor\"\n  )\n\ntrefler3 &lt;- trefler2 %&gt;%\n  select(-indexf) %&gt;%\n  bind_rows(trefler3) %&gt;%\n  arrange(indexc, en)\n\n# Compute Pi: factor productivity\n# No need to save intermediate outputs, we proceed with iteration\ntrefler4 &lt;- map_df(\n  trefler3 %&gt;%\n    distinct(en) %&gt;%\n    pull(),\n  function(x) {\n    d &lt;- trefler3 %&gt;%\n      filter(en == x) %&gt;%\n      mutate(p0 = 1, p1 = 1)\n\n    iter &lt;- 50\n\n    for (i in seq_len(iter)) {\n      d &lt;- d %&gt;%\n        mutate(\n          p0 = p1,\n          vp = p0 * v,\n          vpw = sum(vp),\n          p1 = ifelse(country == \"USA\", 1, (at + sc * vpw) / v)\n        ) %&gt;%\n        select(-vp, -vpw)\n    }\n\n    # Tidy alternative to the for loop\n    # d &lt;- accumulate(seq_len(iter), .init = d, ~ .x %&gt;%\n    #   mutate(\n    #     p0 = p1,\n    #     p1 = ifelse(country == \"USA\", 1, (at + sc * sum(p1 * v)) / v)\n    #   )) %&gt;%\n    #   .[[iter + 1]]\n\n    d %&gt;%\n      select(country, indexc, en, p1)\n  }\n)\n\n\n\nExtra step: formatting the tables\n\ntrefler4 %&gt;%\n  arrange(country, en) %&gt;%\n  kable()\n\n\n\n\ncountry\nindexc\nen\np1\n\n\n\n\nAustria\n17\n1\n0.5694186\n\n\nAustria\n17\n2\n0.5421980\n\n\nAustria\n17\n3\n1.1596592\n\n\nAustria\n17\n4\n1.9753040\n\n\nBangladesh\n1\n1\n0.0165219\n\n\nBangladesh\n1\n2\n0.9119021\n\n\nBangladesh\n1\n3\n0.0230836\n\n\nBangladesh\n1\n4\n1.2561775\n\n\nBelgium\n22\n1\n0.7233988\n\n\nBelgium\n22\n2\n0.6457500\n\n\nBelgium\n22\n3\n0.4575561\n\n\nBelgium\n22\n4\n6.8868596\n\n\nCanada\n32\n1\n0.7799865\n\n\nCanada\n32\n2\n0.7359194\n\n\nCanada\n32\n3\n0.4738445\n\n\nCanada\n32\n4\n0.9541137\n\n\nColombia\n6\n1\n0.1940833\n\n\nColombia\n6\n2\n0.4856291\n\n\nColombia\n6\n3\n0.5963939\n\n\nColombia\n6\n4\n0.1271541\n\n\nDenmark\n26\n1\n0.7061784\n\n\nDenmark\n26\n2\n0.7035640\n\n\nDenmark\n26\n3\n1.7598990\n\n\nDenmark\n26\n4\n28.7283398\n\n\nFinland\n25\n1\n0.6969619\n\n\nFinland\n25\n2\n0.6453199\n\n\nFinland\n25\n3\n0.6789600\n\n\nFinland\n25\n4\n22.2966445\n\n\nFrance\n28\n1\n0.7356650\n\n\nFrance\n28\n2\n0.6150762\n\n\nFrance\n28\n3\n1.5589519\n\n\nFrance\n28\n4\n3.1663974\n\n\nGreece\n11\n1\n0.3140718\n\n\nGreece\n11\n2\n0.4401574\n\n\nGreece\n11\n3\n0.6072472\n\n\nGreece\n11\n4\n0.5059134\n\n\nHong Kong\n15\n1\n0.3781684\n\n\nHong Kong\n15\n2\n0.5150965\n\n\nHong Kong\n15\n3\n-229.0729738\n\n\nHong Kong\n15\n4\n-879.5376414\n\n\nIndonesia\n3\n1\n0.0432824\n\n\nIndonesia\n3\n2\n0.2506530\n\n\nIndonesia\n3\n3\n0.1641388\n\n\nIndonesia\n3\n4\n0.4576649\n\n\nIreland\n12\n1\n0.4166084\n\n\nIreland\n12\n2\n0.4783923\n\n\nIreland\n12\n3\n1.4803708\n\n\nIreland\n12\n4\n0.6129137\n\n\nIsrael\n14\n1\n0.6131932\n\n\nIsrael\n14\n2\n0.5049116\n\n\nIsrael\n14\n3\n2.5171947\n\n\nIsrael\n14\n4\n2.1567210\n\n\nItaly\n19\n1\n0.5907437\n\n\nItaly\n19\n2\n0.5122213\n\n\nItaly\n19\n3\n0.6419316\n\n\nItaly\n19\n4\n3.1452732\n\n\nJapan\n21\n1\n0.6049210\n\n\nJapan\n21\n2\n0.6502130\n\n\nJapan\n21\n3\n4.2923043\n\n\nJapan\n21\n4\n100.5984017\n\n\nNetherlands\n24\n1\n0.7933355\n\n\nNetherlands\n24\n2\n0.7513015\n\n\nNetherlands\n24\n3\n9.0914542\n\n\nNetherlands\n24\n4\n13.0978390\n\n\nNew Zealand\n16\n1\n0.5850298\n\n\nNew Zealand\n16\n2\n0.6197254\n\n\nNew Zealand\n16\n3\n7.5203295\n\n\nNew Zealand\n16\n4\n0.3673216\n\n\nNorway\n30\n1\n0.7816517\n\n\nNorway\n30\n2\n0.6199874\n\n\nNorway\n30\n3\n1.8129219\n\n\nNorway\n30\n4\n34.5985787\n\n\nPakistan\n2\n1\n0.0394124\n\n\nPakistan\n2\n2\n0.4867497\n\n\nPakistan\n2\n3\n0.0975686\n\n\nPakistan\n2\n4\n0.4731917\n\n\nPanama\n7\n1\n0.2279774\n\n\nPanama\n7\n2\n0.3224079\n\n\nPanama\n7\n3\n0.5834955\n\n\nPanama\n7\n4\n0.2973391\n\n\nPortugal\n9\n1\n0.1759864\n\n\nPortugal\n9\n2\n0.2971070\n\n\nPortugal\n9\n3\n-0.3833130\n\n\nPortugal\n9\n4\n1.6397757\n\n\nSingapore\n18\n1\n0.4873306\n\n\nSingapore\n18\n2\n0.3209652\n\n\nSingapore\n18\n3\n-25.4922493\n\n\nSingapore\n18\n4\n795.1006524\n\n\nSpain\n13\n1\n0.4172726\n\n\nSpain\n13\n2\n0.5194890\n\n\nSpain\n13\n3\n0.2365766\n\n\nSpain\n13\n4\n1.0176692\n\n\nSri Lanka\n4\n1\n0.0344433\n\n\nSri Lanka\n4\n2\n0.1259789\n\n\nSri Lanka\n4\n3\n0.2300838\n\n\nSri Lanka\n4\n4\n0.7949096\n\n\nSweden\n29\n1\n0.7270576\n\n\nSweden\n29\n2\n0.9445322\n\n\nSweden\n29\n3\n0.9073509\n\n\nSweden\n29\n4\n7.6468612\n\n\nSwitzerland\n31\n1\n0.9317447\n\n\nSwitzerland\n31\n2\n0.6079722\n\n\nSwitzerland\n31\n3\n3.7425295\n\n\nSwitzerland\n31\n4\n3.3350218\n\n\nThailand\n5\n1\n0.0489020\n\n\nThailand\n5\n2\n0.3929541\n\n\nThailand\n5\n3\n0.3002516\n\n\nThailand\n5\n4\n16.9392348\n\n\nTrinidad\n23\n1\n0.4483440\n\n\nTrinidad\n23\n2\n0.4193396\n\n\nTrinidad\n23\n3\n-0.9042060\n\n\nTrinidad\n23\n4\n4.6219780\n\n\nUK\n20\n1\n0.6332355\n\n\nUK\n20\n2\n0.8159872\n\n\nUK\n20\n3\n1.4765402\n\n\nUK\n20\n4\n2.2422499\n\n\nUSA\n33\n1\n1.0000000\n\n\nUSA\n33\n2\n1.0000000\n\n\nUSA\n33\n3\n1.0000000\n\n\nUSA\n33\n4\n1.0000000\n\n\nUruguay\n10\n1\n0.2029693\n\n\nUruguay\n10\n2\n0.4060566\n\n\nUruguay\n10\n3\n0.5709917\n\n\nUruguay\n10\n4\n0.0984165\n\n\nWest Germany\n27\n1\n0.7691833\n\n\nWest Germany\n27\n2\n0.6629313\n\n\nWest Germany\n27\n3\n1.0541740\n\n\nWest Germany\n27\n4\n6.8647780\n\n\nYugoslavia\n8\n1\n0.1997569\n\n\nYugoslavia\n8\n2\n0.2985477\n\n\nYugoslavia\n8\n3\n0.3189656\n\n\nYugoslavia\n8\n4\n0.6397429",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Chapter 2. The Heckscher-Ohlin Model</span>"
    ]
  },
  {
    "objectID": "chapter4.html#data-description",
    "href": "chapter4.html#data-description",
    "title": "Chapter 4. Trade in Intermediate Inputs and Wages",
    "section": "",
    "text": "Sources\n\nNBER productivity dataset (Bartelsman, Becker, Gray):\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nsic\nStandard Industrial Classification (4-digit manufacturing)\n\n\nyear\nYear ranges from 58 to 97\n\n\nemp\nTotal employment in 1000s\n\n\npay\nTotal payroll in $1,000,000\n\n\nprode\nProduction workers in 1000s\n\n\nprodh\nProduction worker hours in 1,000,000\n\n\nprodw\nProduction worker wages in $1,000,000\n\n\nvship\nTotal value of shipments in $1,000,000\n\n\nmaterial\nTotal cost of materials in $1,000,000\n\n\nvadd\nTotal value added in $1,000,000\n\n\ninvest\nTotal capital expenditure in $1,000,000\n\n\ninvent\nEnd-of-year inventories in $1,000,000\n\n\nenergy\nCost of electric & fuels in $1,000,000\n\n\ncap\nTotal real capital stock in $1,000,000\n\n\nequip\nReal capital: equipment in $1,000,000\n\n\nplant\nReal capital: structures in $1,000,000\n\n\npiship\nDeflator for VSHIP 1987=1.000\n\n\npimat\nDeflator for MATCOST 1987=1.000\n\n\npiinv\nDeflator for INVEST 1987=1.000\n\n\npien\nDeflator for ENERGY 1987=1.000\n\n\n\n\n\nOther variables created by Feenstra and Hanson:\nThe prefix “a” generally denotes an average of that variable over two periods.\nThe prefix “d” indicates annual average change in that variable x 100.\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nsic72\n4 digit SIC code\n\n\nsic2\n2 digit SIC code\n\n\nptfp\nPrimary TFP\n\n\nerr\nError as defined in (4.26) of Chapter 4, or (3) in Feenstra and Hanson (1999)\n\n\nsimat1a\nShare of imported materials (broad outsourcing)\n\n\nsimat1b\nShare of imported materials from inside 2-digit industry (narrow outsourcing)\n\n\ndiffout\n= simat1a - simat1b = Share of imported materials from outside 2-digit industry\n\n\nimat\nImported materials\n\n\namsh\nAverage material share\n\n\naosh\nAverage energy share\n\n\nadlhw\nAnnual change in log production wage\n\n\nadlnw\nAnnual change in log non-production wage\n\n\nadlpk\nAnnual change in log capital price\n\n\namesh\naosh + amsh\n\n\napsh\nAverage production share\n\n\nansh\nAverage non-production share\n\n\naksh\nAverage capital share\n\n\nnwsh\nNon-production share of the total wages\n\n\ndlpvad\nChange in log value-added\n\n\ndlpmx\nChange in log material price\n\n\ndlpe\nChange in log energy price\n\n\ndlp\nChange in log price\n\n\ndlky\nChange in log capital stock to real shipments ratio\n\n\ndly\nChange in log real shipments\n\n\nmvshipsh\nIndustry share of total manufacturing shipments, averaged over the first and last period\n\n\ndsimat1b\nChange in outsourcing (narrow); change in imported inputs from the same 2-digit industry divided by total materials purchases\n\n\ndsimat1a\nChange in outsourcing (broad); imported inputs divided by total material purchases\n\n\ndofsh\nChange in office equipment/total capital (capital=pstk x ex post rental price)\n\n\ndofsh1\nChange in office equipment/total capital (capital=pstk x ex ante rental price)\n\n\ndhtsh\nChange in High-tech capital/total capital (capital=pstk x ex post rental price)\n\n\ndhtsh1\nChange in High-tech capital/total capital (capital=pstk x ex ante rental price)\n\n\nci\nComputer investment/total investment",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Chapter 4. Trade in Intermediate Inputs and Wages</span>"
    ]
  },
  {
    "objectID": "chapter4.html#exercise-1",
    "href": "chapter4.html#exercise-1",
    "title": "Chapter 4. Trade in Intermediate Inputs and Wages",
    "section": "Exercise 1",
    "text": "Exercise 1\nDownload the NBER productivity dataset at http://www.nber.org/nberces/nbprod96.htm, compute the relative wage and relative employment for 1958 - 1996, and reconstruct Figure 4.1 and 4.2.\nNote: Given this data, you need to first compute the wage rates in production and nonproduction sectors using the following formula (\\(i\\) denotes the industry):\n\\[\\begin{align}\n  \\text{Production worker wage rate} &= \\frac{\\sum_i \\text{production worker wage bill}_i}{\\sum_i \\text{production workers}_i} \\\\\n  \\text{Non production worker wage rate} &= \\frac{\\sum_i \\text{non production worker wage bill}_i}{\\sum_i \\text{non production workers}_i} \\\\\n  &= \\frac{\\sum_i (\\text{total pay roll}_i - \\text{production worker wage bill}_i)}{\\sum_i (\\text{total employment}_i - \\text{production workers}_i)}\n\\end{align}\\]\n\nMy code\n\n# Packages ----\n\nlibrary(readr)\nlibrary(janitor)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Download and read ----\n\n# the refered link is not available anymore\n# I found a backup here: https://web.archive.org/web/20051224023622/http://www.nber.org/nberces/nbprod96.htm\n\nurl &lt;- \"https://web.archive.org/web/20051224023622/http://www.nber.org/nberces/bbg96_87.txt\"\nfinp &lt;- gsub(\".*/\", \"first-edition/Chapter-4/\", url)\n\nif (!file.exists(finp)) {\n  download.file(url, finp)\n}\n\nfout &lt;- gsub(\"txt\", \"rds\", finp)\n\nif (!file.exists(fout)) {\n  bbg96_87 &lt;- read_csv(finp) %&gt;%\n    clean_names() %&gt;%\n    mutate(year = year + 1900) %&gt;%\n    filter(year &gt;= 1958, year &lt;= 1996)\n\n  saveRDS(bbg96_87, fout)\n} else {\n  bbg96_87 &lt;- readRDS(fout)\n}\n\n# Compute the wage rates in production and nonproduction sectors ----\n\n# \\begin{align}\n#   \\text{Production worker wage rate} &= \\frac{\\sum_i \\text{production worker wage bill}_i}{\\sum_i \\text{production workers}_i} \\\\\n#   \\text{Non production worker wage rate} &= \\frac{\\sum_i \\text{non production worker wage bill}_i}{\\sum_i \\text{non production workers}_i} \\\\\n#   &= \\frac{\\sum_i (\\text{total pay roll}_i - \\text{production worker wage bill}_i)}{\\sum_i (\\text{total employment}_i - \\text{production workers}_i)}\n# \\end{align}\n\n# from the NBER website\n# prodw Production worker wages in $1,000,000\n# prode: Production workers in 1000s\n# pay Total payroll in $1,000,000\n# emp Total employment in 1000s\n\n# calculated variables\n# pwwr: Production worker wage rate\n# npwwr: Non production worker wage rate\n\nwage_rates &lt;- bbg96_87 %&gt;%\n  group_by(year) %&gt;%\n  summarise(\n    pwwr = sum(prodw) / sum(prode),\n    npwwr = (sum(pay) - sum(prodw)) / (sum(emp) - sum(prode))\n  ) %&gt;%\n  mutate(npwwr_pwwr = npwwr / pwwr)\n\n# Compute the relative nonproduction/production employment ----\n\nemployment_rates &lt;- bbg96_87 %&gt;%\n  group_by(year) %&gt;%\n  summarise(\n    pemp = sum(prode),\n    npemp = sum(emp) - pemp\n  ) %&gt;%\n  mutate(npemp_pemp = npemp / pemp)\n\n# Figure 4.1: Relative wage of nonproduction / production workers ----\n\nggplot(wage_rates, aes(x = year, y = npwwr_pwwr)) +\n  geom_line() +\n  geom_point(size = 4) +\n  theme_minimal(base_size = 13) +\n  labs(\n    title = \"Relative wage of nonproduction / production workers, U.S. Manufacturing\",\n    subtitle = \"Source: NBER productivity database (Bartelsman and Gray 1996)\",\n    x = \"Year\",\n    y = \"Relative wage\"\n  )\n\n\n\n\n\n\n\n# Figure 4.2: Relative employment of nonproduction / production workers ----\n\nggplot(employment_rates, aes(x = year, y = npemp_pemp)) +\n  geom_line() +\n  geom_point(size = 4) +\n  theme_minimal(base_size = 13) +\n  labs(\n    title = \"Relative employment of nonproduction / production workers, U.S. Manufacturing\",\n    subtitle = \"Source: NBER productivity database (Bartelsman and Gray 1996)\",\n    x = \"Year\",\n    y = \"Relative employment\"\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Chapter 4. Trade in Intermediate Inputs and Wages</span>"
    ]
  },
  {
    "objectID": "chapter4.html#exercise-2",
    "href": "chapter4.html#exercise-2",
    "title": "Chapter 4. Trade in Intermediate Inputs and Wages",
    "section": "Exercise 2",
    "text": "Exercise 2\nRun the STATA program Problem_4_2.do to reproduce the regressions in Table 4.4 (which is simplified from Table III in Feenstra and Hanson, 1999). Then answer:\n\nWhat weights are used in these regressions?\nHow are the results affected if these weights are not used?\n\n\nFeenstra’s code\nset mem 300m\n\nlog using c:\\Empirical_Exercise\\Chapter_4\\log_4_2.log,replace\n\nuse c:\\Empirical_Exercise\\Chapter_4\\data_Chp4,clear\ndrop if year==1972|year==1987\ndrop if sic72==2067|sic72==2794|sic72==3483\n\negen wagebill=sum(pay), by(year)\ngen share=pay/wagebill\n\nsort sic72 year\nby sic72: gen lagshare=share[_n-1]\ngen ashare=(share+lagshare)/2\n\nby sic72: gen lagnwsh=nwsh[_n-1]\ngen chanwsh=(nwsh-lagnwsh)*100/11\n\ngen wchanwsh=chanwsh*ashare\ngen wdlky=dlky*ashare\ngen wdly=dly*ashare\ngen wdsimat1a=dsimat1a*ashare\ngen wdsimat1b=dsimat1a*ashare\ngen diffout=dsimat1a-dsimat1b\ngen wdiffout=(dsimat1a-dsimat1b)*ashare\ngen wcosh_exp=dofsh*ashare\ngen htsh_exp=dhtsh-dofsh\ngen whtsh_exp=(dhtsh-dofsh)*ashare\ngen wcosh_exa=dofsh1*ashare\ngen htsh_exa=dhtsh1-dofsh1\ngen whtsh_exa=(dhtsh1-dofsh1)*ashare\ngen wcosh=ci*ashare\ngen whtsh=dhtsh*ashare\n\n* Check with the first column of Table 4.4 *\n\ntabstat wchanwsh wdlky wdly wdsimat1a wcosh_exp whtsh_exp wcosh_exa whtsh_exa wcosh whtsh, stats(sum)\n\n* Reproduce the rest of the columns in Table 4.4 *\n\nregress chanwsh dlky dly dsimat1a dofsh htsh_exp [aw=ashare], cluster (sic2)\n\nregress chanwsh dlky dly dsimat1a dofsh1 htsh_exa [aw=ashare], cluster (sic2)\n\nregress chanwsh dlky dly dsimat1a ci dhtsh [aw=ashare], cluster (sic2)\n\n* To instead distinguish narrow and other outsourcing, we can reproduce column (1) of table III in Feenstra and Hanson, 1999 *\n\ntabstat wchanwsh wdlky wdly wdsimat1b wdiffout wcosh_exp whtsh_exp wcosh_exa whtsh_exa wcosh whtsh, stats(sum)\n\n* Reproduce the rest of the columns in Table III *\n\nregress chanwsh dlky dly dsimat1b diffout dofsh htsh_exp [aw=ashare], cluster (sic2)\n\nregress chanwsh dlky dly dsimat1b diffout dofsh1 htsh_exa [aw=ashare], cluster (sic2)\n\nregress chanwsh dlky dly dsimat1b diffout ci dhtsh [aw=ashare], cluster (sic2)\n\nlog close\n\nclear\nexit\nOutput:\n. set mem 300m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory          300M    max. data space                300.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                               301.994M\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_2.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_2.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_2.log\n  log type:  text\n opened on:  19 Jun 2024, 14:02:42\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-4\\da\n&gt; ta_Chp4,clear\n(Matrl Cons (72 SIC), 67-92)\n\n. drop if year==1972|year==1987\n(900 observations deleted)\n\n. drop if sic72==2067|sic72==2794|sic72==3483\n(6 observations deleted)\n\n. \n. egen wagebill=sum(pay), by(year)\n\n. gen share=pay/wagebill\n\n. \n. sort sic72 year\n\n. by sic72: gen lagshare=share[_n-1]\n(447 missing values generated)\n\n. gen ashare=(share+lagshare)/2\n(447 missing values generated)\n\n. \n. by sic72: gen lagnwsh=nwsh[_n-1]\n(447 missing values generated)\n\n. gen chanwsh=(nwsh-lagnwsh)*100/11\n(447 missing values generated)\n\n. \n. gen wchanwsh=chanwsh*ashare\n(447 missing values generated)\n\n. gen wdlky=dlky*ashare\n(447 missing values generated)\n\n. gen wdly=dly*ashare\n(447 missing values generated)\n\n. gen wdsimat1a=dsimat1a*ashare\n(447 missing values generated)\n\n. gen wdsimat1b=dsimat1a*ashare\n(447 missing values generated)\n\n. gen diffout=dsimat1a-dsimat1b\n\n. gen wdiffout=(dsimat1a-dsimat1b)*ashare\n(447 missing values generated)\n\n. gen wcosh_exp=dofsh*ashare\n(447 missing values generated)\n\n. gen htsh_exp=dhtsh-dofsh\n\n. gen whtsh_exp=(dhtsh-dofsh)*ashare\n(447 missing values generated)\n\n. gen wcosh_exa=dofsh1*ashare\n(447 missing values generated)\n\n. gen htsh_exa=dhtsh1-dofsh1\n\n. gen whtsh_exa=(dhtsh1-dofsh1)*ashare\n(447 missing values generated)\n\n. gen wcosh=ci*ashare\n(447 missing values generated)\n\n. gen whtsh=dhtsh*ashare\n(447 missing values generated)\n\n. \n. * Check with the first column of Table 4.4 *\n. \n. tabstat wchanwsh wdlky wdly wdsimat1a wcosh_exp whtsh_exp wcosh_exa whtsh_exa wc\n&gt; osh whtsh, stats(sum)\n\n   stats |  wchanwsh     wdlky      wdly  wdsim~1a  wcosh_~p  whtsh_~p  wcosh_~a\n---------+----------------------------------------------------------------------\n     sum |  .3889885  .7063639  1.540769  .4225266  .2505536  .1444164  .0703266\n--------------------------------------------------------------------------------\n\n   stats |  whtsh_~a     wcosh     whtsh\n---------+------------------------------\n     sum |  .1655768  6.561565    .39497\n----------------------------------------\n\n. \n. * Reproduce the rest of the columns in Table 4.4 *\n. \n. regress chanwsh dlky dly dsimat1a dofsh htsh_exp [aw=ashare], cluster (sic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  5,    19) =    6.72\n                                                       Prob &gt; F      =  0.0009\n                                                       R-squared     =  0.1557\n                                                       Root MSE      =  .38912\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0467948   .0113832     4.11   0.001     .0229695    .0706201\n         dly |   .0197383   .0063797     3.09   0.006     .0063853    .0330912\n    dsimat1a |   .1966658   .0962066     2.04   0.055     -.004697    .3980286\n       dofsh |     .19534   .0915302     2.13   0.046     .0037651    .3869148\n    htsh_exp |  -.0650465   .1371193    -0.47   0.641    -.3520404    .2219474\n       _cons |   .2028764   .0428851     4.73   0.000     .1131169     .292636\n------------------------------------------------------------------------------\n\n. \n. regress chanwsh dlky dly dsimat1a dofsh1 htsh_exa [aw=ashare], cluster (sic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  5,    19) =    8.01\n                                                       Prob &gt; F      =  0.0003\n                                                       R-squared     =  0.1592\n                                                       Root MSE      =  .38832\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0444529   .0113121     3.93   0.001     .0207764    .0681293\n         dly |   .0173278   .0062906     2.75   0.013     .0041613    .0304942\n    dsimat1a |   .2207528   .0999711     2.21   0.040     .0115109    .4299947\n      dofsh1 |   .4309753   .1671453     2.58   0.018     .0811362    .7808144\n    htsh_exa |   .0052436   .0712031     0.07   0.942    -.1437862    .1542735\n       _cons |   .2064394   .0397614     5.19   0.000     .1232178     .289661\n------------------------------------------------------------------------------\n\n. \n. regress chanwsh dlky dly dsimat1a ci dhtsh [aw=ashare], cluster (sic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  5,    19) =   11.87\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.1885\n                                                       Root MSE      =  .38148\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0399279   .0087378     4.57   0.000     .0216396    .0582162\n         dly |   .0100379   .0062332     1.61   0.124    -.0030084    .0230841\n    dsimat1a |   .1346024   .0883067     1.52   0.144    -.0502257    .3194306\n          ci |   .0180834   .0066465     2.72   0.014     .0041722    .0319946\n       dhtsh |   .0324624      .0519     0.63   0.539    -.0761655    .1410904\n       _cons |   .1569685   .0446895     3.51   0.002     .0634323    .2505048\n------------------------------------------------------------------------------\n\n. \n. * To instead distinguish narrow and other outsourcing, we can reproduce column (\n&gt; 1) of table III in Feenstra and Hanson, 1999 *\n. \n. tabstat wchanwsh wdlky wdly wdsimat1b wdiffout wcosh_exp whtsh_exp wcosh_exa wht\n&gt; sh_exa wcosh whtsh, stats(sum)\n\n   stats |  wchanwsh     wdlky      wdly  wdsim~1b  wdiffout  wcosh_~p  whtsh_~p\n---------+----------------------------------------------------------------------\n     sum |  .3889885  .7063639  1.540769  .4225266  .1998607  .2505536  .1444164\n--------------------------------------------------------------------------------\n\n   stats |  wcosh_~a  whtsh_~a     wcosh     whtsh\n---------+----------------------------------------\n     sum |  .0703266  .1655768  6.561565    .39497\n--------------------------------------------------\n\n. \n. * Reproduce the rest of the columns in Table III *\n. \n. regress chanwsh dlky dly dsimat1b diffout dofsh htsh_exp [aw=ashare], cluster (s\n&gt; ic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  6,    19) =    7.00\n                                                       Prob &gt; F      =  0.0005\n                                                       R-squared     =  0.1627\n                                                       Root MSE      =  .38794\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0421152   .0141103     2.98   0.008     .0125821    .0716483\n         dly |   .0178086   .0080568     2.21   0.040     .0009456    .0346716\n    dsimat1b |   .2454613   .1692732     1.45   0.163    -.1088315    .5997541\n     diffout |    .121362   .0457066     2.66   0.016      .025697    .2170271\n       dofsh |   .2060218   .1021206     2.02   0.058    -.0077192    .4197627\n    htsh_exp |  -.0392957   .1289341    -0.30   0.764     -.309158    .2305665\n       _cons |    .206945   .0415146     4.98   0.000      .120054    .2938361\n------------------------------------------------------------------------------\n\n. \n. regress chanwsh dlky dly dsimat1b diffout dofsh1 htsh_exa [aw=ashare], cluster (\n&gt; sic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  6,    19) =    7.37\n                                                       Prob &gt; F      =  0.0004\n                                                       R-squared     =  0.1650\n                                                       Root MSE      =  .38742\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0408212   .0141101     2.89   0.009     .0112884     .070354\n         dly |   .0159677   .0078375     2.04   0.056    -.0004365    .0323718\n    dsimat1b |   .2653356    .175142     1.51   0.146    -.1012407    .6319119\n     diffout |   .1537718   .0502819     3.06   0.006     .0485307     .259013\n      dofsh1 |   .4207269   .1707522     2.46   0.023     .0633383    .7781154\n    htsh_exa |   .0143582     .07223     0.20   0.845    -.1368209    .1655373\n       _cons |   .2137716   .0390531     5.47   0.000     .1320326    .2955107\n------------------------------------------------------------------------------\n\n. \n. regress chanwsh dlky dly dsimat1b diffout ci dhtsh [aw=ashare], cluster (sic2)\n(sum of wgt is   1.0000e+00)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  6,    19) =   14.96\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.1995\n                                                       Root MSE      =  .37933\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n     chanwsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        dlky |   .0331274   .0119999     2.76   0.012     .0080113    .0582434\n         dly |   .0068629   .0087795     0.78   0.444    -.0115128    .0252386\n    dsimat1b |   .1928059   .1657117     1.16   0.259    -.1540328    .5396445\n     diffout |   .0380044   .0539983     0.70   0.490    -.0750153    .1510241\n          ci |   .0186984   .0068931     2.71   0.014     .0042711    .0331258\n       dhtsh |   .0519438   .0512489     1.01   0.324    -.0553214    .1592091\n       _cons |   .1612801   .0401323     4.02   0.001     .0772822    .2452781\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_2.log\n  log type:  text\n closed on:  19 Jun 2024, 14:02:47\n----------------------------------------------------------------------------------\n\n. \n. clear\n\n. exit\n\nend of do-file\n\n\nMy code\n\n# Packages ----\n\nlibrary(archive)\nlibrary(haven)\nlibrary(dplyr)\nlibrary(lmtest)\nlibrary(sandwich)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-4.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout &lt;- paste0(dout, \"/datachp4.rds\")\n\nif (!file.exists(fout)) {\n  datachp4 &lt;- read_dta(paste0(dout, \"/data_Chp4.dta\"))\n  saveRDS(datachp4, fout)\n} else {\n  datachp4 &lt;- readRDS(fout) %&gt;%\n    filter(!year %in% c(1972, 1987)) %&gt;%\n    filter(!sic72 %in% c(2067, 2794, 3483)) %&gt;%\n    group_by(year) %&gt;%\n    mutate(wagebill = sum(pay)) %&gt;%\n    ungroup() %&gt;%\n    mutate(share = pay / wagebill) %&gt;%\n    arrange(sic72, year) %&gt;%\n    group_by(sic72) %&gt;%\n    mutate(\n      lagshare = lag(share),\n      ashare = (share + lagshare) / 2,\n      lagnwsh = lag(nwsh),\n      chanwsh = (nwsh - lagnwsh) * 100 / 11\n    ) %&gt;%\n    ungroup() %&gt;%\n    mutate(\n      wchanwsh = chanwsh * ashare,\n      wdlky = dlky * ashare,\n      wdly = dly * ashare,\n      wdsimat1a = dsimat1a * ashare,\n      wdsimat1b = dsimat1a * ashare,\n      diffout = dsimat1a - dsimat1b,\n      wdiffout = (dsimat1a - dsimat1b) * ashare,\n      wcosh_exp = dofsh * ashare,\n      htsh_exp = dhtsh - dofsh,\n      whtsh_exp = (dhtsh - dofsh) * ashare,\n      wcosh_exa = dofsh1 * ashare,\n      htsh_exa = dhtsh1 - dofsh1,\n      whtsh_exa = (dhtsh1 - dofsh1) * ashare,\n      wcosh = ci * ashare,\n      whtsh = dhtsh * ashare\n    )\n}\n\n# Check with the first column of Table 4.4 ----\n\ndatachp4 %&gt;%\n  select(wchanwsh:whtsh) %&gt;%\n  summarise(across(everything(), sum, na.rm = T))\n\n# A tibble: 1 × 15\n  wchanwsh wdlky  wdly wdsimat1a wdsimat1b diffout wdiffout wcosh_exp htsh_exp\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1    0.389 0.706  1.54     0.423     0.423    206.    0.200     0.251     164.\n# ℹ 6 more variables: whtsh_exp &lt;dbl&gt;, wcosh_exa &lt;dbl&gt;, htsh_exa &lt;dbl&gt;,\n#   whtsh_exa &lt;dbl&gt;, wcosh &lt;dbl&gt;, whtsh &lt;dbl&gt;\n\n# Reproduce the rest of the columns in Table 4.4 ----\n\nreg1 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1a + dofsh + htsh_exp,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\n# summary(reg1) # no clustered robust standard errors\ncoeftest(reg1, vcov = vcovCL(reg1, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n              Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept)  0.2028764  0.0428851  4.7307 3.017e-06 ***\ndlky         0.0467948  0.0113832  4.1109 4.702e-05 ***\ndly          0.0197383  0.0063797  3.0939  0.002101 ** \ndsimat1a     0.1966658  0.0962066  2.0442  0.041527 *  \ndofsh        0.1953400  0.0915302  2.1342  0.033381 *  \nhtsh_exp    -0.0650465  0.1371193 -0.4744  0.635464    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg2 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1a + dofsh1 + htsh_exa,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\ncoeftest(reg2, vcov = vcovCL(reg2, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept) 0.2064394  0.0397614  5.1920 3.183e-07 ***\ndlky        0.0444529  0.0113121  3.9297 9.872e-05 ***\ndly         0.0173278  0.0062906  2.7545  0.006121 ** \ndsimat1a    0.2207528  0.0999711  2.2082  0.027746 *  \ndofsh1      0.4309753  0.1671453  2.5784  0.010248 *  \nhtsh_exa    0.0052436  0.0712031  0.0736  0.941328    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg3 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1a + ci + dhtsh,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\ncoeftest(reg3, vcov = vcovCL(reg3, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept) 0.1569685  0.0446895  3.5124 0.0004898 ***\ndlky        0.0399279  0.0087378  4.5696 6.353e-06 ***\ndly         0.0100379  0.0062332  1.6104 0.1080293    \ndsimat1a    0.1346024  0.0883067  1.5243 0.1281605    \nci          0.0180834  0.0066465  2.7208 0.0067708 ** \ndhtsh       0.0324624  0.0519000  0.6255 0.5319791    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Column (1) of table III in Feenstra and Hanson, 1999 ----\n\n# To distinguish narrow and other outsourcing\n\ndatachp4 %&gt;%\n  select(wchanwsh:whtsh) %&gt;%\n  summarise(across(everything(), sum, na.rm = T))\n\n# A tibble: 1 × 15\n  wchanwsh wdlky  wdly wdsimat1a wdsimat1b diffout wdiffout wcosh_exp htsh_exp\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1    0.389 0.706  1.54     0.423     0.423    206.    0.200     0.251     164.\n# ℹ 6 more variables: whtsh_exp &lt;dbl&gt;, wcosh_exa &lt;dbl&gt;, htsh_exa &lt;dbl&gt;,\n#   whtsh_exa &lt;dbl&gt;, wcosh &lt;dbl&gt;, whtsh &lt;dbl&gt;\n\n# Reproduce the rest of the columns in Table III ----\n\nreg4 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1b + diffout + dofsh + htsh_exp,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\ncoeftest(reg4, vcov = vcovCL(reg4, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n              Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept)  0.2069450  0.0415146  4.9849 8.933e-07 ***\ndlky         0.0421152  0.0141103  2.9847  0.002997 ** \ndly          0.0178086  0.0080568  2.2104  0.027592 *  \ndsimat1b     0.2454613  0.1692732  1.4501  0.147746    \ndiffout      0.1213620  0.0457066  2.6552  0.008213 ** \ndofsh        0.2060217  0.1021206  2.0174  0.044257 *  \nhtsh_exp    -0.0392957  0.1289341 -0.3048  0.760683    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg5 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1b + diffout + dofsh1 + htsh_exa,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\ncoeftest(reg5, vcov = vcovCL(reg5, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 0.2137716  0.0390531  5.4739 7.41e-08 ***\ndlky        0.0408212  0.0141101  2.8930 0.004005 ** \ndly         0.0159677  0.0078375  2.0373 0.042215 *  \ndsimat1b    0.2653356  0.1751420  1.5150 0.130497    \ndiffout     0.1537718  0.0502819  3.0582 0.002363 ** \ndofsh1      0.4207269  0.1707522  2.4640 0.014123 *  \nhtsh_exa    0.0143582  0.0722300  0.1988 0.842523    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg6 &lt;- lm(\n  chanwsh ~ dlky + dly + dsimat1b + diffout + ci + dhtsh,\n  data = datachp4,\n  weights = datachp4$ashare\n)\n\ncoeftest(reg6, vcov = vcovCL(reg6, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept) 0.1612801  0.0401323  4.0187 6.883e-05 ***\ndlky        0.0331274  0.0119999  2.7606  0.006010 ** \ndly         0.0068629  0.0087795  0.7817  0.434811    \ndsimat1b    0.1928058  0.1657117  1.1635  0.245257    \ndiffout     0.0380044  0.0539983  0.7038  0.481925    \nci          0.0186984  0.0068931  2.7126  0.006937 ** \ndhtsh       0.0519438  0.0512489  1.0136  0.311350    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Chapter 4. Trade in Intermediate Inputs and Wages</span>"
    ]
  },
  {
    "objectID": "chapter4.html#exercise-3",
    "href": "chapter4.html#exercise-3",
    "title": "Chapter 4. Trade in Intermediate Inputs and Wages",
    "section": "Exercise 3",
    "text": "Exercise 3\nRun the STATA program Problem_4_3a.do to reproduce the regressions in Table 4.5 (i.e. Table I in Feenstra and Hansen, 1999). Then run Problem_4_3b.do to perform the two-step regression, Table IV and Table V in Feenstra and Hanson (1999). Note that Table V is obtained using the coefficients in the first column of Table IV.\n\nFeenstra’s code\n\nPart A\nset mem 3m\n\nlog using c:\\Empirical_Exercise\\Chapter_4\\log_4_3a.log,replace\n\nuse c:\\Empirical_Exercise\\Chapter_4\\data_Chp4.dta, clear\n\nkeep if year==1990\ndrop if sic72==2067\ndrop if sic72==2794\ndrop if sic72==3483\ngen etfp=ptfp-err\ngen adj1=1/(1-amesh)\ngen etfp1=adj1*etfp\ngen dlpvad1=adj1*dlpvad\ngen apsh1=adj1*apsh\ngen ansh1=adj1*ansh\ngen aksh1=adj1*aksh\ngen mshxpr=amsh*dlpmx\ngen eshxpr=aosh*dlpe\n\n* Reproduce Table 4.5 *\n\ngen dlp34=dlp-mshxpr-eshxpr\n\nregress dlp34 ptfp apsh ansh aksh [aw=mvshipsh], robust\n\npreserve\ndrop if sic72==3573\nregress dlp34 ptfp apsh ansh aksh [aw=mvshipsh], robust\n\nregress dlp apsh ansh aksh mshxpr eshxpr [aw=mvshipsh], robust\nrestore\n\nregress dlpvad1 etfp1 apsh1 ansh1 aksh1 [aw=mvshipsh],robust noconstant\n\nregress dlp etfp apsh ansh aksh mshxpr eshxpr [aw=mvshipsh], robust\n\nlog close\nclear\nexit\nOutput:\n. set mem 3m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory            3M    max. data space                  3.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                                 4.994M\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_3a.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_3a.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_3a.log\n  log type:  text\n opened on:  19 Jun 2024, 14:14:42\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-4\\da\n&gt; ta_Chp4.dta, clear\n(Matrl Cons (72 SIC), 67-92)\n\n. \n. keep if year==1990\n(1350 observations deleted)\n\n. drop if sic72==2067\n(1 observation deleted)\n\n. drop if sic72==2794\n(1 observation deleted)\n\n. drop if sic72==3483\n(1 observation deleted)\n\n. gen etfp=ptfp-err\n\n. gen adj1=1/(1-amesh)\n\n. gen etfp1=adj1*etfp\n\n. gen dlpvad1=adj1*dlpvad\n\n. gen apsh1=adj1*apsh\n\n. gen ansh1=adj1*ansh\n\n. gen aksh1=adj1*aksh\n\n. gen mshxpr=amsh*dlpmx\n\n. gen eshxpr=aosh*dlpe\n\n. \n. \n. * Reproduce Table 4.5 *\n. \n. gen dlp34=dlp-mshxpr-eshxpr\n\n. \n. regress dlp34 ptfp apsh ansh aksh [aw=mvshipsh], robust\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  4,   442) =  106.29\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.8957\n                                                       Root MSE      =  .80656\n\n------------------------------------------------------------------------------\n             |               Robust\n       dlp34 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        ptfp |  -.9631819   .0702093   -13.72   0.000    -1.101168   -.8251963\n        apsh |   3.062598    1.22198     2.51   0.013     .6609845    5.464212\n        ansh |   2.294716   1.430073     1.60   0.109    -.5158719    5.105305\n        aksh |   7.887571   .7810006    10.10   0.000     6.352634    9.422507\n       _cons |  -.7051116   .3006016    -2.35   0.019    -1.295898   -.1143256\n------------------------------------------------------------------------------\n\n. \n. preserve\n\n. drop if sic72==3573\n(1 observation deleted)\n\n. regress dlp34 ptfp apsh ansh aksh [aw=mvshipsh], robust\n(sum of wgt is   9.8179e-01)\n\nLinear regression                                      Number of obs =     446\n                                                       F(  4,   441) =   92.17\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.8059\n                                                       Root MSE      =  .74139\n\n------------------------------------------------------------------------------\n             |               Robust\n       dlp34 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        ptfp |  -.7531151   .0751891   -10.02   0.000    -.9008886   -.6053416\n        apsh |   2.427856   1.162844     2.09   0.037      .142451    4.713261\n        ansh |   4.086394   1.722144     2.37   0.018     .7017647    7.471024\n        aksh |   8.058291   .9411699     8.56   0.000     6.208556    9.908027\n       _cons |  -.8249273   .2930995    -2.81   0.005    -1.400973   -.2488819\n------------------------------------------------------------------------------\n\n. \n. regress dlp apsh ansh aksh mshxpr eshxpr [aw=mvshipsh], robust\n(sum of wgt is   9.8179e-01)\n\nLinear regression                                      Number of obs =     446\n                                                       F(  5,   440) =   10.85\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.4289\n                                                       Root MSE      =  1.2034\n\n------------------------------------------------------------------------------\n             |               Robust\n         dlp |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        apsh |   3.605277    1.88524     1.91   0.056    -.0999163    7.310471\n        ansh |   6.202674   4.036466     1.54   0.125    -1.730475    14.13582\n        aksh |   9.535214    2.18722     4.36   0.000     5.236518    13.83391\n      mshxpr |   1.219304   .2471334     4.93   0.000     .7335958    1.705013\n      eshxpr |  -.9301182   .9150299    -1.02   0.310    -2.728491    .8682541\n       _cons |  -1.929187   .9147773    -2.11   0.036    -3.727063   -.1313111\n------------------------------------------------------------------------------\n\n. restore\n\n. \n. regress dlpvad1 etfp1 apsh1 ansh1 aksh1 [aw=mvshipsh],robust noconstant\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  4,   443) =       .\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.9998\n                                                       Root MSE      =  .07762\n\n------------------------------------------------------------------------------\n             |               Robust\n     dlpvad1 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       etfp1 |  -1.000041   .0006831 -1463.88   0.000    -1.001384   -.9986986\n       apsh1 |   4.680657   .0157718   296.77   0.000      4.64966    4.711654\n       ansh1 |   5.482807   .0194677   281.64   0.000     5.444547    5.521068\n       aksh1 |   3.952538   .0083407   473.89   0.000     3.936146     3.96893\n------------------------------------------------------------------------------\n\n. \n. regress dlp etfp apsh ansh aksh mshxpr eshxpr [aw=mvshipsh], robust\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  6,   440) =       .\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.9999\n                                                       Root MSE      =   .0262\n\n------------------------------------------------------------------------------\n             |               Robust\n         dlp |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        etfp |  -1.000358    .000677 -1477.55   0.000    -1.001689   -.9990273\n        apsh |   4.700013    .011911   394.60   0.000     4.676603    4.723422\n        ansh |   5.443315   .0314405   173.13   0.000     5.381523    5.505107\n        aksh |   3.972308   .0150284   264.32   0.000     3.942772    4.001845\n      mshxpr |   .9974072   .0023115   431.50   0.000     .9928643     1.00195\n      eshxpr |   .9961108   .0057421   173.47   0.000     .9848254    1.007396\n       _cons |   .0010799    .005423     0.20   0.842    -.0095784    .0117382\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_3a.log\n  log type:  text\n closed on:  19 Jun 2024, 14:14:44\n----------------------------------------------------------------------------------\n\n. clear\n\n. exit\n\nend of do-file\n\n\nPart B\nset mem 3m\ncapture log close\nlog using c:\\Empirical_Exercise\\Chapter_4\\log_4_3b.log,replace\n\nuse c:\\Empirical_Exercise\\Chapter_4\\data_Chp4, clear\n\nkeep if year==1990\ndrop if sic72==2067\ndrop if sic72==2794\ndrop if sic72==3483\ngen etfp=ptfp-err\ngen adj1=1/(1-amesh)\ngen etfp1=adj1*etfp\ngen dlpvad1=adj1*dlpvad\ngen apsh1=adj1*apsh\ngen ansh1=adj1*ansh\ngen aksh1=adj1*aksh\ngen t4dlpvad=(dlpvad+etfp)*adj1\npreserve\n\n* Reproduce the first column of Table IV  *\n* generating difference measure of outsourcing *\n\ngen dsimatd1=dsimat1a-dsimat1b\n\n* generating difference measure of high tech share *\n\ngen dhtdsh=dhtsh-dofsh\n\n* check whether we are using the right variable as described in table II *\n\nsum dsimatd1 dhtdsh dofsh [aw=mvshipsh]\n\nregress t4dlpvad dsimat1b dsimatd1 dofsh dhtdsh [aw=mvshipsh], cluster(sic2)\n\n* Reproduce Table V using the coefficients in column(1) of Table IV *\n\ngen wt=mvshipsh^.5\ngen apsh5=apsh1*wt\ngen ansh5=ansh1*wt\ngen aksh5=aksh1*wt\ngen narrout=dsimat1b*wt*_coef[dsimat1b]\ngen diffout=dsimatd1*wt*_coef[dsimatd1]\ngen comsh=dofsh*wt*_coef[dofsh]\ngen difcom=dhtdsh*wt*_coef[dhtdsh]\n\nsum narrout diffout comsh difcom\n\nregress narrout apsh5 ansh5 aksh5, noconstant\nregress diffout apsh5 ansh5 aksh5, noconstant\nregress comsh apsh5 ansh5 aksh5, noconstant\nregress difcom apsh5 ansh5 aksh5, noconstant\n\nrestore\n\n* Reproduce column (2) of Table IV *\n\npreserve\n\n* generating difference measure of outsourcing *\n\ngen dsimatd1=dsimat1a-dsimat1b\n\n* generate difference measure of high tech share with ex ante rental price *\n\ngen dhtdsh1=dhtsh1-dofsh1\n\n* check whether we are using the right variable as described in table II *\n\nsum dsimatd1 dhtdsh1 dofsh1 [aw=mvshipsh]\n\nregress t4dlpvad dsimat1b dsimatd1 dofsh1 dhtdsh1 [aw=mvshipsh], cluster(sic2)\n\n* Reproduce column (3) of Table IV *\n\n* generating difference measure of high tech share *\n\ngen dhtdsh=dhtsh-dofsh\n\nregress t4dlpvad dsimat1b dsimatd1 ci dhtsh [aw=mvshipsh], cluster(sic2)\n\nlog close\nclear\n\nexit\nOutput:\n. set mem 3m\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory            3M    max. data space                  3.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                                 4.994M\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_3b.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-4\\log_4_3b.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_3b.log\n  log type:  text\n opened on:  19 Jun 2024, 14:15:50\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-4\\da\n&gt; ta_Chp4, clear\n(Matrl Cons (72 SIC), 67-92)\n\n. \n. keep if year==1990\n(1350 observations deleted)\n\n. drop if sic72==2067\n(1 observation deleted)\n\n. drop if sic72==2794\n(1 observation deleted)\n\n. drop if sic72==3483\n(1 observation deleted)\n\n. gen etfp=ptfp-err\n\n. gen adj1=1/(1-amesh)\n\n. gen etfp1=adj1*etfp\n\n. gen dlpvad1=adj1*dlpvad\n\n. gen apsh1=adj1*apsh\n\n. gen ansh1=adj1*ansh\n\n. gen aksh1=adj1*aksh\n\n. gen t4dlpvad=(dlpvad+etfp)*adj1\n\n. preserve\n\n. \n. * Reproduce the first column of Table IV  *\n. * generating difference measure of outsourcing *\n. \n. gen dsimatd1=dsimat1a-dsimat1b\n\n. \n. * generating difference measure of high tech share *\n. \n. gen dhtdsh=dhtsh-dofsh\n\n. \n. * check whether we are using the right variable as described in table II *\n. \n. sum dsimatd1 dhtdsh dofsh [aw=mvshipsh]\n\n    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max\n-------------+-----------------------------------------------------------------\n    dsimatd1 |     447  .998730832    .1598317   .3220691  -1.763297   2.735888\n      dhtdsh |     447  .998730832    .1281193   .1962393  -.0841524   .9744269\n       dofsh |     447  .998730832    .1983744    .244483  -.3634307   .8313999\n\n. \n. regress t4dlpvad dsimat1b dsimatd1 dofsh dhtdsh [aw=mvshipsh], cluster(sic2)\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  4,    19) =    5.40\n                                                       Prob &gt; F      =  0.0044\n                                                       R-squared     =  0.1534\n                                                       Root MSE      =  .14521\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n    t4dlpvad |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    dsimat1b |   .0635024    .030585     2.08   0.052    -.0005128    .1275177\n    dsimatd1 |   .0788136   .0472159     1.67   0.111    -.0200103    .1776375\n       dofsh |   .1665693   .0658945     2.53   0.021     .0286505    .3044881\n      dhtdsh |    .075982   .0722494     1.05   0.306    -.0752377    .2272016\n       _cons |   4.262727   .0322917   132.01   0.000      4.19514    4.330314\n------------------------------------------------------------------------------\n\n. \n. * Reproduce Table V using the coefficients in column(1) of Table IV *\n. \n. gen wt=mvshipsh^.5\n\n. gen apsh5=apsh1*wt\n\n. gen ansh5=ansh1*wt\n\n. gen aksh5=aksh1*wt\n\n. gen narrout=dsimat1b*wt*_coef[dsimat1b]\n\n. gen diffout=dsimatd1*wt*_coef[dsimatd1]\n\n. gen comsh=dofsh*wt*_coef[dofsh]\n\n. gen difcom=dhtdsh*wt*_coef[dhtdsh]\n\n. \n. sum narrout diffout comsh difcom\n\n    Variable |       Obs        Mean    Std. Dev.       Min        Max\n-------------+--------------------------------------------------------\n     narrout |       447    .0004107    .0012838  -.0077687   .0131523\n     diffout |       447    .0005548    .0012192  -.0053996   .0156501\n       comsh |       447    .0012452    .0021439  -.0028531   .0110437\n      difcom |       447    .0004038    .0007386  -.0009354   .0064305\n\n. \n. regress narrout apsh5 ansh5 aksh5, noconstant\n\n      Source |       SS       df       MS              Number of obs =     447\n-------------+------------------------------           F(  3,   444) =   52.29\n       Model |  .000211586     3  .000070529           Prob &gt; F      =  0.0000\n    Residual |  .000598861   444  1.3488e-06           R-squared     =  0.2611\n-------------+------------------------------           Adj R-squared =  0.2561\n       Total |  .000810447   447  1.8131e-06           Root MSE      =  .00116\n\n------------------------------------------------------------------------------\n     narrout |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       apsh5 |  -.0095155   .0093511    -1.02   0.309    -.0278934    .0088624\n       ansh5 |   .0986666   .0147744     6.68   0.000     .0696303     .127703\n       aksh5 |   .0026378    .003536     0.75   0.456    -.0043116    .0095872\n------------------------------------------------------------------------------\n\n. regress diffout apsh5 ansh5 aksh5, noconstant\n\n      Source |       SS       df       MS              Number of obs =     447\n-------------+------------------------------           F(  3,   444) =   44.65\n       Model |  .000185525     3  .000061842           Prob &gt; F      =  0.0000\n    Residual |  .000615016   444  1.3852e-06           R-squared     =  0.2317\n-------------+------------------------------           Adj R-squared =  0.2266\n       Total |  .000800542   447  1.7909e-06           Root MSE      =  .00118\n\n------------------------------------------------------------------------------\n     diffout |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       apsh5 |   .0203644   .0094764     2.15   0.032     .0017403    .0389885\n       ansh5 |   .0628478   .0149723     4.20   0.000     .0334224    .0922732\n       aksh5 |  -.0011399   .0035834    -0.32   0.751    -.0081824    .0059026\n------------------------------------------------------------------------------\n\n. regress comsh apsh5 ansh5 aksh5, noconstant\n\n      Source |       SS       df       MS              Number of obs =     447\n-------------+------------------------------           F(  3,   444) =  153.17\n       Model |  .001395044     3  .000465015           Prob &gt; F      =  0.0000\n    Residual |  .001347998   444  3.0360e-06           R-squared     =  0.5086\n-------------+------------------------------           Adj R-squared =  0.5053\n       Total |  .002743042   447  6.1366e-06           Root MSE      =  .00174\n\n------------------------------------------------------------------------------\n       comsh |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       apsh5 |  -.0049722   .0140295    -0.35   0.723    -.0325447    .0226004\n       ansh5 |   .2480141   .0221661    11.19   0.000     .2044505    .2915777\n       aksh5 |   .0007009   .0053051     0.13   0.895    -.0097253    .0111272\n------------------------------------------------------------------------------\n\n. regress difcom apsh5 ansh5 aksh5, noconstant\n\n      Source |       SS       df       MS              Number of obs =     447\n-------------+------------------------------           F(  3,   444) =   68.02\n       Model |  .000099567     3  .000033189           Prob &gt; F      =  0.0000\n    Residual |  .000216627   444  4.8790e-07           R-squared     =  0.3149\n-------------+------------------------------           Adj R-squared =  0.3103\n       Total |  .000316194   447  7.0737e-07           Root MSE      =   .0007\n\n------------------------------------------------------------------------------\n      difcom |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       apsh5 |   .0259448   .0056241     4.61   0.000     .0148915     .036998\n       ansh5 |   .0069214   .0088859     0.78   0.436    -.0105422    .0243851\n       aksh5 |   .0043305   .0021267     2.04   0.042     .0001509    .0085102\n------------------------------------------------------------------------------\n\n. \n. restore\n\n. \n. * Reproduce column (2) of Table IV *\n. \n. preserve\n\n. \n. * generating difference measure of outsourcing *\n. \n. gen dsimatd1=dsimat1a-dsimat1b\n\n. \n. * generate difference measure of high tech share with ex ante rental price *\n. \n. gen dhtdsh1=dhtsh1-dofsh1\n\n. \n. * check whether we are using the right variable as described in table II *\n. \n. sum dsimatd1 dhtdsh1 dofsh1 [aw=mvshipsh]\n\n    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max\n-------------+-----------------------------------------------------------------\n    dsimatd1 |     447  .998730832    .1598317   .3220691  -1.763297   2.735888\n     dhtdsh1 |     447  .998730832    .1643722   .1506561   .0204334   .9001704\n      dofsh1 |     447  .998730832    .0534329    .124323  -.2700591   .3795505\n\n. \n. regress t4dlpvad dsimat1b dsimatd1 dofsh1 dhtdsh1 [aw=mvshipsh], cluster(sic2)\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  4,    19) =    2.42\n                                                       Prob &gt; F      =  0.0844\n                                                       R-squared     =  0.1089\n                                                       Root MSE      =  .14898\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n    t4dlpvad |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    dsimat1b |   .0795164    .034676     2.29   0.033     .0069387    .1520942\n    dsimatd1 |     .11368   .0440198     2.58   0.018     .0215455    .2058144\n      dofsh1 |   .1924159   .1083624     1.78   0.092    -.0343891    .4192209\n     dhtdsh1 |  -.0477944   .0820494    -0.58   0.567    -.2195258    .1239369\n       _cons |   4.294261   .0385949   111.27   0.000     4.213481    4.375041\n------------------------------------------------------------------------------\n\n. \n. * Reproduce column (3) of Table IV *\n. \n. * generating difference measure of high tech share *\n. \n. gen dhtdsh=dhtsh-dofsh\n\n. \n. regress t4dlpvad dsimat1b dsimatd1 ci dhtsh [aw=mvshipsh], cluster(sic2)\n(sum of wgt is   9.9873e-01)\n\nLinear regression                                      Number of obs =     447\n                                                       F(  4,    19) =    5.96\n                                                       Prob &gt; F      =  0.0028\n                                                       R-squared     =  0.2129\n                                                       Root MSE      =  .14002\n\n                                  (Std. Err. adjusted for 20 clusters in sic2)\n------------------------------------------------------------------------------\n             |               Robust\n    t4dlpvad |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    dsimat1b |   .0404059   .0295213     1.37   0.187    -.0213829    .1021947\n    dsimatd1 |   .0351687   .0488208     0.72   0.480    -.0670145    .1373518\n          ci |   .0081792   .0045064     1.82   0.085    -.0012528    .0176112\n       dhtsh |    .093074   .0496036     1.88   0.076    -.0107475    .1968955\n       _cons |   4.243861   .0334856   126.74   0.000     4.173775    4.313947\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-4\\log_4_3b.log\n  log type:  text\n closed on:  19 Jun 2024, 14:15:52\n----------------------------------------------------------------------------------\n\n. clear\n\n. \n. exit\n\nend of do-file\n\n\n\nMy code\n\nPart A\n\n# Read and transform ----\n\ndatachp4 &lt;- readRDS(fout) %&gt;%\n  filter(year == 1990) %&gt;%\n  filter(!sic72 %in% c(2067, 2794, 3483)) %&gt;%\n  mutate(\n    etfp = ptfp - err,\n    adj1 = 1 / (1 - amesh),\n    etfp1 = adj1 * etfp,\n    dlpvad1 = adj1 * dlpvad,\n    apsh1 = adj1 * apsh,\n    ansh1 = adj1 * ansh,\n    aksh1 = adj1 * aksh,\n    mshxpr = amsh * dlpmx,\n    eshxpr = aosh * dlpe\n  )\n\n# Reproduce Table 4.5 ----\n\ndatachp4 &lt;- datachp4 %&gt;%\n  mutate(dlp34 = dlp - mshxpr - eshxpr)\n\nreg1 &lt;- lm(\n  dlp34 ~ ptfp + apsh + ansh + aksh,\n  data = datachp4,\n  weights = datachp4$mvshipsh\n)\n\n# HC1 is the Stata default\ncoeftest(reg1, vcov = vcovHC(reg1, type = \"HC1\"))\n\n\nt test of coefficients:\n\n             Estimate Std. Error  t value Pr(&gt;|t|)    \n(Intercept) -0.705112   0.300602  -2.3457  0.01943 *  \nptfp        -0.963182   0.070209 -13.7187  &lt; 2e-16 ***\napsh         3.062598   1.221980   2.5063  0.01256 *  \nansh         2.294716   1.430073   1.6046  0.10929    \naksh         7.887571   0.781001  10.0993  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# there is no equivalent to the Stata command \"preserve\" in R\n# therefore, I make a copy of the data and drop the observations\n\ndatachp4_2 &lt;- datachp4 %&gt;%\n  filter(sic72 != 3573)\n\nreg2 &lt;- lm(\n  dlp34 ~ ptfp + apsh + ansh + aksh,\n  data = datachp4_2,\n  weights = datachp4_2$mvshipsh\n)\n\ncoeftest(reg2, vcov = vcovHC(reg2, type = \"HC1\"))\n\n\nt test of coefficients:\n\n             Estimate Std. Error  t value  Pr(&gt;|t|)    \n(Intercept) -0.824927   0.293099  -2.8145  0.005104 ** \nptfp        -0.753115   0.075189 -10.0163 &lt; 2.2e-16 ***\napsh         2.427856   1.162844   2.0879  0.037384 *  \nansh         4.086394   1.722144   2.3729  0.018079 *  \naksh         8.058291   0.941170   8.5620 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg3 &lt;- lm(\n  dlp ~ apsh + ansh + aksh + mshxpr + eshxpr,\n  data = datachp4_2,\n  weights = datachp4_2$mvshipsh\n)\n\ncoeftest(reg3, vcov = vcovHC(reg3, type = \"HC1\"))\n\n\nt test of coefficients:\n\n            Estimate Std. Error t value  Pr(&gt;|t|)    \n(Intercept) -1.92919    0.91478 -2.1089   0.03552 *  \napsh         3.60528    1.88524  1.9124   0.05648 .  \nansh         6.20267    4.03647  1.5367   0.12510    \naksh         9.53521    2.18722  4.3595 1.625e-05 ***\nmshxpr       1.21930    0.24713  4.9338 1.146e-06 ***\neshxpr      -0.93012    0.91503 -1.0165   0.30995    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nreg4 &lt;- lm(\n  dlpvad1 ~ etfp1 + apsh1 + ansh1 + aksh1 + 0,\n  data = datachp4,\n  weights = datachp4$mvshipsh\n)\n\ncoeftest(reg4, vcov = vcovHC(reg4, type = \"HC1\"))\n\n\nt test of coefficients:\n\n         Estimate  Std. Error  t value  Pr(&gt;|t|)    \netfp1 -1.00004119  0.00068315 -1463.87 &lt; 2.2e-16 ***\napsh1  4.68065661  0.01577181   296.77 &lt; 2.2e-16 ***\nansh1  5.48280782  0.01946769   281.64 &lt; 2.2e-16 ***\naksh1  3.95253801  0.00834071   473.88 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# regress dlp etfp apsh ansh aksh mshxpr eshxpr [aw=mvshipsh], robust\n\nreg5 &lt;- lm(\n  dlp ~ etfp + apsh + ansh + aksh + mshxpr + eshxpr,\n  data = datachp4,\n  weights = datachp4$mvshipsh\n)\n\ncoeftest(reg5, vcov = vcovHC(reg5, type = \"HC1\"))\n\n\nt test of coefficients:\n\n               Estimate  Std. Error    t value Pr(&gt;|t|)    \n(Intercept)  0.00107993  0.00542304     0.1991   0.8422    \netfp        -1.00035789  0.00067704 -1477.5556   &lt;2e-16 ***\napsh         4.70001239  0.01191103   394.5931   &lt;2e-16 ***\nansh         5.44331510  0.03144047   173.1308   &lt;2e-16 ***\naksh         3.97230835  0.01502835   264.3210   &lt;2e-16 ***\nmshxpr       0.99740722  0.00231147   431.5032   &lt;2e-16 ***\neshxpr       0.99611082  0.00574213   173.4741   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nPart B\n\n# Packages ----\n\nlibrary(tidyr)\n\n# Read and transform ----\n\ndatachp4 &lt;- readRDS(fout) %&gt;%\n  filter(year == 1990) %&gt;%\n  filter(!sic72 %in% c(2067, 2794, 3483)) %&gt;%\n  mutate(\n    etfp = ptfp - err,\n    adj1 = 1 / (1 - amesh),\n    etfp1 = adj1 * etfp,\n    dlpvad1 = adj1 * dlpvad,\n    apsh1 = adj1 * apsh,\n    ansh1 = adj1 * ansh,\n    aksh1 = adj1 * aksh,\n    t4dlpvad = (dlpvad + etfp) * adj1\n  )\n\n# Reproduce the first column of Table IV ----\n\n# generating difference measure of outsourcing\n\ndatachp4_2 &lt;- datachp4 %&gt;%\n  mutate(dsimatd1 = dsimat1a - dsimat1b)\n\n# generating difference measure of high tech share\n\ndatachp4_2 &lt;- datachp4_2 %&gt;%\n  mutate(dhtdsh = dhtsh - dofsh)\n\n# check whether we are using the right variable as described in table II\n\n# sum dsimatd1 dhtdsh dofsh [aw=mvshipsh] is particularly hard to replicate\n\n# function to calculate weighted standard deviation\nweighted.sd &lt;- function(x, w) {\n  sqrt(sum(w * (x - weighted.mean(x, w))^2) / sum(w))\n}\n\ndatachp4_2_1 &lt;- datachp4_2 %&gt;%\n  select(dsimatd1, dhtdsh, dofsh) %&gt;%\n  summarise(\n    across(\n      everything(),\n      list(nobs = length, min = min, max = max)\n    )\n  ) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = \"variable\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate_wider_delim(variable, \"_\", names = c(\"var\", \"stat\")) %&gt;%\n  pivot_wider(\n    names_from = stat,\n    values_from = value\n  )\n\ndatachp4_2_2 &lt;- datachp4_2 %&gt;%\n  mutate(across(c(dsimatd1, dhtdsh, dofsh), ~ . * mvshipsh)) %&gt;%\n  select(dsimatd1, dhtdsh, dofsh) %&gt;%\n  summarise(across(everything(), list(wsum = sum))) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = \"variable\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate_wider_delim(variable, \"_\", names = c(\"var\", \"stat\")) %&gt;%\n  pivot_wider(\n    names_from = stat,\n    values_from = value\n  ) %&gt;%\n  rename(weighted_sum = wsum)\n\ndatachp4_2_3 &lt;- datachp4_2 %&gt;%\n  select(dsimatd1, dhtdsh, dofsh, mvshipsh) %&gt;%\n  pivot_longer(\n    cols = c(dsimatd1, dhtdsh, dofsh),\n    names_to = \"var\",\n    values_to = \"val\"\n  ) %&gt;%\n  group_by(var) %&gt;%\n  summarise(weighted_sd = weighted.sd(val, mvshipsh))\n\ndatachp4_2_4 &lt;- datachp4_2 %&gt;%\n  summarise(sum_weights = sum(mvshipsh))\n\ndatachp4_2_1 %&gt;%\n  left_join(datachp4_2_2) %&gt;%\n  left_join(datachp4_2_3) %&gt;%\n  bind_cols(datachp4_2_4)\n\n# A tibble: 3 × 7\n  var       nobs     min   max weighted_sum weighted_sd sum_weights\n  &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n1 dsimatd1   447 -1.76   2.74         0.160       0.322       0.999\n2 dhtdsh     447 -0.0842 0.974        0.128       0.196       0.999\n3 dofsh      447 -0.363  0.831        0.198       0.244       0.999\n\nreg1 &lt;- lm(\n  t4dlpvad ~ dsimat1b + dsimatd1 + dofsh + dhtdsh,\n  data = datachp4_2,\n  weights = datachp4_2$mvshipsh\n)\n\ncoeftest(reg1, vcov = vcovCL(reg1, cluster = datachp4_2$sic2))\n\n\nt test of coefficients:\n\n            Estimate Std. Error  t value Pr(&gt;|t|)    \n(Intercept) 4.262727   0.032292 132.0067  &lt; 2e-16 ***\ndsimat1b    0.063503   0.030585   2.0763  0.03845 *  \ndsimatd1    0.078814   0.047216   1.6692  0.09578 .  \ndofsh       0.166569   0.065895   2.5278  0.01182 *  \ndhtdsh      0.075982   0.072249   1.0517  0.29353    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Reproduce Table V using the coefficients in column(1) of Table IV ----\n\ndatachp4_2 &lt;- datachp4_2 %&gt;%\n  mutate(\n    wt = sqrt(mvshipsh),\n    apsh5 = apsh1 * wt,\n    ansh5 = ansh1 * wt,\n    aksh5 = aksh1 * wt,\n    narrout = dsimat1b * wt * coef(reg1)[\"dsimat1b\"],\n    diffout = dsimatd1 * wt * coef(reg1)[\"dsimatd1\"],\n    comsh = dofsh * wt * coef(reg1)[\"dofsh\"],\n    difcom = dhtdsh * wt * coef(reg1)[\"dhtdsh\"]\n  )\n\ndatachp4_2 %&gt;%\n  select(narrout:difcom) %&gt;%\n  summarise(\n    across(\n      everything(),\n      list(nobs = length, mean = mean, sd = sd, min = min, max = max)\n    )\n  ) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = \"variable\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate_wider_delim(variable, \"_\", names = c(\"var\", \"stat\")) %&gt;%\n  pivot_wider(\n    names_from = stat,\n    values_from = value\n  )\n\n# A tibble: 4 × 6\n  var      nobs     mean       sd       min     max\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 narrout   447 0.000411 0.00128  -0.00777  0.0132 \n2 diffout   447 0.000555 0.00122  -0.00540  0.0157 \n3 comsh     447 0.00125  0.00214  -0.00285  0.0110 \n4 difcom    447 0.000404 0.000739 -0.000935 0.00643\n\nreg2 &lt;- lm(\n  narrout ~ apsh5 + ansh5 + aksh5 + 0,\n  data = datachp4_2\n)\n\nsummary(reg2)\n\n\nCall:\nlm(formula = narrout ~ apsh5 + ansh5 + aksh5 + 0, data = datachp4_2)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-0.0083329 -0.0004728 -0.0002127  0.0000644  0.0119091 \n\nCoefficients:\n       Estimate Std. Error t value Pr(&gt;|t|)    \napsh5 -0.009516   0.009351  -1.018    0.309    \nansh5  0.098667   0.014774   6.678 7.25e-11 ***\naksh5  0.002638   0.003536   0.746    0.456    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.001161 on 444 degrees of freedom\nMultiple R-squared:  0.2611,    Adjusted R-squared:  0.2561 \nF-statistic: 52.29 on 3 and 444 DF,  p-value: &lt; 2.2e-16\n\nreg3 &lt;- lm(\n  diffout ~ apsh5 + ansh5 + aksh5 + 0,\n  data = datachp4_2\n)\n\nsummary(reg3)\n\n\nCall:\nlm(formula = diffout ~ apsh5 + ansh5 + aksh5 + 0, data = datachp4_2)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-0.0063691 -0.0003192 -0.0000461  0.0003706  0.0133647 \n\nCoefficients:\n       Estimate Std. Error t value Pr(&gt;|t|)    \napsh5  0.020364   0.009476   2.149   0.0322 *  \nansh5  0.062848   0.014972   4.198 3.26e-05 ***\naksh5 -0.001140   0.003583  -0.318   0.7506    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.001177 on 444 degrees of freedom\nMultiple R-squared:  0.2317,    Adjusted R-squared:  0.2266 \nF-statistic: 44.65 on 3 and 444 DF,  p-value: &lt; 2.2e-16\n\nreg4 &lt;- lm(\n  comsh ~ apsh5 + ansh5 + aksh5 + 0,\n  data = datachp4_2\n)\n\nsummary(reg4)\n\n\nCall:\nlm(formula = comsh ~ apsh5 + ansh5 + aksh5 + 0, data = datachp4_2)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-0.0051922 -0.0009209 -0.0003753  0.0007447  0.0074504 \n\nCoefficients:\n        Estimate Std. Error t value Pr(&gt;|t|)    \napsh5 -0.0049722  0.0140295  -0.354    0.723    \nansh5  0.2480142  0.0221662  11.189   &lt;2e-16 ***\naksh5  0.0007009  0.0053051   0.132    0.895    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.001742 on 444 degrees of freedom\nMultiple R-squared:  0.5086,    Adjusted R-squared:  0.5053 \nF-statistic: 153.2 on 3 and 444 DF,  p-value: &lt; 2.2e-16\n\nreg5 &lt;- lm(\n  difcom ~ apsh5 + ansh5 + aksh5 + 0,\n  data = datachp4_2\n)\n\nsummary(reg5)\n\n\nCall:\nlm(formula = difcom ~ apsh5 + ansh5 + aksh5 + 0, data = datachp4_2)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-0.0025959 -0.0002751 -0.0000947  0.0001466  0.0058306 \n\nCoefficients:\n      Estimate Std. Error t value Pr(&gt;|t|)    \napsh5 0.025945   0.005624   4.613  5.2e-06 ***\nansh5 0.006921   0.008886   0.779   0.4364    \naksh5 0.004331   0.002127   2.036   0.0423 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0006985 on 444 degrees of freedom\nMultiple R-squared:  0.3149,    Adjusted R-squared:  0.3103 \nF-statistic: 68.02 on 3 and 444 DF,  p-value: &lt; 2.2e-16\n\n# Reproduce column (2) of Table IV ----\n\n## generating difference measure of outsourcing\n\ndatachp4 &lt;- datachp4 %&gt;%\n  mutate(dsimatd1 = dsimat1a - dsimat1b)\n\n## generate difference measure of high tech share with ex ante rental price\n\ndatachp4 &lt;- datachp4 %&gt;%\n  mutate(dhtdsh1 = dhtsh1 - dofsh1)\n\n## check whether we are using the right variable as described in table II\n\ndatachp4 %&gt;%\n  select(dsimatd1, dhtdsh1, dofsh1) %&gt;%\n  summarise(\n    across(\n      everything(),\n      list(nobs = length, min = min, max = max)\n    )\n  ) %&gt;%\n  pivot_longer(\n    cols = everything(),\n    names_to = \"variable\",\n    values_to = \"value\"\n  ) %&gt;%\n  separate_wider_delim(variable, \"_\", names = c(\"var\", \"stat\")) %&gt;%\n  pivot_wider(\n    names_from = stat,\n    values_from = value\n  ) %&gt;%\n  left_join(\n    datachp4 %&gt;%\n      select(dsimatd1, dhtdsh1, dofsh1, mvshipsh) %&gt;%\n      mutate(across(c(dsimatd1, dhtdsh1, dofsh1), ~ . * mvshipsh)) %&gt;%\n      select(-mvshipsh) %&gt;%\n      summarise(across(everything(), list(wsum = sum))) %&gt;%\n      pivot_longer(\n        cols = everything(),\n        names_to = \"variable\",\n        values_to = \"value\"\n      ) %&gt;%\n      separate_wider_delim(variable, \"_\", names = c(\"var\", \"stat\")) %&gt;%\n      pivot_wider(\n        names_from = stat,\n        values_from = value\n      ) %&gt;%\n      rename(weighted_sum = wsum)\n  ) %&gt;%\n  left_join(\n    datachp4 %&gt;%\n      select(dsimatd1, dhtdsh1, dofsh1, mvshipsh) %&gt;%\n      pivot_longer(\n        cols = c(dsimatd1, dhtdsh1, dofsh1),\n        names_to = \"var\",\n        values_to = \"val\"\n      ) %&gt;%\n      group_by(var) %&gt;%\n      summarise(weighted_sd = weighted.sd(val, mvshipsh))\n  ) %&gt;%\n  bind_cols(\n    datachp4 %&gt;%\n      summarise(sum_weights = sum(mvshipsh))\n  )\n\n# A tibble: 3 × 7\n  var       nobs     min   max weighted_sum weighted_sd sum_weights\n  &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n1 dsimatd1   447 -1.76   2.74        0.160        0.322       0.999\n2 dhtdsh1    447  0.0204 0.900       0.164        0.150       0.999\n3 dofsh1     447 -0.270  0.380       0.0534       0.124       0.999\n\n# regress t4dlpvad dsimat1b dsimatd1 dofsh1 dhtdsh1 [aw=mvshipsh], cluster(sic2)\n\nreg2 &lt;- lm(\n  t4dlpvad ~ dsimat1b + dsimatd1 + dofsh1 + dhtdsh1,\n  data = datachp4,\n  weights = datachp4$mvshipsh\n)\n\ncoeftest(reg2, vcov = vcovCL(reg2, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error  t value Pr(&gt;|t|)    \n(Intercept)  4.294261   0.038595 111.2650  &lt; 2e-16 ***\ndsimat1b     0.079517   0.034676   2.2931  0.02231 *  \ndsimatd1     0.113680   0.044020   2.5825  0.01013 *  \ndofsh1       0.192416   0.108362   1.7757  0.07647 .  \ndhtdsh1     -0.047795   0.082049  -0.5825  0.56052    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Reproduce column (3) of Table IV ----\n\n## generating difference measure of high tech share\n\ndatachp4 &lt;- datachp4 %&gt;%\n  mutate(dhtdsh = dhtsh - dofsh)\n\nreg3 &lt;- lm(\n  t4dlpvad ~ dsimat1b + dsimatd1 + ci + dhtsh,\n  data = datachp4,\n  weights = datachp4$mvshipsh\n)\n\ncoeftest(reg3, vcov = vcovCL(reg3, cluster = datachp4$sic2))\n\n\nt test of coefficients:\n\n             Estimate Std. Error  t value Pr(&gt;|t|)    \n(Intercept) 4.2438613  0.0334856 126.7368  &lt; 2e-16 ***\ndsimat1b    0.0404060  0.0295213   1.3687  0.17179    \ndsimatd1    0.0351687  0.0488208   0.7204  0.47168    \nci          0.0081792  0.0045064   1.8150  0.07020 .  \ndhtsh       0.0930741  0.0496036   1.8764  0.06126 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Chapter 4. Trade in Intermediate Inputs and Wages</span>"
    ]
  },
  {
    "objectID": "chapter5.html#documentation",
    "href": "chapter5.html#documentation",
    "title": "Chapter 5. Increasing Returns and the Gravity Equation",
    "section": "Documentation",
    "text": "Documentation\nUS-Canada data for Anderson and van Wincoop (2002)\nThere are a total of 63 US-Canada regions (states, District of Columbia, provinces and territories). They are listed below. The regressions, however, are based on the same 40 states and provinces as in McCallum (these are indicated with a star below).\n\n\n\nCode\nState/Province\n\n\n\n\n1\nAlabama*\n\n\n2\nAlaska\n\n\n3\nArizona*\n\n\n4\nArkansas\n\n\n5\nCalifornia*\n\n\n6\nColorado\n\n\n7\nConnecticut\n\n\n8\nDelaware\n\n\n9\nFlorida*\n\n\n10\nGeorgia*\n\n\n11\nHawaii\n\n\n12\nIdaho*\n\n\n13\nIllinois*\n\n\n14\nIndiana*\n\n\n15\nIowa\n\n\n16\nKansas\n\n\n17\nKentucky*\n\n\n18\nLouisiana*\n\n\n19\nMaine*\n\n\n20\nMaryland*\n\n\n21\nMassachusetts*\n\n\n22\nMichigan*\n\n\n23\nMinnesota*\n\n\n24\nMississippi\n\n\n25\nMissouri*\n\n\n26\nMontana*\n\n\n27\nNebraska\n\n\n28\nNevada\n\n\n29\nNew Hampshire*\n\n\n30\nNew Jersey*\n\n\n31\nNew Mexico\n\n\n32\nNew York*\n\n\n33\nNorth Carolina*\n\n\n34\nNorth Dakota*\n\n\n35\nOhio*\n\n\n36\nOklahoma\n\n\n37\nOregon\n\n\n38\nPennsylvania*\n\n\n39\nRhode Island\n\n\n40\nSouth Carolina\n\n\n41\nSouth Dakota\n\n\n42\nTennessee*\n\n\n43\nTexas*\n\n\n44\nUtah\n\n\n45\nVermont*\n\n\n46\nVirginia*\n\n\n47\nWashington*\n\n\n48\nWest Virginia\n\n\n49\nWisconsin*\n\n\n50\nWyoming\n\n\n51\nDist. of Col.\n\n\n52\nAlberta*\n\n\n53\nBritish Columbia*\n\n\n54\nManitoba*\n\n\n55\nNew Brunswick*\n\n\n56\nNewfoundland*\n\n\n57\nNW Territories\n\n\n58\nNova Scotia*\n\n\n59\nOntario*\n\n\n60\nPrince Edward Island*\n\n\n61\nQuebec*\n\n\n62\nSaskatchewan*\n\n\n63\nYukon Territory\n\n\n\nData files:\n\ndist.csv: Contains distances between the 40 regions listed above. The distances are in kilometers and are between the capitals of the regions.\ngdp_ce_93.csv and gdp_ci_93.csv: Contains nominal GDP in millions of Canadian dollars in 1993 for the 40 regions above.\ntrade_93.csv\n\nContains 1993 trade data between the 40 regions listed above, in US dollars. The indicator variables 1_ex and 1_im equal 1 if the exporter or importer is a US state, and 2 for a Canadian province.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Chapter 5. Increasing Returns and the Gravity Equation</span>"
    ]
  },
  {
    "objectID": "chapter5.html#empirical-exercise",
    "href": "chapter5.html#empirical-exercise",
    "title": "Chapter 5. Increasing Returns and the Gravity Equation",
    "section": "Empirical exercise",
    "text": "Empirical exercise\nIn this exercise, you are asked to reproduce the empirical results shown in Table 5.2. There are four datasets available: dist.csv which is distances; gdp_ce_93.csv which is GDP in exporting location in 1993; gdp_ci_93.csv which is GDP in importing location in 1993; and trade_93.csv which is trade in 1993. To complete the exercise, these files should be stored in the directory Chapter-5. After this, run the STATA program data_trans.do, which will convert these datasets to STATA files with the same name. The trade data is already converted into US dollars, but GDP data is in Canadian dollars, so this is converted with the exchange rate 1 Canadian dollar = 0.775134 U.S. dollars."
  },
  {
    "objectID": "chapter5.html#exercise-1",
    "href": "chapter5.html#exercise-1",
    "title": "Chapter 5. Increasing Returns and the Gravity Equation",
    "section": "Exercise 1",
    "text": "Exercise 1\nRun the program gravity_1.do to replicate the gravity equations in columns (1)-(3) of Table 5.2.\n\nFeenstra’s code\nData transformation:\n* Input data set into STATA and save as STATA file *\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\dist.csv\nsort c_e c_i\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\dist,replace\n\nclear\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\trade_93.csv\nsort c_e c_i\n\nmerge c_e c_i using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\dist\ndrop _merge\n\nsort c_e c_i\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\trade_93,replace\n\nclear\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ce_93.csv\ngen gce=gdp_ce*0.775134\ndrop gdp_ce\nren gce gdp_ce\nsort c_e\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ce_93,replace\n\nclear\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ci_93.csv\ngen gci=gdp_ci*0.775134\ndrop gdp_ci\nren gci gdp_ci\nsort c_i\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ci_93,replace\n\nclear\nModels:\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gravity_1.log, replace\n\nset matsize 100\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\trade_93,clear\nsort c_e\nmerge c_e using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ce_93\ndrop _merge\nsort c_i\nmerge c_i using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ci_93\ndrop _merge\ndrop if vx==0\ndrop if dist==0\n\ngen lnvx=log(vx)\ngen lndist=log(dist)\ngen lngdp_ce=log(gdp_ce)\ngen lngdp_ci=log(gdp_ci)\n\n* Estimate Gravity Equation from the Canadian Perspective *\n\npreserve\ngen d_ca=0\nreplace d_ca=1 if (l_ex==2) & (l_im==2)\ndrop if (l_ex==1) & (l_im==1)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_ca\nrestore\n\n* Estimate Gravity Equation from the U.S. Perspective *\n\npreserve\ngen d_us=0\nreplace d_us=1 if (l_ex==1) & (l_im==1)\ndrop if (l_ex==2) & (l_im==2)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_us\nrestore\n\n* Estimate Gravity Equation by Pooling All Data *\n\npreserve\ngen d_ca=0\ngen d_us=0\nreplace d_ca=1 if (l_ex==2) & (l_im==2)\nreplace d_us=1 if (l_ex==1) & (l_im==1)\n\nregress lnvx lngdp_ce lngdp_ci lndist d_ca d_us\nvce\nrestore\n\nclear\n\nlog close\nOutput:\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-5\\gravity_1.log, replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-5\\gravity_1.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-5\\gravity_1.log\n  log type:  text\n opened on:  19 Jun 2024, 13:34:35\n\n. \n. set matsize 100\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           50M    max. data space                 50.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                                51.994M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\tr\n&gt; ade_93,clear\n\n. sort c_e\n\n. merge c_e using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\\n&gt; Chapter-5\\gdp_ce_93\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable c_e does not uniquely identify observations in the master data\n\n. drop _merge\n\n. sort c_i\n\n. merge c_i using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\\n&gt; Chapter-5\\gdp_ci_93\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable c_i does not uniquely identify observations in the master data\n\n. drop _merge\n\n. drop if vx==0\n(49 observations deleted)\n\n. drop if dist==0\n(40 observations deleted)\n\n. \n. gen lnvx=log(vx)\n\n. gen lndist=log(dist)\n\n. gen lngdp_ce=log(gdp_ce)\n\n. gen lngdp_ci=log(gdp_ci)\n\n. \n. * Estimate Gravity Equation from the Canadian Perspective *\n. \n. preserve\n\n. gen d_ca=0\n\n. replace d_ca=1 if (l_ex==2) & (l_im==2)\n(90 real changes made)\n\n. drop if (l_ex==1) & (l_im==1)\n(832 observations deleted)\n\n. \n. regress lnvx lngdp_ce lngdp_ci lndist d_ca\n\n      Source |       SS       df       MS              Number of obs =     679\n-------------+------------------------------           F(  4,   674) =  540.02\n       Model |  3020.52204     4  755.130511           Prob &gt; F      =  0.0000\n    Residual |  942.471913   674  1.39832628           R-squared     =  0.7622\n-------------+------------------------------           Adj R-squared =  0.7608\n       Total |  3962.99396   678  5.84512383           Root MSE      =  1.1825\n\n------------------------------------------------------------------------------\n        lnvx |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    lngdp_ce |   1.218705   .0331581    36.75   0.000       1.1536    1.283811\n    lngdp_ci |   .9797792   .0325254    30.12   0.000     .9159159    1.043642\n      lndist |  -1.353149   .0690128   -19.61   0.000    -1.488655   -1.217643\n        d_ca |   2.802034   .1416955    19.78   0.000     2.523816    3.080251\n       _cons |   3.742672   .7721966     4.85   0.000     2.226472    5.258873\n------------------------------------------------------------------------------\n\n. restore\n\n. \n. * Estimate Gravity Equation from the U.S. Perspective *\n. \n. preserve\n\n. gen d_us=0\n\n. replace d_us=1 if (l_ex==1) & (l_im==1)\n(832 real changes made)\n\n. drop if (l_ex==2) & (l_im==2)\n(90 observations deleted)\n\n. \n. regress lnvx lngdp_ce lngdp_ci lndist d_us\n\n      Source |       SS       df       MS              Number of obs =    1421\n-------------+------------------------------           F(  4,  1416) = 2052.61\n       Model |  7089.25392     4  1772.31348           Prob &gt; F      =  0.0000\n    Residual |  1222.63635  1416  .863443752           R-squared     =  0.8529\n-------------+------------------------------           Adj R-squared =  0.8525\n       Total |  8311.89028  1420  5.85344386           Root MSE      =  .92922\n\n------------------------------------------------------------------------------\n        lnvx |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    lngdp_ce |   1.128429    .020453    55.17   0.000     1.088308     1.16855\n    lngdp_ci |   .9820314    .020396    48.15   0.000     .9420218    1.022041\n      lndist |  -1.081888    .035227   -30.71   0.000    -1.150991   -1.012785\n        d_us |   .4059649   .0578667     7.02   0.000     .2924511    .5194786\n       _cons |   2.659586   .4492747     5.92   0.000      1.77827    3.540901\n------------------------------------------------------------------------------\n\n. restore\n\n. \n. * Estimate Gravity Equation by Pooling All Data *\n. \n. preserve\n\n. gen d_ca=0\n\n. gen d_us=0\n\n. replace d_ca=1 if (l_ex==2) & (l_im==2)\n(90 real changes made)\n\n. replace d_us=1 if (l_ex==1) & (l_im==1)\n(832 real changes made)\n\n. \n. regress lnvx lngdp_ce lngdp_ci lndist d_ca d_us\n\n      Source |       SS       df       MS              Number of obs =    1511\n-------------+------------------------------           F(  5,  1505) = 1732.75\n       Model |  7499.70876     5  1499.94175           Prob &gt; F      =  0.0000\n    Residual |  1302.79013  1505  .865641282           R-squared     =  0.8520\n-------------+------------------------------           Adj R-squared =  0.8515\n       Total |  8802.49889  1510  5.82946946           Root MSE      =   .9304\n\n------------------------------------------------------------------------------\n        lnvx |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n    lngdp_ce |   1.132974   .0196797    57.57   0.000     1.094371    1.171577\n    lngdp_ci |   .9742161   .0196294    49.63   0.000     .9357122     1.01272\n      lndist |  -1.110705   .0337347   -32.92   0.000    -1.176877   -1.044533\n        d_ca |   2.751708   .1086755    25.32   0.000     2.538536    2.964879\n        d_us |   .3982716   .0574423     6.93   0.000     .2855962    .5109471\n       _cons |   2.911512   .4267171     6.82   0.000     2.074488    3.748535\n------------------------------------------------------------------------------\n\n. vce\n\nCovariance matrix of coefficients of regress model\n\n        e(V) |   lngdp_ce    lngdp_ci      lndist        d_ca        d_us \n-------------+------------------------------------------------------------\n    lngdp_ce |  .00038729                                                 \n    lngdp_ci |  .00008279   .00038531                                     \n      lndist |  .00001868   .00001752   .00113803                         \n        d_ca |  .00041241   .00040103   .00017043   .01181037             \n        d_us | -.00037488  -.00039315   .00039698   .00085625   .00329962 \n       _cons | -.00524428  -.00520461   -.0089485  -.01157481   .00387661 \n\n        e(V) |      _cons \n-------------+------------\n       _cons |  .18208752 \n\n. restore\n\n. \n. clear\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-5\\gravity_1.log\n  log type:  text\n closed on:  19 Jun 2024, 13:34:38\n----------------------------------------------------------------------------------\n\n. \n. \n. \n. \nend of do-file\n\n\nMy code\n\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(janitor)\nlibrary(dplyr)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-5.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout &lt;- paste0(dout, \"/trade_93.rds\")\n\nif (!file.exists(fout)) {\n  # trade_93 &lt;- read_dta(paste0(dout, \"/trade_93.dta\"))\n  # gdp_ce_93 &lt;- read_dta(paste0(dout, \"/gdp_ce_93.dta\"))\n  # gdp_ci_93 &lt;- read_dta(paste0(dout, \"/gdp_ci_93.dta\"))\n\n  # instead of reading the DTA files, I will read the CSV files and transform\n\n  dist &lt;- read_csv(paste0(dout, \"/dist.csv\")) %&gt;%\n    clean_names() %&gt;%\n    arrange(c_e, c_i)\n\n  trade_93 &lt;- read_csv(paste0(dout, \"/trade_93.csv\")) %&gt;%\n    clean_names() %&gt;%\n    arrange(c_e, c_i)\n\n  trade_93 &lt;- trade_93 %&gt;%\n    left_join(dist, by = c(\"c_e\", \"c_i\"))\n\n  rm(dist)\n\n  gdp_ce_93 &lt;- read_csv(paste0(dout, \"/gdp_ce_93.csv\")) %&gt;%\n    clean_names() %&gt;%\n    mutate(gdp_ce = gdp_ce * 0.775134) %&gt;%\n    arrange(c_e)\n\n  gdp_ci_93 &lt;- read_csv(paste0(dout, \"/gdp_ci_93.csv\")) %&gt;%\n    clean_names() %&gt;%\n    mutate(gdp_ci = gdp_ci * 0.775134) %&gt;%\n    arrange(c_i)\n\n  trade_93 &lt;- trade_93 %&gt;%\n    left_join(gdp_ce_93, by = \"c_e\") %&gt;%\n    left_join(gdp_ci_93, by = \"c_i\") %&gt;%\n    filter(vx != 0, dist != 0) %&gt;%\n    mutate(\n      lnvx = log(vx),\n      lndist = log(dist),\n      lngdp_ce = log(gdp_ce),\n      lngdp_ci = log(gdp_ci)\n    )\n\n  saveRDS(trade_93, fout)\n} else {\n  trade_93 &lt;- readRDS(fout)\n}\n\n# Estimate Gravity Equation from the Canadian Perspective ----\n\ntrade_93_2 &lt;- trade_93 %&gt;%\n  mutate(d_ca = ifelse(l_ex == 2 & l_im == 2, 1, 0)) %&gt;%\n  filter(l_ex != 1 | l_im != 1)\n\nfit_ca &lt;- lm(lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca, data = trade_93_2)\n\nsummary(fit_ca)\n\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca, data = trade_93_2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9344 -0.6428  0.0174  0.6225  4.0379 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  3.74267    0.77220   4.847 1.56e-06 ***\nlngdp_ce     1.21871    0.03316  36.754  &lt; 2e-16 ***\nlngdp_ci     0.97978    0.03253  30.124  &lt; 2e-16 ***\nlndist      -1.35315    0.06901 -19.607  &lt; 2e-16 ***\nd_ca         2.80203    0.14170  19.775  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.183 on 674 degrees of freedom\nMultiple R-squared:  0.7622,    Adjusted R-squared:  0.7608 \nF-statistic:   540 on 4 and 674 DF,  p-value: &lt; 2.2e-16\n\n# Estimate Gravity Equation from the U.S. Perspective ----\n\ntrade_93_3 &lt;- trade_93 %&gt;%\n  mutate(d_us = ifelse(l_ex == 1 & l_im == 1, 1, 0)) %&gt;%\n  filter(l_ex != 2 | l_im != 2)\n\nfit_us &lt;- lm(lnvx ~ lngdp_ce + lngdp_ci + lndist + d_us, data = trade_93_3)\n\nsummary(fit_us)\n\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_us, data = trade_93_3)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.2863 -0.4620 -0.0077  0.4822  3.7858 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  2.65959    0.44927   5.920 4.04e-09 ***\nlngdp_ce     1.12843    0.02045  55.172  &lt; 2e-16 ***\nlngdp_ci     0.98203    0.02040  48.148  &lt; 2e-16 ***\nlndist      -1.08189    0.03523 -30.712  &lt; 2e-16 ***\nd_us         0.40597    0.05787   7.016 3.54e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9292 on 1416 degrees of freedom\nMultiple R-squared:  0.8529,    Adjusted R-squared:  0.8525 \nF-statistic:  2053 on 4 and 1416 DF,  p-value: &lt; 2.2e-16\n\n# Estimate Gravity Equation by Pooling All Data ----\n\ntrade_93_4 &lt;- trade_93 %&gt;%\n  mutate(\n    d_ca = ifelse(l_ex == 2 & l_im == 2, 1, 0),\n    d_us = ifelse(l_ex == 1 & l_im == 1, 1, 0)\n  )\n\nfit_all &lt;- lm(\n  lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca + d_us,\n  data = trade_93_4\n)\n\nsummary(fit_all)\n\n\nCall:\nlm(formula = lnvx ~ lngdp_ce + lngdp_ci + lndist + d_ca + d_us, \n    data = trade_93_4)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.2531 -0.4630 -0.0099  0.4902  3.8101 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  2.91151    0.42672   6.823 1.29e-11 ***\nlngdp_ce     1.13297    0.01968  57.571  &lt; 2e-16 ***\nlngdp_ci     0.97422    0.01963  49.630  &lt; 2e-16 ***\nlndist      -1.11070    0.03373 -32.925  &lt; 2e-16 ***\nd_ca         2.75171    0.10868  25.320  &lt; 2e-16 ***\nd_us         0.39827    0.05744   6.933 6.08e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9304 on 1505 degrees of freedom\nMultiple R-squared:  0.852, Adjusted R-squared:  0.8515 \nF-statistic:  1733 on 5 and 1505 DF,  p-value: &lt; 2.2e-16\n\nvcov(fit_all)\n\n             (Intercept)      lngdp_ce      lngdp_ci        lndist\n(Intercept)  0.182087515 -5.244280e-03 -5.204609e-03 -8.948498e-03\nlngdp_ce    -0.005244280  3.872922e-04  8.278679e-05  1.867887e-05\nlngdp_ci    -0.005204609  8.278679e-05  3.853139e-04  1.752375e-05\nlndist      -0.008948498  1.867887e-05  1.752375e-05  1.138030e-03\nd_ca        -0.011574809  4.124081e-04  4.010346e-04  1.704325e-04\nd_us         0.003876605 -3.748832e-04 -3.931548e-04  3.969829e-04\n                     d_ca          d_us\n(Intercept) -0.0115748090  0.0038766051\nlngdp_ce     0.0004124081 -0.0003748832\nlngdp_ci     0.0004010346 -0.0003931548\nlndist       0.0001704325  0.0003969829\nd_ca         0.0118103647  0.0008562509\nd_us         0.0008562509  0.0032996176",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Chapter 5. Increasing Returns and the Gravity Equation</span>"
    ]
  },
  {
    "objectID": "chapter5.html#exercise-2",
    "href": "chapter5.html#exercise-2",
    "title": "Chapter 5. Increasing Returns and the Gravity Equation",
    "section": "Exercise 2",
    "text": "Exercise 2\nRun the program gravity_2.do to replicate gravity equation using fixed-effects, i.e., column (5) in Table 5.2. Then answer:\n\nHow are these results affected if we allow the provincial and state GDP’s to have coefficients different from unity?\nWhat coefficients are obtained if we introduce separate indicator variables for intra-Canadian and intra-U.S. trade, rather than the border dummy?\n\n\nFeenstra’s code\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gravity_2.log, replace\n\nset matsize 100\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\trade_93,clear\nsort c_e\nmerge c_e using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ce_93\ndrop _merge\nsort c_i\nmerge c_i using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\gdp_ci_93\ndrop _merge\ndrop if vx==0\ndrop if dist==0\n\ntab c_e, gen (ced)\ntab c_i, gen (cid)\n\ngen d_border=1\nreplace d_border=0 if (l_ex==1) & (l_im==1)\nreplace d_border=0 if (l_ex==2) & (l_im==2)\n\ngen lnvx=log(vx)\ngen lndist=log(dist)\ngen lngdp_ce=log(gdp_ce)\ngen lngdp_ci=log(gdp_ci)\ngen lnn_vx=lnvx-lngdp_ce-lngdp_ci\n\nregress lnn_vx lndist d_border ced* cid*\n\nclear\nlog close\nOutput:\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-5\\gravity_2.log, replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-5\\gravity_2.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-5\\gravity_2.log\n  log type:  text\n opened on:  19 Jun 2024, 13:41:01\n\n. \n. set matsize 100\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           50M    max. data space                 50.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                                51.994M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-5\\tr\n&gt; ade_93,clear\n\n. sort c_e\n\n. merge c_e using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\\n&gt; Chapter-5\\gdp_ce_93\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable c_e does not uniquely identify observations in the master data\n\n. drop _merge\n\n. sort c_i\n\n. merge c_i using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\\n&gt; Chapter-5\\gdp_ci_93\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable c_i does not uniquely identify observations in the master data\n\n. drop _merge\n\n. drop if vx==0\n(49 observations deleted)\n\n. drop if dist==0\n(40 observations deleted)\n\n. \n. tab c_e, gen (ced)\n\n        c_e |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         AB |         39        2.58        2.58\n        Ala |         38        2.51        5.10\n        Ari |         37        2.45        7.54\n         BC |         39        2.58       10.13\n        Cal |         37        2.45       12.57\n        Flo |         39        2.58       15.16\n        Geo |         39        2.58       17.74\n        Ida |         36        2.38       20.12\n        Ill |         39        2.58       22.70\n        Ind |         38        2.51       25.22\n        Ken |         37        2.45       27.66\n        Lou |         36        2.38       30.05\n         MN |         39        2.58       32.63\n         MO |         37        2.45       35.08\n        Mai |         37        2.45       37.52\n        Mas |         39        2.58       40.11\n        Mic |         37        2.45       42.55\n        Min |         38        2.51       45.07\n        Mon |         36        2.38       47.45\n        Mry |         37        2.45       49.90\n         NB |         39        2.58       52.48\n        NHm |         38        2.51       55.00\n        NJr |         39        2.58       57.58\n         NS |         39        2.58       60.16\n        Nca |         39        2.58       62.74\n        Nda |         36        2.38       65.12\n       Nfld |         35        2.32       67.44\n        Nyr |         39        2.58       70.02\n         ON |         39        2.58       72.60\n        Ohi |         37        2.45       75.05\n        PEI |         34        2.25       77.30\n        Pen |         39        2.58       79.88\n        Que |         39        2.58       82.46\n         SK |         39        2.58       85.04\n        Ten |         38        2.51       87.56\n        Tex |         37        2.45       90.01\n        Ver |         37        2.45       92.46\n        Vir |         39        2.58       95.04\n        Was |         36        2.38       97.42\n        Wis |         39        2.58      100.00\n------------+-----------------------------------\n      Total |      1,511      100.00\n\n. tab c_i, gen (cid)\n\n        c_I |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         AB |         39        2.58        2.58\n        Ala |         38        2.51        5.10\n        Ari |         36        2.38        7.48\n         BC |         39        2.58       10.06\n        Cal |         39        2.58       12.64\n        Flo |         39        2.58       15.22\n        Geo |         39        2.58       17.80\n        Ida |         33        2.18       19.99\n        Ill |         39        2.58       22.57\n        Ind |         39        2.58       25.15\n        Ken |         37        2.45       27.60\n        Lou |         36        2.38       29.98\n         MN |         39        2.58       32.56\n         MO |         39        2.58       35.14\n        Mai |         36        2.38       37.52\n        Mas |         37        2.45       39.97\n        Mic |         39        2.58       42.55\n        Min |         39        2.58       45.14\n        Mon |         34        2.25       47.39\n        Mry |         39        2.58       49.97\n         NB |         39        2.58       52.55\n        NHm |         38        2.51       55.06\n        NJr |         39        2.58       57.64\n         NS |         39        2.58       60.23\n        Nca |         39        2.58       62.81\n        Nda |         31        2.05       64.86\n       Nfld |         38        2.51       67.37\n        Nyr |         37        2.45       69.82\n         ON |         39        2.58       72.40\n        Ohi |         38        2.51       74.92\n        PEI |         38        2.51       77.43\n        Pen |         38        2.51       79.95\n        Que |         39        2.58       82.53\n         SK |         39        2.58       85.11\n        Ten |         39        2.58       87.69\n        Tex |         39        2.58       90.27\n        Ver |         33        2.18       92.46\n        Vir |         38        2.51       94.97\n        Was |         37        2.45       97.42\n        Wis |         39        2.58      100.00\n------------+-----------------------------------\n      Total |      1,511      100.00\n\n. \n. gen d_border=1\n\n. replace d_border=0 if (l_ex==1) & (l_im==1)\n(832 real changes made)\n\n. replace d_border=0 if (l_ex==2) & (l_im==2)\n(90 real changes made)\n\n. \n. gen lnvx=log(vx)\n\n. gen lndist=log(dist)\n\n. gen lngdp_ce=log(gdp_ce)\n\n. gen lngdp_ci=log(gdp_ci)\n\n. gen lnn_vx=lnvx-lngdp_ce-lngdp_ci\n\n. \n. regress lnn_vx lndist d_border ced* cid*\nnote: ced39 omitted because of collinearity\nnote: cid37 omitted because of collinearity\n\n      Source |       SS       df       MS              Number of obs =    1511\n-------------+------------------------------           F( 80,  1430) =   35.32\n       Model |  1998.34711    80  24.9793388           Prob &gt; F      =  0.0000\n    Residual |   1011.4731  1430  .707323845           R-squared     =  0.6639\n-------------+------------------------------           Adj R-squared =  0.6451\n       Total |   3009.8202  1510  1.99325841           Root MSE      =  .84103\n\n------------------------------------------------------------------------------\n      lnn_vx |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      lndist |  -1.251681   .0368191   -34.00   0.000    -1.323906   -1.179456\n    d_border |  -1.550514   .0588941   -26.33   0.000    -1.666042   -1.434986\n        ced1 |   1.575054   .1969728     8.00   0.000     1.188667    1.961441\n        ced2 |  -.0615169   .1968394    -0.31   0.755    -.4476419    .3246082\n        ced3 |  -.2180008   .1971536    -1.11   0.269     -.604742    .1687405\n        ced4 |   1.373042   .1968679     6.97   0.000     .9868611    1.759223\n        ced5 |   .3855025    .197204     1.95   0.051    -.0013377    .7723426\n        ced6 |  -.7112586   .1952711    -3.64   0.000    -1.094307   -.3282102\n        ced7 |   -.068018   .1960215    -0.35   0.729    -.4525384    .3165025\n        ced8 |     .26858   .1986056     1.35   0.176    -.1210097    .6581697\n        ced9 |   .2175036   .1965116     1.11   0.269    -.1679784    .6029856\n       ced10 |  -.0031177   .1983064    -0.02   0.987    -.3921204    .3858849\n       ced11 |   .1779582   .1996637     0.89   0.373     -.213707    .5696233\n       ced12 |  -.2567707   .1990797    -1.29   0.197    -.6472903    .1337489\n       ced13 |   1.044481   .1978236     5.28   0.000     .6564256    1.432537\n       ced14 |   .1701477   .1984997     0.86   0.391    -.2192341    .5595295\n       ced15 |  -.1910339   .1989122    -0.96   0.337    -.5812249    .1991571\n       ced16 |  -.3029544   .1964512    -1.54   0.123     -.688318    .0824091\n       ced17 |  -.0113933   .1994526    -0.06   0.954    -.4026443    .3798577\n       ced18 |   .3979938   .1970337     2.02   0.044     .0114877    .7844999\n       ced19 |  -.3888902   .1986962    -1.96   0.051    -.7786574     .000877\n       ced20 |  -.3808243   .1996346    -1.91   0.057    -.7724324    .0107838\n       ced21 |   .4754037   .1983009     2.40   0.017     .0864117    .8643956\n       ced22 |  -.3342633   .1979945    -1.69   0.092    -.7226541    .0541276\n       ced23 |  -.2890499   .1967737    -1.47   0.142    -.6750459    .0969461\n       ced24 |   .7414483   .1978522     3.75   0.000     .3533366     1.12956\n       ced25 |   .0208998   .1962026     0.11   0.915    -.3639759    .4057755\n       ced26 |  -.2802188   .1992561    -1.41   0.160    -.6710844    .1106468\n       ced27 |  -.2037673   .2019207    -1.01   0.313    -.5998598    .1923251\n       ced28 |   -.886426   .1967576    -4.51   0.000     -1.27239   -.5004615\n       ced29 |   .9150161   .1997198     4.58   0.000     .5232408    1.306791\n       ced30 |   .1505522   .1996938     0.75   0.451    -.2411719    .5422764\n       ced31 |   .0338336    .204322     0.17   0.869    -.3669694    .4346365\n       ced32 |  -.2727766   .1970444    -1.38   0.166    -.6593036    .1137504\n       ced33 |   1.116763   .1987298     5.62   0.000       .72693    1.506596\n       ced34 |   .8830361    .197432     4.47   0.000     .4957487    1.270324\n       ced35 |   .2703462   .1977387     1.37   0.172    -.1175428    .6582352\n       ced36 |   .0104498   .1972876     0.05   0.958    -.3765544     .397454\n       ced37 |  -.4834816   .1993893    -2.42   0.015    -.8746085   -.0923547\n       ced38 |  -.7100399   .1965941    -3.61   0.000    -1.095684   -.3243962\n       ced39 |  (omitted)\n       ced40 |    .198035   .1963542     1.01   0.313    -.1871383    .5832082\n        cid1 |   1.680152   .2029079     8.28   0.000     1.282123    2.078181\n        cid2 |  -.1178891   .2007464    -0.59   0.557    -.5116781    .2758998\n        cid3 |   .3834953   .2058763     1.86   0.063    -.0203566    .7873472\n        cid4 |   1.526394   .2034908     7.50   0.000     1.127221    1.925566\n        cid5 |   .6636691   .2025088     3.28   0.001      .266423    1.060915\n        cid6 |    .123873   .1998081     0.62   0.535    -.2680755    .5158215\n        cid7 |   .1817594   .1993881     0.91   0.362    -.2093651    .5728839\n        cid8 |   .2205046   .2089568     1.06   0.291    -.1893901    .6303994\n        cid9 |   .2764433   .1992735     1.39   0.166    -.1144564    .6673429\n       cid10 |   .1159431   .1992318     0.58   0.561    -.2748747     .506761\n       cid11 |   .1272816   .2017003     0.63   0.528    -.2683786    .5229418\n       cid12 |   .1406299   .2038587     0.69   0.490    -.2592642     .540524\n       cid13 |    1.46582   .2017388     7.27   0.000     1.070084    1.861556\n       cid14 |  -.0078626   .1993992    -0.04   0.969    -.3990089    .3832838\n       cid15 |    .364058    .203114     1.79   0.073    -.0343753    .7624914\n       cid16 |   .1078348   .2018047     0.53   0.593    -.2880302    .5036999\n       cid17 |   .2382488   .1991692     1.20   0.232    -.1524464    .6289439\n       cid18 |    .230515   .1994864     1.16   0.248    -.1608024    .6218323\n       cid19 |   .5098527   .2072802     2.46   0.014     .1032468    .9164585\n       cid20 |  -.3389257   .1992385    -1.70   0.089    -.7297569    .0519054\n       cid21 |   1.754684   .2015199     8.71   0.000     1.359378    2.149991\n       cid22 |   .0106125   .2004059     0.05   0.958    -.3825087    .4037336\n       cid23 |  -.0698658    .199243    -0.35   0.726    -.4607058    .3209742\n       cid24 |   .9934234   .2017215     4.92   0.000     .5977216    1.389125\n       cid25 |  -.0952417   .1993355    -0.48   0.633    -.4862632    .2957797\n       cid26 |   .3526411   .2113739     1.67   0.095     -.061995    .7672773\n       cid27 |   1.892756   .2044776     9.26   0.000     1.491648    2.293864\n       cid28 |  -.3546606   .2017692    -1.76   0.079    -.7504559    .0411347\n       cid29 |   1.177096   .2013695     5.85   0.000     .7820845    1.572107\n       cid30 |   .1004037   .2004709     0.50   0.617    -.2928449    .4936523\n       cid31 |   1.255257   .2028449     6.19   0.000     .8573513    1.653162\n       cid32 |    .142753   .2003897     0.71   0.476    -.2503363    .5358422\n       cid33 |   1.354079   .2014154     6.72   0.000     .9589778    1.749181\n       cid34 |   1.397366   .2020603     6.92   0.000        1.001    1.793733\n       cid35 |   .1029397    .199289     0.52   0.606    -.2879904    .4938697\n       cid36 |   .6433019    .200675     3.21   0.001      .249653    1.036951\n       cid37 |  (omitted)\n       cid38 |  -.3321485   .2004144    -1.66   0.098    -.7252863    .0609892\n       cid39 |   .8115608   .2044609     3.97   0.000     .4104853    1.212636\n       cid40 |   .2613272   .1993011     1.31   0.190    -.1296268    .6522811\n       _cons |   5.531002   .3406908    16.23   0.000     4.862695     6.19931\n------------------------------------------------------------------------------\n\n. \n. clear\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-5\\gravity_2.log\n  log type:  text\n closed on:  19 Jun 2024, 13:41:11\n----------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\nMy code\n\ntrade_93 &lt;- readRDS(paste0(dout, \"/trade_93.rds\"))\n\ntrade_93 %&gt;%\n  group_by(c_e) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 40 × 4\n   c_e    freq percent   cum\n   &lt;chr&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 AB       39    2.58  2.58\n 2 Ala      38    2.51  5.10\n 3 Ari      37    2.45  7.54\n 4 BC       39    2.58 10.1 \n 5 Cal      37    2.45 12.6 \n 6 Flo      39    2.58 15.2 \n 7 Geo      39    2.58 17.7 \n 8 Ida      36    2.38 20.1 \n 9 Ill      39    2.58 22.7 \n10 Ind      38    2.51 25.2 \n# ℹ 30 more rows\n\ntrade_93 %&gt;%\n  group_by(c_i) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 40 × 4\n   c_i    freq percent   cum\n   &lt;chr&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 AB       39    2.58  2.58\n 2 Ala      38    2.51  5.10\n 3 Ari      36    2.38  7.48\n 4 BC       39    2.58 10.1 \n 5 Cal      39    2.58 12.6 \n 6 Flo      39    2.58 15.2 \n 7 Geo      39    2.58 17.8 \n 8 Ida      33    2.18 20.0 \n 9 Ill      39    2.58 22.6 \n10 Ind      39    2.58 25.1 \n# ℹ 30 more rows\n\ntrade_93 &lt;- trade_93 %&gt;%\n  mutate(\n    d_border = case_when(\n      l_ex == 1 & l_im == 1 ~ 0,\n      l_ex == 2 & l_im == 2 ~ 0,\n      TRUE ~ 1\n    ),\n    lnvx = log(vx),\n    lndist = log(dist),\n    lngdp_ce = log(gdp_ce),\n    lngdp_ci = log(gdp_ci),\n    lnn_vx = lnvx - lngdp_ce - lngdp_ci\n  )\n\n# some of the FEs are dropped in Stata\n# the slopes are identical, which is what matters\n\nfit_fe &lt;- lm(\n  lnn_vx ~ lndist + d_border + as.factor(c_e) + as.factor(c_i),\n  data = trade_93\n)\n\nsummary(fit_fe)\n\n\nCall:\nlm(formula = lnn_vx ~ lndist + d_border + as.factor(c_e) + as.factor(c_i), \n    data = trade_93)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.1033 -0.3934 -0.0101  0.3892  4.3379 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         8.78621    0.35661  24.638  &lt; 2e-16 ***\nlndist             -1.25168    0.03682 -33.995  &lt; 2e-16 ***\nd_border           -1.55051    0.05889 -26.327  &lt; 2e-16 ***\nas.factor(c_e)Ala  -1.63657    0.19473  -8.404  &lt; 2e-16 ***\nas.factor(c_e)Ari  -1.79305    0.19567  -9.164  &lt; 2e-16 ***\nas.factor(c_e)BC   -0.20201    0.19057  -1.060 0.289297    \nas.factor(c_e)Cal  -1.18955    0.19584  -6.074 1.59e-09 ***\nas.factor(c_e)Flo  -2.28631    0.19321 -11.833  &lt; 2e-16 ***\nas.factor(c_e)Geo  -1.64307    0.19371  -8.482  &lt; 2e-16 ***\nas.factor(c_e)Ida  -1.30647    0.19686  -6.636 4.55e-11 ***\nas.factor(c_e)Ill  -1.35755    0.19407  -6.995 4.06e-12 ***\nas.factor(c_e)Ind  -1.57817    0.19573  -8.063 1.56e-15 ***\nas.factor(c_e)Ken  -1.39710    0.19705  -7.090 2.10e-12 ***\nas.factor(c_e)Lou  -1.83182    0.19702  -9.298  &lt; 2e-16 ***\nas.factor(c_e)Mai  -1.76609    0.19648  -8.989  &lt; 2e-16 ***\nas.factor(c_e)Mas  -1.87801    0.19402  -9.679  &lt; 2e-16 ***\nas.factor(c_e)Mic  -1.58645    0.19688  -8.058 1.62e-15 ***\nas.factor(c_e)Min  -1.17706    0.19477  -6.043 1.92e-09 ***\nas.factor(c_e)MN   -0.53057    0.19094  -2.779 0.005528 ** \nas.factor(c_e)MO   -1.40491    0.19627  -7.158 1.31e-12 ***\nas.factor(c_e)Mon  -1.96394    0.19711  -9.964  &lt; 2e-16 ***\nas.factor(c_e)Mry  -1.95588    0.19703  -9.927  &lt; 2e-16 ***\nas.factor(c_e)NB   -1.09965    0.19128  -5.749 1.10e-08 ***\nas.factor(c_e)Nca  -1.55415    0.19384  -8.018 2.22e-15 ***\nas.factor(c_e)Nda  -1.85527    0.19711  -9.412  &lt; 2e-16 ***\nas.factor(c_e)Nfld -1.77882    0.19609  -9.071  &lt; 2e-16 ***\nas.factor(c_e)NHm  -1.90932    0.19548  -9.767  &lt; 2e-16 ***\nas.factor(c_e)NJr  -1.86410    0.19427  -9.595  &lt; 2e-16 ***\nas.factor(c_e)NS   -0.83361    0.19096  -4.365 1.36e-05 ***\nas.factor(c_e)Nyr  -2.46148    0.19431 -12.668  &lt; 2e-16 ***\nas.factor(c_e)Ohi  -1.42450    0.19713  -7.226 8.06e-13 ***\nas.factor(c_e)ON   -0.66004    0.19239  -3.431 0.000619 ***\nas.factor(c_e)PEI  -1.54122    0.19807  -7.781 1.37e-14 ***\nas.factor(c_e)Pen  -1.84783    0.19448  -9.501  &lt; 2e-16 ***\nas.factor(c_e)Que  -0.45829    0.19160  -2.392 0.016889 *  \nas.factor(c_e)SK   -0.69202    0.19069  -3.629 0.000295 ***\nas.factor(c_e)Ten  -1.30471    0.19528  -6.681 3.39e-11 ***\nas.factor(c_e)Tex  -1.56460    0.19550  -8.003 2.49e-15 ***\nas.factor(c_e)Ver  -2.05854    0.19683 -10.458  &lt; 2e-16 ***\nas.factor(c_e)Vir  -2.28509    0.19413 -11.771  &lt; 2e-16 ***\nas.factor(c_e)Was  -1.57505    0.19697  -7.996 2.62e-15 ***\nas.factor(c_e)Wis  -1.37702    0.19395  -7.100 1.96e-12 ***\nas.factor(c_i)Ala  -1.79804    0.19474  -9.233  &lt; 2e-16 ***\nas.factor(c_i)Ari  -1.29666    0.19730  -6.572 6.94e-11 ***\nas.factor(c_i)BC   -0.15376    0.19057  -0.807 0.419890    \nas.factor(c_i)Cal  -1.01648    0.19331  -5.258 1.68e-07 ***\nas.factor(c_i)Flo  -1.55628    0.19321  -8.055 1.66e-15 ***\nas.factor(c_i)Geo  -1.49839    0.19371  -7.735 1.94e-14 ***\nas.factor(c_i)Ida  -1.45965    0.20150  -7.244 7.09e-13 ***\nas.factor(c_i)Ill  -1.40371    0.19407  -7.233 7.68e-13 ***\nas.factor(c_i)Ind  -1.56421    0.19444  -8.045 1.80e-15 ***\nas.factor(c_i)Ken  -1.55287    0.19713  -7.877 6.58e-15 ***\nas.factor(c_i)Lou  -1.53952    0.19714  -7.809 1.11e-14 ***\nas.factor(c_i)Mai  -1.31609    0.19785  -6.652 4.11e-11 ***\nas.factor(c_i)Mas  -1.57232    0.19662  -7.997 2.61e-15 ***\nas.factor(c_i)Mic  -1.44190    0.19428  -7.422 1.98e-13 ***\nas.factor(c_i)Min  -1.44964    0.19353  -7.490 1.20e-13 ***\nas.factor(c_i)MN   -0.21433    0.19094  -1.123 0.261830    \nas.factor(c_i)MO   -1.68801    0.19369  -8.715  &lt; 2e-16 ***\nas.factor(c_i)Mon  -1.17030    0.20007  -5.849 6.11e-09 ***\nas.factor(c_i)Mry  -2.01908    0.19434 -10.389  &lt; 2e-16 ***\nas.factor(c_i)NB    0.07453    0.19128   0.390 0.696846    \nas.factor(c_i)Nca  -1.77539    0.19384  -9.159  &lt; 2e-16 ***\nas.factor(c_i)Nda  -1.32751    0.20530  -6.466 1.37e-10 ***\nas.factor(c_i)Nfld  0.21260    0.19185   1.108 0.267961    \nas.factor(c_i)NHm  -1.66954    0.19550  -8.540  &lt; 2e-16 ***\nas.factor(c_i)NJr  -1.75002    0.19427  -9.008  &lt; 2e-16 ***\nas.factor(c_i)NS   -0.68673    0.19096  -3.596 0.000334 ***\nas.factor(c_i)Nyr  -2.03481    0.19697 -10.330  &lt; 2e-16 ***\nas.factor(c_i)Ohi  -1.57975    0.19582  -8.067 1.51e-15 ***\nas.factor(c_i)ON   -0.50306    0.19239  -2.615 0.009024 ** \nas.factor(c_i)PEI  -0.42490    0.19218  -2.211 0.027200 *  \nas.factor(c_i)Pen  -1.53740    0.19580  -7.852 7.98e-15 ***\nas.factor(c_i)Que  -0.32607    0.19160  -1.702 0.089003 .  \nas.factor(c_i)SK   -0.28279    0.19069  -1.483 0.138315    \nas.factor(c_i)Ten  -1.57721    0.19401  -8.130 9.23e-16 ***\nas.factor(c_i)Tex  -1.03685    0.19296  -5.373 9.01e-08 ***\nas.factor(c_i)Ver  -1.68015    0.20291  -8.280 2.79e-16 ***\nas.factor(c_i)Vir  -2.01230    0.19542 -10.297  &lt; 2e-16 ***\nas.factor(c_i)Was  -0.86859    0.19566  -4.439 9.72e-06 ***\nas.factor(c_i)Wis  -1.41883    0.19395  -7.315 4.26e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.841 on 1430 degrees of freedom\nMultiple R-squared:  0.6639,    Adjusted R-squared:  0.6451 \nF-statistic: 35.32 on 80 and 1430 DF,  p-value: &lt; 2.2e-16",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Chapter 5. Increasing Returns and the Gravity Equation</span>"
    ]
  },
  {
    "objectID": "chapter7.html#data-description-for-feenstra-1989",
    "href": "chapter7.html#data-description-for-feenstra-1989",
    "title": "Chapter 7. Import Tariffs and Dumping",
    "section": "Data Description for Feenstra (1989)",
    "text": "Data Description for Feenstra (1989)\nThere are five data sets in excel format: cars.csv, trucks.csv, cycon.csv, cypool.csv, cyship.csv. All of the variables in the data sets are fitted values from instrumental variables regression.\n\n\n\nVariable\nDescription\n\n\n\n\niprice\nImport price\n\n\nusprice\nUS price\n\n\ngprice\nGerman price\n\n\ntariff\nTariff rate\n\n\nincome\nExpenditure on product class\n\n\nlag0\nFirst order polynomial lag on betas\n\n\nlag1\nSecond order polynomial lag on betas\n\n\nlag2\nThird order polynomial lag on betas\n\n\ny\nImport price transformed, y = iprice - income\n\n\nx1\nUS price transformed, usprice - income\n\n\nx2\nGerman price transformed, gprice - income\n\n\nz0\nFirst order polynomial lag transformed\n\n\nz1\nSecond order polynomial lag transformed\n\n\nz2\nThird order polynomial lag transformed\n\n\n\nNote: all the transformations are done to reflect their restrictions. So some are restricted to homogeneity, where others are restricted to symmetry and homogeneity.\n\nExplanation of lag0, lag1 and lag2\nWith a second-order polynomial, \\(\\alpha_i = a + bi + ci^2\\) it follows that\n\\[\\begin{align}\n\\sum_{i=0}^4 \\log(c_t^* s_{t-i}) \\alpha_i &= \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) (a + bi + ci^2) \\\\\n&= a \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) + b \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) i + c \\sum_{i=0}^4 \\log(c_t^* s_{t-i}) i^2.\n\\end{align}\\]\nLetting \\(\\log(c_t^* s_{t-i}) = x_i\\), we can define the three lags appeating in this formula as\n\\[\\begin{align}\n\\text{lag}0 = x_0 + x_1 + x_2 + x_3 + x_4 \\\\\n\\text{lag}1 = 0 + x_1 + 2x_2 + 3x_3 + 4x_4 \\\\\n\\text{lag}2 = 0 + x_1 + 4x_2 + 9x_3 + 16x_4.\n\\end{align}\\]\nThen to compute the total pass-through of the exchange rate, it follow that,\n\\[\\begin{align}\n\\sum_{i=0}^4 \\alpha_i &= \\sum_{i=0}^4 (a + bi + ci^2) \\\\\n&= 5a + b(1 + 2 + 3 + 4) + c(1^2 + 2^2 + 3^2 + 4^2) \\\\\n&= 5a + 10b + 30c.\n\\end{align}\\]\nWhen estimating the equation using lag0, lag1, and lag2, the coefficient estimates that you obtain are a, b, and c, respectively. Using this, you can recover the coefficient estimate and standard error for each individual exchange rate term reported in the Table 7.2. You can always do this by hand, but STATA does offer a command to calculate the linear combination of the estimated coefficients. The syntax for this is,\nlincom lag0 + lag1 + lag2\nThis will calculate the coefficient estimates for the \\(\\log(c_t^* s_{t-1})\\). This is much in a same way as the syntax for test. Lag0 in above command does not refer to the data, but the coefficient estimate associated with lag0.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Chapter 7. Import Tariffs and Dumping</span>"
    ]
  },
  {
    "objectID": "chapter7.html#empirical-exercise",
    "href": "chapter7.html#empirical-exercise",
    "title": "Chapter 7. Import Tariffs and Dumping",
    "section": "Empirical exercise",
    "text": "Empirical exercise\nIn this exercise, you are asked to reproduce some of the empirical results from Feenstra (1989).\nTo complete the exercise, the files “cars.csv, trucks.csv, cycon.csv, cyship.csv, cypool.csv” should be stored in the directory: first-edition/Chapter-7. Each of these can be used in STATA programs “cars.do, trucks.do, cycon.do, cyship.do, cypool.do” to create a dataset with the variables described in “Documentation_Chp7.doc.”"
  },
  {
    "objectID": "chapter7.html#exercise-1",
    "href": "chapter7.html#exercise-1",
    "title": "Chapter 7. Import Tariffs and Dumping",
    "section": "Exercise 1",
    "text": "Exercise 1\nReplicate Table 7.2, i.e., run the specifications of (7.34) without imposing the tests of symmetry or homogeneity. Duplicate all of the coefficients that are reported in this table, except the Durbin-Watson statistics.\n\nFeenstra’s code\n\nCars\nclear\ncapture log close\n\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cars.log, replace\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cars.csv\n* drop if time&lt;=12\nregress iprice time timesq lag0 lag1 lag2 usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity constraint\nregress y time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cars.log, replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cars.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cars.log\n  log type:  text\n opened on:  19 Jun 2024, 13:46:47\n\n. \n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-7\\cars.csv\n(15 vars, 46 obs)\n\n. * drop if time&lt;=12\n. regress iprice time timesq lag0 lag1 lag2 usprice gprice income\n\n      Source |       SS       df       MS              Number of obs =      29\n-------------+------------------------------           F(  8,    20) =  313.58\n       Model |  1.88266593     8  .235333241           Prob &gt; F      =  0.0000\n    Residual |  .015009666    20  .000750483           R-squared     =  0.9921\n-------------+------------------------------           Adj R-squared =  0.9889\n       Total |   1.8976756    28  .067774128           Root MSE      =  .02739\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        time |  -.0071005   .0198015    -0.36   0.724    -.0484056    .0342047\n      timesq |   .2232319   .1698526     1.31   0.204    -.1310743    .5775381\n        lag0 |   .4435311   .1011438     4.39   0.000     .2325488    .6545134\n        lag1 |  -.1156862    .165797    -0.70   0.493    -.4615325    .2301602\n        lag2 |  -.0116016   .0404346    -0.29   0.777    -.0959467    .0727435\n     usprice |   1.002242   .9090603     1.10   0.283    -.8940243    2.898509\n      gprice |   .0838093   .0880309     0.95   0.352      -.09982    .2674386\n      income |  -.0257564   .1138551    -0.23   0.823    -.2632538    .2117411\n       _cons |   3.370612   4.178309     0.81   0.429    -5.345189    12.08641\n------------------------------------------------------------------------------\n\n. \n. *i=0\n. lincom lag0\n\n ( 1)  lag0 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .4435311   .1011438     4.39   0.000     .2325488    .6545134\n------------------------------------------------------------------------------\n\n. \n. *i=1\n. lincom lag0+lag1+lag2\n\n ( 1)  lag0 + lag1 + lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .3162433    .041669     7.59   0.000     .2293232    .4031634\n------------------------------------------------------------------------------\n\n. \n. *i=2\n. lincom lag0+2*lag1+4*lag2\n\n ( 1)  lag0 + 2*lag1 + 4*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1657523   .0782848     2.12   0.047     .0024531    .3290514\n------------------------------------------------------------------------------\n\n. \n. *i=3\n. lincom lag0+3*lag1+9*lag2\n\n ( 1)  lag0 + 3*lag1 + 9*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   -.007942    .051645    -0.15   0.879    -.1156716    .0997877\n------------------------------------------------------------------------------\n\n. \n. *i=4\n. lincom lag0+4*lag1+16*lag2\n\n ( 1)  lag0 + 4*lag1 + 16*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.2048394   .0992571    -2.06   0.052    -.4118862    .0022073\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*lag0+10*lag1+30*lag2\n\n ( 1)  5*lag0 + 10*lag1 + 30*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .7127453   .0974163     7.32   0.000     .5095385     .915952\n------------------------------------------------------------------------------\n\n. \n. *Impose the homogeneity constraint\n. regress y time timesq z0 z1 z2 x1 x2\n\n      Source |       SS       df       MS              Number of obs =      29\n-------------+------------------------------           F(  7,    21) =   88.33\n       Model |  .457112589     7  .065301798           Prob &gt; F      =  0.0000\n    Residual |  .015525208    21  .000739296           R-squared     =  0.9672\n-------------+------------------------------           Adj R-squared =  0.9562\n       Total |  .472637797    28  .016879921           Root MSE      =  .02719\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        time |   .0089206   .0042701     2.09   0.049     .0000405    .0178007\n      timesq |   .1355201    .131858     1.03   0.316    -.1386936    .4097339\n          z0 |    .418623   .0958376     4.37   0.000     .2193179    .6179281\n          z1 |  -.0822192   .1595793    -0.52   0.612    -.4140826    .2496442\n          z2 |  -.0182092   .0393397    -0.46   0.648    -.1000206    .0636022\n          x1 |   .2590963   .1491977     1.74   0.097    -.0511772    .5693698\n          x2 |    .115353   .0787821     1.46   0.158    -.0484832    .2791893\n       _cons |   6.813711   .4488137    15.18   0.000     5.880352     7.74707\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*z0+10*z1+30*z2\n\n ( 1)  5*z0 + 10*z1 + 30*z2 = 0\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .7246472   .0956301     7.58   0.000     .5257736    .9235208\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cars.log\n  log type:  text\n closed on:  19 Jun 2024, 13:46:50\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nCycon\nclear\ncapture log close\n\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cycon.log,replace\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cycon.csv\ndrop if time&lt;=16\ndrop if time&gt;=45\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n     */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cycon.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cycon.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cycon.log\n  log type:  text\n opened on:  19 Jun 2024, 13:48:28\n\n. \n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-7\\cycon.csv\n(19 vars, 57 obs)\n\n. drop if time&lt;=16\n(16 observations deleted)\n\n. drop if time&gt;=45\n(13 observations deleted)\n\n. regress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n&gt;      */ tariff usprice gprice income\n\n      Source |       SS       df       MS              Number of obs =      28\n-------------+------------------------------           F( 12,    15) =   23.08\n       Model |  1.16011255    12  .096676046           Prob &gt; F      =  0.0000\n    Residual |  .062818315    15  .004187888           R-squared     =  0.9486\n-------------+------------------------------           Adj R-squared =  0.9075\n       Total |  1.22293087    27  .045293736           Root MSE      =  .06471\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |   .0634105   .0430635     1.47   0.162    -.0283773    .1551982\n      dummy2 |  -.0305492   .0369325    -0.83   0.421    -.1092689    .0481706\n      dummy3 |   .0397123   .0355224     1.12   0.281     -.036002    .1154265\n        time |  -.0197231   .0600121    -0.33   0.747    -.1476358    .1081896\n      timesq |     .41476   .4312669     0.96   0.351    -.5044635    1.333984\n        lag0 |   .2879891   .2546382     1.13   0.276    -.2547594    .8307377\n        lag1 |  -.1465425   .3537084    -0.41   0.685    -.9004542    .6073692\n        lag2 |   .0306294   .0866307     0.35   0.729    -.1540196    .2152783\n      tariff |   .9493961   .2181512     4.35   0.001     .4844179    1.414374\n     usprice |   .6821239    .597725     1.14   0.272    -.5918968    1.956145\n      gprice |   .0556783   .1064855     0.52   0.609    -.1712902    .2826468\n      income |  -.2273151   1.683928    -0.13   0.894    -3.816524    3.361893\n       _cons |   6.738914   11.55768     0.58   0.569     -17.8957    31.37353\n------------------------------------------------------------------------------\n\n. \n. *i=0\n. lincom lag0\n\n ( 1)  lag0 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .2879891   .2546382     1.13   0.276    -.2547594    .8307377\n------------------------------------------------------------------------------\n\n. \n. *i=1\n. lincom lag0+lag1+lag2\n\n ( 1)  lag0 + lag1 + lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |    .172076   .0947437     1.82   0.089    -.0298654    .3740173\n------------------------------------------------------------------------------\n\n. \n. *i=2\n. lincom lag0+2*lag1+4*lag2\n\n ( 1)  lag0 + 2*lag1 + 4*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1174215   .1450444     0.81   0.431    -.1917333    .4265763\n------------------------------------------------------------------------------\n\n. \n. *i=3\n. lincom lag0+3*lag1+9*lag2\n\n ( 1)  lag0 + 3*lag1 + 9*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1240258   .0837432     1.48   0.159    -.0544686    .3025202\n------------------------------------------------------------------------------\n\n. \n. *i=4\n. lincom lag0+4*lag1+16*lag2\n\n ( 1)  lag0 + 4*lag1 + 16*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1918888   .2302309     0.83   0.418    -.2988368    .6826143\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*lag0+10*lag1+30*lag2\n\n ( 1)  5*lag0 + 10*lag1 + 30*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .8934012   .3594978     2.49   0.025     .1271498    1.659652\n------------------------------------------------------------------------------\n\n. \n. *Impose the homogeneity and symmetry constraints\n. regress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n      Source |       SS       df       MS              Number of obs =      28\n-------------+------------------------------           F( 10,    17) =    8.64\n       Model |  .321112891    10  .032111289           Prob &gt; F      =  0.0001\n    Residual |  .063155914    17  .003715054           R-squared     =  0.8356\n-------------+------------------------------           Adj R-squared =  0.7390\n       Total |  .384268805    27  .014232178           Root MSE      =  .06095\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |     .06846   .0367494     1.86   0.080    -.0090744    .1459945\n      dummy2 |  -.0296761   .0333669    -0.89   0.386    -.1000741    .0407219\n      dummy3 |   .0404237   .0329202     1.23   0.236    -.0290317    .1098792\n        time |   -.005507   .0157472    -0.35   0.731    -.0387307    .0277166\n      timesq |   .3625585    .253875     1.43   0.171    -.1730708    .8981879\n          z0 |   .3294302   .1732048     1.90   0.074        -.036    .6948604\n          z1 |  -.1849915   .2875633    -0.64   0.529    -.7916969     .421714\n          z2 |   .0391241   .0718017     0.54   0.593    -.1123642    .1906124\n          x1 |   .6062422    .501893     1.21   0.244    -.4526596    1.665144\n          x2 |   .0639407   .0948443     0.67   0.509    -.1361634    .2640447\n       _cons |    9.80264   1.904478     5.15   0.000     5.784542    13.82074\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*z0+10*z1+30*z2\n\n ( 1)  5*z0 + 10*z1 + 30*z2 = 0\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .9709581    .144562     6.72   0.000      .665959    1.275957\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cycon.log\n  log type:  text\n closed on:  19 Jun 2024, 13:48:30\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nCypool\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cypool.log,replace\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cypool.csv\n\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n        */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cypool.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cypool.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cypool.log\n  log type:  text\n opened on:  19 Jun 2024, 13:49:29\n\n. \n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-7\\cypool.csv\n(19 vars, 65 obs)\n\n. \n. regress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n&gt;         */ tariff usprice gprice income\n\n      Source |       SS       df       MS              Number of obs =      65\n-------------+------------------------------           F( 12,    52) =   28.69\n       Model |   3.7792523    12  .314937692           Prob &gt; F      =  0.0000\n    Residual |  .570888473    52  .010978624           R-squared     =  0.8688\n-------------+------------------------------           Adj R-squared =  0.8385\n       Total |  4.35014078    64   .06797095           Root MSE      =  .10478\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |   .0415538    .039227     1.06   0.294    -.0371609    .1202686\n      dummy2 |  -.0163882   .0377145    -0.43   0.666     -.092068    .0592915\n      dummy3 |   .0336136   .0373974     0.90   0.373    -.0414297     .108657\n        time |  -.0460622    .025957    -1.77   0.082    -.0981486    .0060242\n      timesq |   .6966283   .3011555     2.31   0.025     .0923156    1.300941\n        lag0 |   .4468833     .20907     2.14   0.037     .0273536    .8664129\n        lag1 |  -.4474712   .3375047    -1.33   0.191    -1.124724    .2297816\n        lag2 |   .1041952   .0844251     1.23   0.223    -.0652161    .2736065\n      tariff |   1.129379   .1548965     7.29   0.000     .8185561    1.440201\n     usprice |   .5715626   .5883761     0.97   0.336    -.6091005    1.752226\n      gprice |   .0630112   .1045199     0.60   0.549    -.1467234    .2727457\n      income |    .015869    .010022     1.58   0.119    -.0042417    .0359797\n       _cons |    5.86047   2.524698     2.32   0.024     .7942919    10.92665\n------------------------------------------------------------------------------\n\n. \n. *i=0\n. lincom lag0\n\n ( 1)  lag0 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .4468833     .20907     2.14   0.037     .0273536    .8664129\n------------------------------------------------------------------------------\n\n. \n. *i=1\n. lincom lag0+lag1+lag2\n\n ( 1)  lag0 + lag1 + lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1036072    .091221     1.14   0.261    -.0794411    .2866556\n------------------------------------------------------------------------------\n\n. \n. *i=2\n. lincom lag0+2*lag1+4*lag2\n\n ( 1)  lag0 + 2*lag1 + 4*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0312784   .1532273    -0.20   0.839    -.3387515    .2761948\n------------------------------------------------------------------------------\n\n. \n. *i=3\n. lincom lag0+3*lag1+9*lag2\n\n ( 1)  lag0 + 3*lag1 + 9*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0422264   .0851726     0.50   0.622    -.1286849    .2131377\n------------------------------------------------------------------------------\n\n. \n. *i=4\n. lincom lag0+4*lag1+16*lag2\n\n ( 1)  lag0 + 4*lag1 + 16*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .3241215   .2208683     1.47   0.148    -.1190832    .7673262\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*lag0+10*lag1+30*lag2\n\n ( 1)  5*lag0 + 10*lag1 + 30*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |     .88556   .2128404     4.16   0.000     .4584645    1.312655\n------------------------------------------------------------------------------\n\n. \n. *Impose the homogeneity and symmetry constraints\n. regress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n      Source |       SS       df       MS              Number of obs =      65\n-------------+------------------------------           F( 10,    54) = 1112.76\n       Model |  126.137525    10  12.6137525           Prob &gt; F      =  0.0000\n    Residual |  .612117901    54  .011335517           R-squared     =  0.9952\n-------------+------------------------------           Adj R-squared =  0.9943\n       Total |  126.749643    64  1.98046316           Root MSE      =  .10647\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |   .0390208   .0398367     0.98   0.332     -.040847    .1188886\n      dummy2 |  -.0079258   .0380454    -0.21   0.836    -.0842022    .0683506\n      dummy3 |   .0384614    .037904     1.01   0.315    -.0375315    .1144543\n        time |   -.016386   .0142608    -1.15   0.256    -.0449772    .0122052\n      timesq |   .3842091   .2086319     1.84   0.071    -.0340725    .8024908\n          z0 |   .4880678   .1718376     2.84   0.006     .1435541    .8325815\n          z1 |   -.432728   .2915576    -1.48   0.144    -1.017266    .1518097\n          z2 |   .0987337   .0738784     1.34   0.187    -.0493836    .2468511\n          x1 |  -.0833764   .1803078    -0.46   0.646    -.4448718     .278119\n          x2 |   -.009202   .0973665    -0.09   0.925      -.20441     .186006\n       _cons |    8.96105      .8661    10.35   0.000     7.224624    10.69748\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*z0+10*z1+30*z2\n\n ( 1)  5*z0 + 10*z1 + 30*z2 = 0\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |    1.07507   .1528333     7.03   0.000     .7686582    1.381483\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cypool.log\n  log type:  text\n closed on:  19 Jun 2024, 13:49:32\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nCyship\nclear\ncapture log close\n\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cyship.log,replace\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\cyship.csv\ndrop if time&lt;=16\nregress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n     */ tariff usprice gprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cyship.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\cyship.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cyship.log\n  log type:  text\n opened on:  19 Jun 2024, 13:51:15\n\n. \n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-7\\cyship.csv\n(19 vars, 57 obs)\n\n. drop if time&lt;=16\n(16 observations deleted)\n\n. regress iprice dummy1 dummy2 dummy3 time timesq lag0 lag1 lag2 /*\n&gt;      */ tariff usprice gprice income\n\n      Source |       SS       df       MS              Number of obs =      37\n-------------+------------------------------           F( 12,    24) =   13.33\n       Model |  2.66760727    12  .222300606           Prob &gt; F      =  0.0000\n    Residual |  .400138786    24  .016672449           R-squared     =  0.8696\n-------------+------------------------------           Adj R-squared =  0.8043\n       Total |  3.06774606    36  .085215168           Root MSE      =  .12912\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |   .0785462   .1458493     0.54   0.595    -.2224719    .3795643\n      dummy2 |   .0405177   .1327231     0.31   0.763    -.2334092    .3144447\n      dummy3 |   .0250007   .0625785     0.40   0.693     -.104155    .1541563\n        time |  -.0778322   .0554157    -1.40   0.173    -.1922045    .0365401\n      timesq |   1.035907    .568177     1.82   0.081    -.1367526    2.208567\n        lag0 |   .7977086   .6650261     1.20   0.242    -.5748378    2.170255\n        lag1 |  -1.112321   1.191004    -0.93   0.360    -3.570432    1.345791\n        lag2 |   .2729264   .3031369     0.90   0.377    -.3527174    .8985702\n      tariff |   1.388199   .2721709     5.10   0.000     .8264657    1.949932\n     usprice |   1.142866   1.998888     0.57   0.573    -2.982636    5.268368\n      gprice |   .1241107    .209419     0.59   0.559    -.3081089    .5563303\n      income |  -.2151571   .5969111    -0.36   0.722    -1.447121    1.016807\n       _cons |   4.611564   6.469095     0.71   0.483    -8.739992    17.96312\n------------------------------------------------------------------------------\n\n. \n. *i=0\n. lincom lag0\n\n ( 1)  lag0 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .7977086   .6650261     1.20   0.242    -.5748378    2.170255\n------------------------------------------------------------------------------\n\n. \n. *i=1\n. lincom lag0+lag1+lag2\n\n ( 1)  lag0 + lag1 + lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0416857   .2597043    -0.16   0.874     -.577689    .4943175\n------------------------------------------------------------------------------\n\n. \n. *i=2\n. lincom lag0+2*lag1+4*lag2\n\n ( 1)  lag0 + 2*lag1 + 4*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.3352272   .5234521    -0.64   0.528    -1.415579    .7451248\n------------------------------------------------------------------------------\n\n. \n. *i=3\n. lincom lag0+3*lag1+9*lag2\n\n ( 1)  lag0 + 3*lag1 + 9*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0829159   .2158146    -0.38   0.704    -.5283353    .3625036\n------------------------------------------------------------------------------\n\n. \n. *i=4\n. lincom lag0+4*lag1+16*lag2\n\n ( 1)  lag0 + 4*lag1 + 16*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .7152483   .7584352     0.94   0.355     -.850085    2.280582\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*lag0+10*lag1+30*lag2\n\n ( 1)  5*lag0 + 10*lag1 + 30*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   1.053128   .5219069     2.02   0.055    -.0240347    2.130291\n------------------------------------------------------------------------------\n\n. \n. *Impose the homogeneity and symmetry constraints\n. regress y dummy1 dummy2 dummy3 time timesq z0 z1 z2 x1 x2\n\n      Source |       SS       df       MS              Number of obs =      37\n-------------+------------------------------           F( 10,    26) =   14.13\n       Model |  2.49470896    10  .249470896           Prob &gt; F      =  0.0000\n    Residual |   .45918364    26  .017660909           R-squared     =  0.8445\n-------------+------------------------------           Adj R-squared =  0.7848\n       Total |   2.9538926    36  .082052572           Root MSE      =  .13289\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      dummy1 |   .0455011   .0952729     0.48   0.637    -.1503351    .2413373\n      dummy2 |   .0311428   .0889305     0.35   0.729    -.1516564    .2139419\n      dummy3 |   .0367732   .0635252     0.58   0.568    -.0938049    .1673512\n        time |  -.0260349   .0241189    -1.08   0.290    -.0756121    .0235423\n      timesq |   .4997075   .3460414     1.44   0.161    -.2115907    1.211006\n          z0 |   .7524749   .3159082     2.38   0.025     .1031163    1.401833\n          z1 |   -.912172   .5807959    -1.57   0.128    -2.106015    .2816711\n          z2 |   .2210294   .1505169     1.47   0.154    -.0883625    .5304214\n          x1 |  -.1613882   .3756296    -0.43   0.671    -.9335059    .6107296\n          x2 |  -.0247239   .1679367    -0.15   0.884    -.3699227    .3204749\n       _cons |   10.24826   1.511092     6.78   0.000     7.142165    13.35435\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*z0+10*z1+30*z2\n\n ( 1)  5*z0 + 10*z1 + 30*z2 = 0\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   1.271538   .2703125     4.70   0.000     .7159023    1.827173\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\cyship.log\n  log type:  text\n closed on:  19 Jun 2024, 13:51:17\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nTrucks\nclear\ncapture log close\n\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\trucks.log, replace\n\ninsheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-7\\trucks.csv\ndrop if time&lt;=12\nregress iprice time timesq lag0 lag1 lag2 tariff usprice income\n\n*i=0\nlincom lag0\n\n*i=1\nlincom lag0+lag1+lag2\n\n*i=2\nlincom lag0+2*lag1+4*lag2\n\n*i=3\nlincom lag0+3*lag1+9*lag2\n\n*i=4\nlincom lag0+4*lag1+16*lag2\n\n*summation of betai's\nlincom 5*lag0+10*lag1+30*lag2\n\n*Impose the homogeneity and symmetry constraints\nregress y time timesq z0 z1 z2 x1\n\n*summation of betai's\nlincom 5*z0+10*z1+30*z2\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. \n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\trucks.log, replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-7\\trucks.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\trucks.log\n  log type:  text\n opened on:  19 Jun 2024, 13:52:25\n\n. \n. insheet using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Ch\n&gt; apter-7\\trucks.csv\n(14 vars, 53 obs)\n\n. drop if time&lt;=12\n(12 observations deleted)\n\n. regress iprice time timesq lag0 lag1 lag2 tariff usprice income\n\n      Source |       SS       df       MS              Number of obs =      41\n-------------+------------------------------           F(  8,    32) =  468.92\n       Model |  2.20983016     8  .276228771           Prob &gt; F      =  0.0000\n    Residual |  .018850254    32   .00058907           R-squared     =  0.9915\n-------------+------------------------------           Adj R-squared =  0.9894\n       Total |  2.22868042    40   .05571701           Root MSE      =  .02427\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        time |   .0352992   .0115245     3.06   0.004     .0118245    .0587738\n      timesq |  -.3687581   .0950987    -3.88   0.000    -.5624678   -.1750484\n        lag0 |   .2817325   .0563137     5.00   0.000     .1670253    .3964397\n        lag1 |  -.1750568    .103425    -1.69   0.100    -.3857266    .0356129\n        lag2 |   .0322891   .0269044     1.20   0.239    -.0225134    .0870917\n      tariff |   .5702031     .13745     4.15   0.000     .2902267    .8501795\n     usprice |   .0294371    .396435     0.07   0.941    -.7780745    .8369488\n      income |  -.0321876   .0586085    -0.55   0.587    -.1515693     .087194\n       _cons |   8.195509   1.925592     4.26   0.000     4.273206    12.11781\n------------------------------------------------------------------------------\n\n. \n. *i=0\n. lincom lag0\n\n ( 1)  lag0 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .2817325   .0563137     5.00   0.000     .1670253    .3964397\n------------------------------------------------------------------------------\n\n. \n. *i=1\n. lincom lag0+lag1+lag2\n\n ( 1)  lag0 + lag1 + lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .1389648   .0300367     4.63   0.000      .077782    .2001476\n------------------------------------------------------------------------------\n\n. \n. *i=2\n. lincom lag0+2*lag1+4*lag2\n\n ( 1)  lag0 + 2*lag1 + 4*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0607753   .0495382     1.23   0.229    -.0401306    .1616813\n------------------------------------------------------------------------------\n\n. \n. *i=3\n. lincom lag0+3*lag1+9*lag2\n\n ( 1)  lag0 + 3*lag1 + 9*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0471641   .0279295     1.69   0.101    -.0097265    .1040548\n------------------------------------------------------------------------------\n\n. \n. *i=4\n. lincom lag0+4*lag1+16*lag2\n\n ( 1)  lag0 + 4*lag1 + 16*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0981312   .0787782     1.25   0.222    -.0623347    .2585971\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*lag0+10*lag1+30*lag2\n\n ( 1)  5*lag0 + 10*lag1 + 30*lag2 = 0\n\n------------------------------------------------------------------------------\n      iprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .6267679   .0805593     7.78   0.000      .462674    .7908619\n------------------------------------------------------------------------------\n\n. \n. *Impose the homogeneity and symmetry constraints\n. regress y time timesq z0 z1 z2 x1\n\n      Source |       SS       df       MS              Number of obs =      41\n-------------+------------------------------           F(  6,    34) =  791.27\n       Model |  2.71482325     6  .452470541           Prob &gt; F      =  0.0000\n    Residual |  .019442165    34  .000571828           R-squared     =  0.9929\n-------------+------------------------------           Adj R-squared =  0.9916\n       Total |  2.73426541    40  .068356635           Root MSE      =  .02391\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n        time |   .0243984   .0032516     7.50   0.000     .0177904    .0310064\n      timesq |  -.2899041   .0503788    -5.75   0.000    -.3922861   -.1875221\n          z0 |    .284604   .0551443     5.16   0.000     .1725374    .3966706\n          z1 |  -.1985585   .0981501    -2.02   0.051    -.3980235    .0009066\n          z2 |    .038167   .0254203     1.50   0.142    -.0134932    .0898273\n          x1 |   .3967109   .0705105     5.63   0.000     .2534164    .5400055\n       _cons |   6.402397   .3544569    18.06   0.000     5.682054     7.12274\n------------------------------------------------------------------------------\n\n. \n. *summation of betai's\n. lincom 5*z0+10*z1+30*z2\n\n ( 1)  5*z0 + 10*z1 + 30*z2 = 0\n\n------------------------------------------------------------------------------\n           y |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         (1) |   .5824464   .0618586     9.42   0.000     .4567346    .7081583\n------------------------------------------------------------------------------\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-7\\trucks.log\n  log type:  text\n closed on:  19 Jun 2024, 13:52:28\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\n\nMy code\n\n# Packages ----\n\nlibrary(archive)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(broom)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-7.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout &lt;- paste0(dout, \"/feenstra_93.rds\")\n\nif (!file.exists(fout)) {\n  feenstra_93 &lt;- list(\n    cars = read_csv(paste0(dout, \"/cars.csv\")),\n    cycon = read_csv(paste0(dout, \"/cycon.csv\")) %&gt;%\n      filter(time &gt; 16 & time &lt; 45),\n    cypool = read_csv(paste0(dout, \"/cypool.csv\")),\n    cyship = read_csv(paste0(dout, \"/cyship.csv\")) %&gt;%\n      filter(time &gt; 16),\n    trucks = read_csv(paste0(dout, \"/trucks.csv\")) %&gt;%\n      filter(time &gt; 12)\n  )\n\n  saveRDS(feenstra_93, fout)\n} else {\n  feenstra_93 &lt;- readRDS(fout)\n}\n\n# Models ----\n\n## Cars ----\n\nmod1 &lt;- lm(\n  iprice ~ time + timesq + lag0 + lag1 + lag2 + usprice + gprice + income,\n  data = feenstra_93$cars\n)\n\nmod1_tidy &lt;- tidy(mod1)\n\n# i = 0\n\nmod1_tidy %&gt;%\n  filter(term == \"lag0\")\n\n# A tibble: 1 × 5\n  term  estimate std.error statistic  p.value\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 lag0     0.444     0.101      4.39 0.000286\n\n# i = 1\n# use the delta method to calculate the standard errors\n# define auxiliary variables and functions\n\nmod1_vcov &lt;- vcov(mod1)\n\nmod1_summ &lt;- summary(mod1)\n\nw &lt;- c(1, 1, 1)\n\nstd_error &lt;- function(w, X, vars) {\n  as.numeric(sqrt(w %*% X[vars, vars] %*% w))\n}\n\np_value &lt;- function(statistic, summary) {\n  as.numeric(2 * pt(-abs(statistic), df = summary$df[2]))\n}\n\nmod1_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(w = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1    0.316    0.0417      7.59 0.000000261\n\n# i = 2\n\nw &lt;- c(1, 2, 4)\n\nmod1_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 2, 4)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.166    0.0783      2.12  0.0470\n\n# i = 3\n\nw &lt;- c(1, 3, 9)\n\nmod1_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 3, 9)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 -0.00794    0.0516    -0.154   0.879\n\n# i = 4\n\nw &lt;- c(1, 4, 16)\n\nmod1_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 4, 16)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   -0.205    0.0993     -2.06  0.0523\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod1_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, mod1_vcov, c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, mod1_summ)\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1    0.713    0.0974      7.32 0.000000450\n\n## Cycon ----\n\nmod2 &lt;- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cycon\n)\n\nmod2_tidy &lt;- tidy(mod2)\n\n# i = 0\n\nmod2_tidy %&gt;%\n  filter(term == \"lag0\")\n\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 lag0     0.288     0.255      1.13   0.276\n\n# i = 1\n\nw &lt;- c(1, 1, 1)\n\nmod2_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(w = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.172    0.0947      1.82  0.0894\n\n# i = 2\n\nw &lt;- c(1, 2, 4)\n\nmod2_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 2, 4)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.117     0.145     0.810   0.431\n\n# i = 3\n\nw &lt;- c(1, 3, 9)\n\nmod2_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 3, 9)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.124    0.0837      1.48   0.159\n\n# i = 4\n\nw &lt;- c(1, 4, 16)\n\nmod2_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 4, 16)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.192     0.230     0.833   0.418\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod2_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.893     0.359      2.49  0.0252\n\n## Cypool ----\n\nmod3 &lt;- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cypool\n)\n\nmod3_tidy &lt;- tidy(mod3)\n\n# i = 0\n\nmod3_tidy %&gt;%\n  filter(term == \"lag0\")\n\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 lag0     0.447     0.209      2.14  0.0373\n\n# i = 1\n\nw &lt;- c(1, 1, 1)\n\nmod3_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(w = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.104    0.0912      1.14   0.261\n\n# i = 2\n\nw &lt;- c(1, 2, 4)\n\nmod3_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 2, 4)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1  -0.0313     0.153    -0.204   0.839\n\n# i = 3\n\nw &lt;- c(1, 3, 9)\n\nmod3_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 3, 9)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   0.0422    0.0852     0.496   0.622\n\n# i = 4\n\nw &lt;- c(1, 4, 16)\n\nmod3_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 4, 16)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.324     0.221      1.47   0.148\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod3_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic  p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1    0.886     0.213      4.16 0.000119\n\n## Cyship ----\n\nmod4 &lt;- lm(\n  iprice ~ dummy1 + dummy2 + dummy3 + time + timesq + lag0 + lag1 + lag2 +\n    tariff + usprice + gprice + income,\n  data = feenstra_93$cyship\n)\n\nmod4_tidy &lt;- tidy(mod4)\n\n# i = 0\n\nmod4_tidy %&gt;%\n  filter(term == \"lag0\")\n\n# A tibble: 1 × 5\n  term  estimate std.error statistic p.value\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 lag0     0.798     0.665      1.20   0.242\n\n# i = 1\n\nw &lt;- c(1, 1, 1)\n\nmod4_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(w = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1  -0.0417     0.260    -0.160   0.874\n\n# i = 2\n\nw &lt;- c(1, 2, 4)\n\nmod4_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 2, 4)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   -0.335     0.523    -0.640   0.528\n\n# i = 3\n\nw &lt;- c(1, 3, 9)\n\nmod4_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 3, 9)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1  -0.0829     0.216    -0.384   0.704\n\n# i = 4\n\nw &lt;- c(1, 4, 16)\n\nmod4_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 4, 16)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1    0.715     0.758     0.943   0.355\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod4_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1     1.05     0.522      2.02  0.0549\n\n## Trucks ----\n\nmod5 &lt;- lm(\n  iprice ~ time + timesq + lag0 + lag1 + lag2 + tariff + usprice + income,\n  data = feenstra_93$trucks\n)\n\nmod5_tidy &lt;- tidy(mod5)\n\n# i = 0\n\nmod5_tidy %&gt;%\n  filter(term == \"lag0\")\n\n# A tibble: 1 × 5\n  term  estimate std.error statistic   p.value\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 lag0     0.282    0.0563      5.00 0.0000197\n\n# i = 1\n\nw &lt;- c(1, 1, 1)\n\nmod5_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(w = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * w),\n    std.error = std_error(w, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic   p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1    0.139    0.0300      4.63 0.0000586\n\n# i = 2\n\nw &lt;- c(1, 2, 4)\n\nmod5_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 2, 4)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   0.0608    0.0495      1.23   0.229\n\n# i = 3\n\nw &lt;- c(1, 3, 9)\n\nmod5_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 3, 9)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   0.0472    0.0279      1.69   0.101\n\n# i = 4\n\nw &lt;- c(1, 4, 16)\n\nmod5_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = c(1, 4, 16)) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1   0.0981    0.0788      1.25   0.222\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod5_tidy %&gt;%\n  filter(term %in% c(\"lag0\", \"lag1\", \"lag2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5), c(\"lag0\", \"lag1\", \"lag2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic       p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1    0.627    0.0806      7.78 0.00000000713",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Chapter 7. Import Tariffs and Dumping</span>"
    ]
  },
  {
    "objectID": "chapter7.html#exercise-2",
    "href": "chapter7.html#exercise-2",
    "title": "Chapter 7. Import Tariffs and Dumping",
    "section": "Exercise 2",
    "text": "Exercise 2\nThen replicate Feenstra’s Table 2 by imposing the tests of homogeneity and symmetry, shown in (7.35a) and (7.35b). Instead of conducting the Wald test, as done in Feenstra (1989), instead conduct the analogous F-test. Do you accept or reject the hypotheses of symmetry and homogeneity?\n\nFeenstra’s code\nIncluded in exercise 1.\n\n\nMy code\n\n## Cars ----\n\n# impose the homogeneity and symmetry constraints\n\nmod1h &lt;- lm(\n  y ~ time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cars\n)\n\nmod1h_tidy &lt;- tidy(mod1h)\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod1h_tidy %&gt;%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod1h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod1h))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic     p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1    0.725    0.0956      7.58 0.000000194\n\n## Cycon ----\n\n# impose the homogeneity and symmetry constraints\n\nmod2h &lt;- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cycon\n)\n\nmod2h_tidy &lt;- tidy(mod2h)\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod2h_tidy %&gt;%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod2h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod2h))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic    p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n1    0.971     0.145      6.72 0.00000362\n\n## Cypool ----\n\n# impose the homogeneity and symmetry constraints\n\nmod3h &lt;- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cypool\n)\n\nmod3h_tidy &lt;- tidy(mod3h)\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod3h_tidy %&gt;%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod3h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod3h))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic       p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1     1.08     0.153      7.03 0.00000000362\n\n## Cyship ----\n\n# impose the homogeneity and symmetry constraints\n\nmod4h &lt;- lm(\n  y ~ dummy1 + dummy2 + dummy3 + time + timesq + z0 + z1 + z2 + x1 + x2,\n  data = feenstra_93$cyship\n)\n\nmod4h_tidy &lt;- tidy(mod4h)\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod4h_tidy %&gt;%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod4h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod4h))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic   p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1     1.27     0.270      4.70 0.0000734\n\n## Trucks ----\n\n# impose the homogeneity and symmetry constraints\n\nmod5h &lt;- lm(\n  y ~ time + timesq + z0 + z1 + z2 + x1,\n  data = feenstra_93$trucks\n)\n\nmod5h_tidy &lt;- tidy(mod5h)\n\n# summation of betai's\n\nw &lt;- c(5, 10, 30)\n\nmod5h_tidy %&gt;%\n  filter(term %in% c(\"z0\", \"z1\", \"z2\")) %&gt;%\n  mutate(weight = w) %&gt;%\n  summarise(\n    estimate = sum(estimate * weight),\n    std.error = std_error(weight, vcov(mod5h), c(\"z0\", \"z1\", \"z2\")),\n    statistic = estimate / std.error,\n    p.value = p_value(statistic, summary(mod5h))\n  )\n\n# A tibble: 1 × 4\n  estimate std.error statistic  p.value\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1    0.582    0.0619      9.42 5.33e-11",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Chapter 7. Import Tariffs and Dumping</span>"
    ]
  },
  {
    "objectID": "chapter8.html#empirical-exercise",
    "href": "chapter8.html#empirical-exercise",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Empirical exercise",
    "text": "Empirical exercise\nThis exercise is to reproduce regression results Feenstra (1988a). To complete the exercise, the files “car_7990.dta, truck_7990.dta” should be stored in Chapter-8."
  },
  {
    "objectID": "chapter8.html#documentation",
    "href": "chapter8.html#documentation",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Documentation",
    "text": "Documentation\nData Description for Feenstra (1988a):\n\ncar.dta: This STATA file contains car’s various characteristics, such as weight (wght), width (wdth), height (hght), horse power (hs), four-wheel (four), transmission (tran), power steering (ps) and air condition (ac) for 1979-1990. It also includes each model’s sales (quan) and price.\ntruck.dta: This STATA file contains truck’s various characteristics, such as weight (wght), width (wdth), height (hght), horse power (hs), four-wheel (four), transmission (tran), power steering (ps) and air condition (ac) for 1979-1990. It also includes each model’s sale (quan) and price, though sales are missing after 1985.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html#exercise-1",
    "href": "chapter8.html#exercise-1",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Exercise 1",
    "text": "Exercise 1\nRun the programs pindex_c.do, pindex_t.do, unit_value.do to reproduce the price indexes and unit-values for cars and trucks in Table 8.3. What formula is used for the price indexes, and how does this differ from the unit-values?\n\nFeenstra’s code\n\npindex_c.do\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\pindex_c.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\nkeep year model type price quan\n\npreserve\nkeep if year==80\nkeep model type price quan\nren price price_80\nren quan quan_80\nsort model\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_80,replace\nrestore\n\nsort model\nmerge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_80\nkeep if _merge==3\ndrop _merge\n\nsort year model\negen value_80=sum(price_80*quan_80), by(year)\negen value_cp=sum(price*quan_80),by(year)\ngen lasp=value_cp/value_80\n\negen value_c=sum(price*quan), by(year)\negen value_cq=sum(price_80*quan), by(year)\ngen pasp=value_c/value_cq\n \ngen pindex=(lasp*pasp)^0.5\n\ncollapse (mean) pindex, by(year)\nlist\n\nlog close\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\pindex_c.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\pindex_c.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\pindex_c.log\n  log type:  text\n opened on:  19 Jun 2024, 18:40:59\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. keep year model type price quan\n\n. \n. preserve\n\n. keep if year==80\n(260 observations deleted)\n\n. keep model type price quan\n\n. ren price price_80\n\n. ren quan quan_80\n\n. sort model\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\c\n&gt; ar_80,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car\n&gt; _80.dta saved\n\n. restore\n\n. \n. sort model\n\n. merge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-editio\n&gt; n\\Chapter-8\\car_80\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable model does not uniquely identify observations in the master data\n\n. keep if _merge==3\n(55 observations deleted)\n\n. drop _merge\n\n. \n. sort year model\n\n. egen value_80=sum(price_80*quan_80), by(year)\n\n. egen value_cp=sum(price*quan_80),by(year)\n\n. gen lasp=value_cp/value_80\n\n. \n. egen value_c=sum(price*quan), by(year)\n\n. egen value_cq=sum(price_80*quan), by(year)\n\n. gen pasp=value_c/value_cq\n\n.  \n. gen pindex=(lasp*pasp)^0.5\n\n. \n. collapse (mean) pindex, by(year)\n\n. list\n\n     +-----------------+\n     | year     pindex |\n     |-----------------|\n  1. |   79      .9663 |\n  2. |   80          1 |\n  3. |   81   1.197522 |\n  4. |   82   1.289163 |\n  5. |   83   1.312988 |\n     |-----------------|\n  6. |   84   1.389093 |\n  7. |   85   1.477987 |\n  8. |   86   1.668846 |\n  9. |   87   1.885685 |\n 10. |   88    2.04798 |\n     |-----------------|\n 11. |   89   2.082082 |\n 12. |   90    2.10851 |\n     +-----------------+\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\pindex_c.log\n  log type:  text\n closed on:  19 Jun 2024, 18:41:01\n----------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\npindex_t.do\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\pindex_t.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\nkeep year model type price quan\n\npreserve\nkeep if year==80\nkeep model type price quan\nren price price_80\nren quan quan_80\nsort model\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_80,replace\nrestore\n\nsort model\nmerge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_80\nkeep if _merge==3\ndrop _merge\n\nsort year model\negen value_80=sum(price_80*quan_80), by(year)\negen value_cp=sum(price*quan_80),by(year)\ngen lasp=value_cp/value_80\n\negen value_c=sum(price*quan), by(year)\negen value_cq=sum(price_80*quan), by(year)\ngen pasp=value_c/value_cq\n \ngen pindex=(lasp*pasp)^0.5\n\ncollapse (mean) pindex, by(year)\nlist\n\nlog close\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\pindex_t.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\pindex_t.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\pindex_t.log\n  log type:  text\n opened on:  19 Jun 2024, 18:59:29\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tr\n&gt; uck_7990,clear\n\n. keep year model type price quan\n\n. \n. preserve\n\n. keep if year==80\n(110 observations deleted)\n\n. keep model type price quan\n\n. ren price price_80\n\n. ren quan quan_80\n\n. sort model\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\t\n&gt; ruck_80,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tru\n&gt; ck_80.dta saved\n\n. restore\n\n. \n. sort model\n\n. merge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-editio\n&gt; n\\Chapter-8\\truck_80\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable model does not uniquely identify observations in the master data\n\n. keep if _merge==3\n(38 observations deleted)\n\n. drop _merge\n\n. \n. sort year model\n\n. egen value_80=sum(price_80*quan_80), by(year)\n\n. egen value_cp=sum(price*quan_80),by(year)\n\n. gen lasp=value_cp/value_80\n\n. \n. egen value_c=sum(price*quan), by(year)\n\n. egen value_cq=sum(price_80*quan), by(year)\n\n. gen pasp=value_c/value_cq\n(21 missing values generated)\n\n.  \n. gen pindex=(lasp*pasp)^0.5\n(21 missing values generated)\n\n. \n. collapse (mean) pindex, by(year)\n\n. list\n\n     +-----------------+\n     | year     pindex |\n     |-----------------|\n  1. |   79    .970215 |\n  2. |   80          1 |\n  3. |   81   1.278085 |\n  4. |   82   1.309353 |\n  5. |   83   1.210055 |\n     |-----------------|\n  6. |   84   1.230847 |\n  7. |   85   1.252268 |\n  8. |   86          . |\n  9. |   87          . |\n 10. |   88          . |\n     |-----------------|\n 11. |   89          . |\n 12. |   90          . |\n     +-----------------+\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\pindex_t.log\n  log type:  text\n closed on:  19 Jun 2024, 18:59:31\n----------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\nunit_value.do\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\unit_value.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\n\ngen value=price*quan\negen aquan=mean(quan), by(year)\negen avalue=mean(value), by(year)\ngen uvalue=avalue/aquan\ncollapse (mean) uvalue, by(year)\nlist\nclear\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\ngen value=price*quan\negen aquan=mean(quan), by(year)\negen avalue=mean(value), by(year)\ngen uvalue=avalue/aquan\ncollapse (mean) uvalue, by(year)\nlist\nclear\n\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\unit_value.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\unit_value.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\unit_value.log\n  log type:  text\n opened on:  19 Jun 2024, 19:13:08\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. \n. gen value=price*quan\n\n. egen aquan=mean(quan), by(year)\n\n. egen avalue=mean(value), by(year)\n\n. gen uvalue=avalue/aquan\n\n. collapse (mean) uvalue, by(year)\n\n. list\n\n     +-----------------+\n     | year     uvalue |\n     |-----------------|\n  1. |   79   4945.603 |\n  2. |   80   5174.757 |\n  3. |   81   6210.741 |\n  4. |   82   6834.219 |\n  5. |   83   7069.203 |\n     |-----------------|\n  6. |   84   7518.311 |\n  7. |   85   8153.146 |\n  8. |   86   9391.989 |\n  9. |   87   10396.91 |\n 10. |   88    10840.6 |\n     |-----------------|\n 11. |   89   10492.76 |\n 12. |   90   11112.68 |\n     +-----------------+\n\n. clear\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tr\n&gt; uck_7990,clear\n\n. gen value=price*quan\n\n. egen aquan=mean(quan), by(year)\n\n. egen avalue=mean(value), by(year)\n\n. gen uvalue=avalue/aquan\n(45 missing values generated)\n\n. collapse (mean) uvalue, by(year)\n\n. list\n\n     +-----------------+\n     | year     uvalue |\n     |-----------------|\n  1. |   79   4794.177 |\n  2. |   80   4937.291 |\n  3. |   81   6313.539 |\n  4. |   82   6426.264 |\n  5. |   83   6134.027 |\n     |-----------------|\n  6. |   84   6246.728 |\n  7. |   85   6249.927 |\n  8. |   86          . |\n  9. |   87          . |\n 10. |   88          . |\n     |-----------------|\n 11. |   89          . |\n 12. |   90          . |\n     +-----------------+\n\n. clear\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\unit_value.log\n  log type:  text\n closed on:  19 Jun 2024, 19:13:10\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\n\nMy code\n\npindex_c.do\n\n# Packages ----\n\nlibrary(archive)\nlibrary(haven)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(broom)\nlibrary(knitr)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-8.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout &lt;- paste0(dout, \"/feenstra_88.rds\")\n\nif (!file.exists(fout)) {\n  feenstra_88 &lt;- list(\n    car_7990 = read_dta(paste0(dout, \"/car_7990.dta\")),\n    truck_7990 = read_dta(paste0(dout, \"/truck_7990.dta\"))\n  )\n\n  saveRDS(feenstra_88, fout)\n} else {\n  feenstra_88 &lt;- readRDS(fout)\n}\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  select(year, model, type, price, quan) %&gt;%\n  arrange(year, model)\n\ncar_80 &lt;- car_7990 %&gt;%\n  filter(year == 80) %&gt;%\n  select(model, type, price, quan) %&gt;%\n  rename(price_80 = price, quan_80 = quan)\n\ncar_7990 &lt;- car_7990 %&gt;%\n  inner_join(car_80) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_80 = sum(price_80 * quan_80),\n    value_cp = sum(price * quan_80)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(lasp = value_cp / value_80)\n\ncar_7990 &lt;- car_7990 %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_c = sum(price * quan),\n    value_cq = sum(price_80 * quan)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(pasp = value_c / value_cq)\n\ncar_7990 %&gt;%\n  mutate(pindex = sqrt(lasp * pasp)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(pindex = mean(pindex))\n\n# A tibble: 12 × 2\n    year pindex\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1    79  0.966\n 2    80  1    \n 3    81  1.20 \n 4    82  1.29 \n 5    83  1.31 \n 6    84  1.39 \n 7    85  1.48 \n 8    86  1.67 \n 9    87  1.89 \n10    88  2.05 \n11    89  2.08 \n12    90  2.11 \n\n\n\n\npindex_t.do\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  select(year, model, type, price, quan) %&gt;%\n  arrange(year, model)\n\ntruck_80 &lt;- truck_7990 %&gt;%\n  filter(year == 80) %&gt;%\n  select(model, type, price, quan) %&gt;%\n  rename(price_80 = price, quan_80 = quan)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  inner_join(truck_80) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_80 = sum(price_80 * quan_80),\n    value_cp = sum(price * quan_80)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(lasp = value_cp / value_80)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_c = sum(price * quan),\n    value_cq = sum(price_80 * quan)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(pasp = value_c / value_cq)\n\ntruck_7990 %&gt;%\n  mutate(pindex = sqrt(lasp * pasp)) %&gt;%\n  group_by(year) %&gt;%\n  summarise(pindex = mean(pindex))\n\n# A tibble: 12 × 2\n    year  pindex\n   &lt;dbl&gt;   &lt;dbl&gt;\n 1    79   0.970\n 2    80   1    \n 3    81   1.28 \n 4    82   1.31 \n 5    83   1.21 \n 6    84   1.23 \n 7    85   1.25 \n 8    86 NaN    \n 9    87 NaN    \n10    88 NaN    \n11    89 NaN    \n12    90 NaN    \n\n\n\n\nunit_value.do\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  mutate(value = price * quan) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    aquan = mean(quan),\n    avalue = mean(value),\n    uvalue = avalue / aquan\n  )\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  mutate(value = price * quan) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    aquan = mean(quan),\n    avalue = mean(value),\n    uvalue = avalue / aquan\n  )\n\ncar_7990 %&gt;%\n  group_by(year) %&gt;%\n  summarise(uvalue = mean(uvalue))\n\n# A tibble: 12 × 2\n    year uvalue\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1    79  4946.\n 2    80  5175.\n 3    81  6211.\n 4    82  6834.\n 5    83  7069.\n 6    84  7518.\n 7    85  8153.\n 8    86  9392.\n 9    87 10397.\n10    88 10841.\n11    89 10493.\n12    90 11113.\n\ntruck_7990 %&gt;%\n  group_by(year) %&gt;%\n  summarise(uvalue = mean(uvalue))\n\n# A tibble: 12 × 2\n    year uvalue\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1    79  4794.\n 2    80  4937.\n 3    81  6314.\n 4    82  6426.\n 5    83  6134.\n 6    84  6247.\n 7    85  6250.\n 8    86   NaN \n 9    87   NaN \n10    88   NaN \n11    89   NaN \n12    90   NaN",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html#exercise-2",
    "href": "chapter8.html#exercise-2",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Exercise 2",
    "text": "Exercise 2\nRun the program car_reg.do to reproduce the column (1) in Table 8.4, and the program truck_reg.do to reproduce column (2). What weights are being used in the regression, and how does this affect the results?\n\nFeenstra’s code\n\ncar_reg.do\n\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_reg.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\ndrop if year&gt;=86\n\ntab year, gen(yd)\n\nprogram define nlcar\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nexit\n}\nreplace `1'=$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*\n*/+exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*\n*/+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)\n\nend\n\nnl car price\n\ngen winv=1/exp(_b[b2]*yd2+_b[b3]*yd3+_b[b4]*yd4+_b[b5]*yd5+_b[b6]*yd6+_b[b7]*yd7/*\n*/+_b[c1]*wght+_b[c2]*wdth+_b[c3]*hght+_b[c4]*hp+_b[c5]*tran+_b[c6]*ps+_b[c7]*ac+_b[c8])\n\ngen nprice=price*winv\ngen nyd3=yd3*winv\ngen nyd4=yd4*winv\ngen nyd5=yd5*winv\ngen nyd6=yd6*winv\ngen nyd7=yd7*winv\n\nprogram define nlncar\n    version 7.0\n    if \"`1'\"==\"?\"{\n        global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8\"\n        global a3=1\n        global a4=1\n        global a5=1 \n        global a6=1\n        global a7=1\n        global b2=.1    \n        global b3=.1\n        global b4=.1\n        global b5=.1\n        global b6=.1    \n        global b7=.1\n        global c1=.1\n        global c2=.1\n        global c3=.1\n        global c4=.1\n        global c5=.1\n        global c6=.1\n        global c7=.1\n        global c8=.1\n        exit\n    }\n    replace `1'=$a3*nyd3+$a4*nyd4+$a5*nyd5+$a6*nyd6+$a7*nyd7/*\n*/+winv*exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*\n*/+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)\n\nend\n\nnl ncar nprice\nclear\nprogram drop _all\nlog close\nexit\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\car_reg.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\car_reg.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\car_reg.log\n  log type:  text\n opened on:  19 Jun 2024, 19:28:58\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. drop if year&gt;=86\n(105 observations deleted)\n\n. \n. tab year, gen(yd)\n\n       year |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         79 |         21       11.73       11.73\n         80 |         24       13.41       25.14\n         81 |         24       13.41       38.55\n         82 |         24       13.41       51.96\n         83 |         26       14.53       66.48\n         84 |         29       16.20       82.68\n         85 |         31       17.32      100.00\n------------+-----------------------------------\n      Total |        179      100.00\n\n. \n. program define nlcar\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global b2=.1\n 10. global b3=.1\n 11. global b4=.1\n 12. global b5=.1\n 13. global b6=.1\n 14. global b7=.1\n 15. global c1=.1\n 16. global c2=.1\n 17. global c3=.1\n 18. global c4=.1\n 19. global c5=.1\n 20. global c6=.1\n 21. global c7=.1\n 22. global c8=.1\n 23. exit\n 24. }\n 25. replace `1'=$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*\n&gt; */+exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*\n&gt; */+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)\n 26. \n. end\n\n. \n. nl car price\n(obs = 179)\n\nIteration 0:   residual SS =  1.16e+10\n...\nIteration 9:   residual SS =  8.39e+07\nIteration 10:  residual SS =  8.39e+07\n\n      Source |       SS       df       MS            Number of obs =       179\n-------------+------------------------------         F( 19,   160) =   1158.52\n       Model |  1.1541e+10    19   607414473         Prob &gt; F      =    0.0000\n    Residual |    83888568   160   524303.55         R-squared     =    0.9928\n-------------+------------------------------         Adj R-squared =    0.9919\n       Total |  1.1625e+10   179  64942813.2         Root MSE      =  724.0881\n                                                     Res. dev.     =  2845.293\n(car)\n------------------------------------------------------------------------------\n       price |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |  -294.7452   723.3322    -0.41   0.684    -1723.255    1133.765\n          a4 |  -304.9631   714.5517    -0.43   0.670    -1716.132    1106.206\n          a5 |  -137.3977   700.8446    -0.20   0.845    -1521.497    1246.701\n          a6 |   72.87527   695.4052     0.10   0.917    -1300.482    1446.232\n          a7 |  -103.4007   742.9475    -0.14   0.889    -1570.649    1363.848\n          b2 |   .0099678   .0362994     0.27   0.784      -.06172    .0816555\n          b3 |   .1522578   .1022847     1.49   0.139    -.0497444      .35426\n          b4 |   .1899382   .0965319     1.97   0.051    -.0007027    .3805792\n          b5 |   .1540892   .0959124     1.61   0.110    -.0353283    .3435068\n          b6 |    .172972   .0944704     1.83   0.069    -.0135977    .3595417\n          b7 |   .2274326   .0945034     2.41   0.017     .0407977    .4140675\n          c1 |  -.0007315   .1021984    -0.01   0.994    -.2025632    .2011002\n          c2 |   .3681958   .1019742     3.61   0.000     .1668067    .5695849\n          c3 |  -.1431584   .0519385    -2.76   0.007    -.2457317    -.040585\n          c4 |   .6070451   .0665196     9.13   0.000     .4756756    .7384147\n          c5 |   .1315757   .0264479     4.97   0.000     .0793437    .1838078\n          c6 |   .0515819   .0218212     2.36   0.019     .0084872    .0946766\n          c7 |   .1635465   .0228493     7.16   0.000     .1184213    .2086717\n          c8 |    6.73024   .5719055    11.77   0.000     5.600783    7.859697\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. gen winv=1/exp(_b[b2]*yd2+_b[b3]*yd3+_b[b4]*yd4+_b[b5]*yd5+_b[b6]*yd6+_b[b7]*yd7\n&gt; /*\n&gt; */+_b[c1]*wght+_b[c2]*wdth+_b[c3]*hght+_b[c4]*hp+_b[c5]*tran+_b[c6]*ps+_b[c7]*ac\n&gt; +_b[c8])\n\n. \n. gen nprice=price*winv\n\n. gen nyd3=yd3*winv\n\n. gen nyd4=yd4*winv\n\n. gen nyd5=yd5*winv\n\n. gen nyd6=yd6*winv\n\n. gen nyd7=yd7*winv\n\n. \n. program define nlncar\n  1.         version 7.0\n  2.         if \"`1'\"==\"?\"{\n  3.                 global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c\n&gt; 6 c7 c8\"\n  4.                 global a3=1\n  5.                 global a4=1\n  6.                 global a5=1     \n  7.                 global a6=1\n  8.                 global a7=1\n  9.                 global b2=.1    \n 10.                 global b3=.1\n 11.                 global b4=.1\n 12.                 global b5=.1\n 13.                 global b6=.1    \n 14.                 global b7=.1\n 15.                 global c1=.1\n 16.                 global c2=.1\n 17.                 global c3=.1\n 18.                 global c4=.1\n 19.                 global c5=.1\n 20.                 global c6=.1\n 21.                 global c7=.1\n 22.                 global c8=.1\n 23.                 exit\n 24.         }\n 25.         replace `1'=$a3*nyd3+$a4*nyd4+$a5*nyd5+$a6*nyd6+$a7*nyd7/*\n&gt; */+winv*exp($b2*yd2+$b3*yd3+$b4*yd4+$b5*yd5+$b6*yd6+$b7*yd7/*\n&gt; */+$c1*wght+$c2*wdth+$c3*hght+$c4*hp+$c5*tran+$c6*ps+$c7*ac+$c8)\n 26. \n. end\n\n. \n. nl ncar nprice\n(obs = 179)\n\nIteration 0:   residual SS =  174.4452\n...\nIteration 13:  residual SS =  1.672068\nIteration 14:  residual SS =  1.672068\n\n      Source |       SS       df       MS            Number of obs =       179\n-------------+------------------------------         F( 19,   160) =    871.41\n       Model |  173.025768    19  9.10661939         Prob &gt; F      =    0.0000\n    Residual |  1.67206775   160  .010450423         R-squared     =    0.9904\n-------------+------------------------------         Adj R-squared =    0.9893\n       Total |  174.697836   179  .975965565         Root MSE      =  .1022273\n                                                     Res. dev.     = -328.5451\n(ncar)\n------------------------------------------------------------------------------\n      nprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   410.4256   619.1744     0.66   0.508    -812.3829    1633.234\n          a4 |    378.927   650.2562     0.58   0.561     -905.265    1663.119\n          a5 |   770.6115   601.2054     1.28   0.202    -416.7099    1957.933\n          a6 |   624.3817   618.9925     1.01   0.315    -598.0676    1846.831\n          a7 |  -122.9148   719.4492    -0.17   0.865    -1543.756    1297.927\n          b2 |   .0089535   .0309918     0.29   0.773    -.0522522    .0701592\n          b3 |   .0474345   .1093808     0.43   0.665    -.1685818    .2634509\n          b4 |   .0938457    .108274     0.87   0.387    -.1199848    .3076761\n          b5 |   .0195742   .1052628     0.19   0.853    -.1883094    .2274579\n          b6 |   .0918745   .1019572     0.90   0.369     -.109481      .29323\n          b7 |   .2189293   .1012639     2.16   0.032      .018943    .4189156\n          c1 |   .0254744   .1207686     0.21   0.833    -.2130317    .2639805\n          c2 |   .3565755   .1083292     3.29   0.001      .142636     .570515\n          c3 |  -.0630705   .0554954    -1.14   0.257    -.1726685    .0465275\n          c4 |   .6899452   .0852231     8.10   0.000      .521638    .8582524\n          c5 |   .1428588   .0244762     5.84   0.000     .0945207    .1911968\n          c6 |   .0581011   .0272835     2.13   0.035     .0042188    .1119834\n          c7 |   .1473354    .033027     4.46   0.000     .0821103    .2125606\n          c8 |   6.328371   .5830815    10.85   0.000     5.176842    7.479899\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. clear\n\n. program drop _all\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\car_reg.log\n  log type:  text\n closed on:  19 Jun 2024, 19:29:06\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\ntruck_reg.do\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_reg.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_reg.log not found)\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_reg.log\n  log type:  text\n opened on:  18 Oct 2024, 17:38:02\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\n\n. \n. drop if year&gt;=86\n(45 observations deleted)\n\n. gen lnprice=log(price)\n\n. \n. tab year, gen(yd)\n\n       year |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         79 |         10       13.33       13.33\n         80 |         10       13.33       26.67\n         81 |         11       14.67       41.33\n         82 |         11       14.67       56.00\n         83 |         10       13.33       69.33\n         84 |         11       14.67       84.00\n         85 |         12       16.00      100.00\n------------+-----------------------------------\n      Total |         75      100.00\n\n. \n. program define nltruck_1\n  1. version 7.0\n  2.         if \"`1'\"==\"?\"{\n  3.                 global S_1\"a2 a3 a4 a5 a6 a7 b1 b2 b3 b4 b5 b6 b7 c1\"\n  4.                 global a2=1\n  5.                 global a3=1\n  6.                 global a4=1\n  7.                 global a5=1\n  8.                 global a6=1\n  9.                 global a7=1\n 10.                 global b1=1\n 11.                 global b2=1\n 12.                 global b3=1\n 13.                 global b4=1\n 14.                 global b5=1\n 15.                 global b6=1\n 16.                 global b7=1\n 17.                 global c1=1\n 18.                 exit\n 19.         }\n 20.         replace `1'=exp($a2*yd2+$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*\n&gt; */+$b1*weight+$b2*wdth+$b3*hght+$b4*hp+$b5*tran+$b6*ps+$b7*four+$c1*1)\n 21. end\n\n. \n. nl truck_1 price\n(obs = 75)\n\nIteration 0:   residual SS =  2.50e+17\nIteration 1:   residual SS =  3.38e+16\nIteration 2:   residual SS =  4.57e+15\nIteration 3:   residual SS =  6.18e+14\nIteration 4:   residual SS =  8.35e+13\nIteration 5:   residual SS =  1.12e+13\nIteration 6:   residual SS =  1.50e+12\nIteration 7:   residual SS =  1.96e+11\nIteration 8:   residual SS =  2.44e+10\nIteration 9:   residual SS =  2.65e+09\nIteration 10:  residual SS =  2.09e+08\nIteration 11:  residual SS =  2.03e+07\nIteration 12:  residual SS =  1.53e+07\nIteration 13:  residual SS =  1.53e+07\nIteration 14:  residual SS =  1.53e+07\nIteration 15:  residual SS =  1.53e+07\nIteration 16:  residual SS =  1.53e+07\n\n      Source |       SS       df       MS            Number of obs =        75\n-------------+------------------------------         F( 14,    61) =   1004.27\n       Model |  3.5299e+09    14   252133551         Prob &gt; F      =    0.0000\n    Residual |  15314779.4    61  251061.957         R-squared     =    0.9957\n-------------+------------------------------         Adj R-squared =    0.9947\n       Total |  3.5452e+09    75  47269126.6         Root MSE      =  501.0608\n                                                     Res. dev.     =  1129.854\n(truck_1)\n------------------------------------------------------------------------------\n       price |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a2 |  -.0210733   .0423824    -0.50   0.621    -.1058222    .0636756\n          a3 |   .1734177   .0382242     4.54   0.000     .0969837    .2498518\n          a4 |   .2001205   .0385602     5.19   0.000     .1230145    .2772264\n          a5 |   .1454809   .0400948     3.63   0.001     .0653064    .2256555\n          a6 |   .1825347   .0394306     4.63   0.000     .1036883    .2613811\n          a7 |   .1592055    .042285     3.77   0.000     .0746514    .2437595\n          b1 |   .4398295   .0564709     7.79   0.000     .3269091      .55275\n          b2 |     .08571   .1119267     0.77   0.447    -.1381014    .3095213\n          b3 |  -.0487976   .0470736    -1.04   0.304     -.142927    .0453318\n          b4 |   .2482011   .1089575     2.28   0.026     .0303272     .466075\n          b5 |   .0341161   .0249591     1.37   0.177    -.0157928    .0840249\n          b6 |   .0942558   .0337561     2.79   0.007     .0267564    .1617552\n          b7 |   .2292275   .0271818     8.43   0.000     .1748741    .2835808\n          c1 |   7.536871   .5461675    13.80   0.000     6.444741       8.629\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. gen winv=1/exp(_b[a2]*yd2+_b[a3]*yd3+_b[a4]*yd4+_b[a5]*yd5+_b[a6]*yd6+_b[a7]*yd7/*\n&gt; */+_b[b1]*weight+_b[b2]*wdth+_b[b3]*hght+_b[b4]*hp+_b[b5]*tran+_b[b6]*ps+_b[b7]*four+_b[c1]*1)\n\n. \n. gen nprice=price*winv\n\n. \n. program define nltruck_2\n  1.         version 7.0\n  2.         if \"`1'\"==\"?\"{\n  3.                 global S_1\"a2 a3 a4 a5 a6 a7 b1 b2 b3 b4 b5 b6 b7 c1\"\n  4.                 global a2=1\n  5.                 global a3=1\n  6.                 global a4=1\n  7.                 global a5=1\n  8.                 global a6=1\n  9.                 global a7=1\n 10.                 global b1=1\n 11.                 global b2=1\n 12.                 global b3=1\n 13.                 global b4=1\n 14.                 global b5=1\n 15.                 global b6=1\n 16.                 global b7=1\n 17.                 global c1=1\n 18.                 exit\n 19.         }\n 20.         replace `1'=winv*exp($a2*yd2+$a3*yd3+$a4*yd4+$a5*yd5+$a6*yd6+$a7*yd7/*\n&gt; */+$b1*weight+$b2*wdth+$b3*hght+$b4*hp+$b5*tran+$b6*ps+$b7*four+$c1*1)\n 21. end\n\n. \n. nl truck_2 nprice\n(obs = 75)\n\nIteration 0:   residual SS =  2.27e+09\nIteration 1:   residual SS =  3.07e+08\nIteration 2:   residual SS =  4.15e+07\nIteration 3:   residual SS =   5608900\nIteration 4:   residual SS =  757532.6\nIteration 5:   residual SS =  101968.1\nIteration 6:   residual SS =  13611.98\nIteration 7:   residual SS =   1784.24\nIteration 8:   residual SS =  224.5781\nIteration 9:   residual SS =  24.89367\nIteration 10:  residual SS =  2.123931\nIteration 11:  residual SS =  .3646277\nIteration 12:  residual SS =  .3191061\nIteration 13:  residual SS =  .3190177\nIteration 14:  residual SS =  .3190176\nIteration 15:  residual SS =  .3190176\nIteration 16:  residual SS =  .3190176\n\n      Source |       SS       df       MS            Number of obs =        75\n-------------+------------------------------         F( 14,    61) =   1023.93\n       Model |  74.9691322    14  5.35493802         Prob &gt; F      =    0.0000\n    Residual |  .319017551    61  .005229796         R-squared     =    0.9958\n-------------+------------------------------         Adj R-squared =    0.9948\n       Total |  75.2881498    75    1.003842         Root MSE      =  .0723173\n                                                     Res. dev.     =  -196.659\n(truck_2)\n------------------------------------------------------------------------------\n      nprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a2 |   .0041382   .0326606     0.13   0.900    -.0611707    .0694472\n          a3 |   .2093262   .0318227     6.58   0.000     .1456929    .2729596\n          a4 |   .2295212   .0329551     6.96   0.000     .1636235     .295419\n          a5 |   .1715058   .0348772     4.92   0.000     .1017645    .2412471\n          a6 |   .1898806   .0347216     5.47   0.000     .1204505    .2593108\n          a7 |   .1803588   .0370176     4.87   0.000     .1063376      .25438\n          b1 |   .4115021   .0823391     5.00   0.000      .246855    .5761493\n          b2 |   .0141524   .1005163     0.14   0.888    -.1868423    .2151472\n          b3 |   .0054683   .0515606     0.11   0.916    -.0976334      .10857\n          b4 |   .1979945   .1020843     1.94   0.057    -.0061357    .4021247\n          b5 |   .0294082     .02481     1.19   0.240    -.0202025    .0790188\n          b6 |   .0901756   .0435822     2.07   0.043     .0030275    .1773236\n          b7 |   .2159646   .0267321     8.08   0.000     .1625105    .2694187\n          c1 |   7.705805   .4974887    15.49   0.000     6.711015    8.700595\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. clear\n\n. \n. program drop _all\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_reg.log\n  log type:  text\n closed on:  18 Oct 2024, 17:38:02\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\n\nMy code\n\ncar_reg.do\n\nlibrary(minpack.lm) # for nlsLM()\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(yd = factor(year)) %&gt;%\n  group_by(yd) %&gt;%\n  mutate(id = row_number()) %&gt;%\n  ungroup()\n\ncar_7990 %&gt;%\n  group_by(yd) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 7 × 4\n  yd     freq percent   cum\n  &lt;fct&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 79       21    11.7  11.7\n2 80       24    13.4  25.1\n3 81       24    13.4  38.5\n4 82       24    13.4  52.0\n5 83       26    14.5  66.5\n6 84       29    16.2  82.7\n7 85       31    17.3 100  \n\n# expand the yd variable to 0/1 columns\n# in R, you cannot multiply a factor/categorical variable\n\ncar_7990 &lt;- car_7990 %&gt;%\n  mutate(yd_ind = as.integer(yd)) %&gt;%\n  mutate(yd_ind = as.factor(yd_ind - min(yd_ind) + 1))\n\ncar_7990_dummy &lt;- model.matrix(~ yd_ind - 1, data = car_7990)\ncolnames(car_7990_dummy) &lt;- gsub(\"_ind\", \"\", colnames(car_7990_dummy))\n\ncar_7990 &lt;- car_7990 %&gt;%\n  bind_cols(as.data.frame(car_7990_dummy))\n\n# fit the non-linear specification with initial values\n# nls() fails, so I use nlsLM() that implements the Levenberg-Marquardt\n# algorithm\n\ninitial_values &lt;- list(\n  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,\n  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,\n  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,\n  c8 = 0.1\n)\n\nfit &lt;- nlsLM(\n  price ~ a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * yd6 + a7 * yd7 +\n    exp(\n      b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + b6 * yd6 + b7 * yd7 +\n        c1 * wght + c2 * wdth + c3 * hght + c4 * hp + c5 * tran + c6 * ps +\n        c7 * ac + c8\n    ),\n  data = car_7990,\n  start = initial_values\n)\n\nsummary(fit)\n\n\nFormula: price ~ a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * yd6 + a7 * yd7 + \n    exp(b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + b6 * yd6 + \n        b7 * yd7 + c1 * wght + c2 * wdth + c3 * hght + c4 * hp + \n        c5 * tran + c6 * ps + c7 * ac + c8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3 -2.947e+02  7.233e+02  -0.407 0.684236    \na4 -3.049e+02  7.145e+02  -0.427 0.670137    \na5 -1.374e+02  7.008e+02  -0.196 0.844867    \na6  7.293e+01  6.954e+02   0.105 0.916608    \na7 -1.033e+02  7.429e+02  -0.139 0.889554    \nb2  9.967e-03  3.630e-02   0.275 0.783991    \nb3  1.523e-01  1.023e-01   1.489 0.138586    \nb4  1.899e-01  9.653e-02   1.968 0.050842 .  \nb5  1.541e-01  9.591e-02   1.607 0.110130    \nb6  1.730e-01  9.447e-02   1.831 0.068972 .  \nb7  2.274e-01  9.450e-02   2.407 0.017243 *  \nc1 -6.998e-04  1.022e-01  -0.007 0.994545    \nc2  3.682e-01  1.020e-01   3.610 0.000409 ***\nc3 -1.432e-01  5.194e-02  -2.756 0.006522 ** \nc4  6.070e-01  6.652e-02   9.126 2.93e-16 ***\nc5  1.316e-01  2.645e-02   4.975 1.67e-06 ***\nc6  5.158e-02  2.182e-02   2.364 0.019283 *  \nc7  1.635e-01  2.285e-02   7.157 2.81e-11 ***\nc8  6.730e+00  5.719e-01  11.768  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 724.1 on 160 degrees of freedom\n\nNumber of iterations to convergence: 19 \nAchieved convergence tolerance: 1.49e-08\n\nfit_coef &lt;- coef(fit)\n\ncar_7990 &lt;- car_7990 %&gt;%\n  mutate(\n    winv = 1 / exp(fit_coef[\"b2\"] * yd2 + fit_coef[\"b3\"] * yd3 +\n      fit_coef[\"b4\"] * yd4 + fit_coef[\"b5\"] * yd5 + fit_coef[\"b6\"] * yd6 +\n      fit_coef[\"b7\"] * yd7 + fit_coef[\"c1\"] * wght + fit_coef[\"c2\"] * wdth +\n      fit_coef[\"c3\"] * hght + fit_coef[\"c4\"] * hp + fit_coef[\"c5\"] * tran +\n      fit_coef[\"c6\"] * ps + fit_coef[\"c7\"] * ac + fit_coef[\"c8\"]),\n    nprice = price * winv,\n    nyd3 = yd3 * winv,\n    nyd4 = yd4 * winv,\n    nyd5 = yd5 * winv,\n    nyd6 = yd6 * winv,\n    nyd7 = yd7 * winv\n  )\n\nfit2 &lt;- nlsLM(\n  nprice ~ a3 * nyd3 + a4 * nyd4 + a5 * nyd5 + a6 * nyd6 + a7 * nyd7 +\n    winv * exp(\n      b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + b6 * yd6 + b7 * yd7 +\n        c1 * wght + c2 * wdth + c3 * hght + c4 * hp + c5 * tran + c6 * ps +\n        c7 * ac + c8\n    ),\n  data = car_7990,\n  start = initial_values,\n  # increase the number of iterations to avoid convergence issues\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit2)\n\n\nFormula: nprice ~ a3 * nyd3 + a4 * nyd4 + a5 * nyd5 + a6 * nyd6 + a7 * \n    nyd7 + winv * exp(b2 * yd2 + b3 * yd3 + b4 * yd4 + b5 * yd5 + \n    b6 * yd6 + b7 * yd7 + c1 * wght + c2 * wdth + c3 * hght + \n    c4 * hp + c5 * tran + c6 * ps + c7 * ac + c8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3  4.105e+02  6.192e+02   0.663  0.50834    \na4  3.789e+02  6.503e+02   0.583  0.56087    \na5  7.706e+02  6.012e+02   1.282  0.20176    \na6  6.244e+02  6.190e+02   1.009  0.31465    \na7 -1.229e+02  7.194e+02  -0.171  0.86455    \nb2  8.954e-03  3.099e-02   0.289  0.77303    \nb3  4.743e-02  1.094e-01   0.434  0.66515    \nb4  9.384e-02  1.083e-01   0.867  0.38740    \nb5  1.957e-02  1.053e-01   0.186  0.85274    \nb6  9.188e-02  1.020e-01   0.901  0.36887    \nb7  2.189e-01  1.013e-01   2.162  0.03211 *  \nc1  2.548e-02  1.208e-01   0.211  0.83316    \nc2  3.566e-01  1.083e-01   3.292  0.00123 ** \nc3 -6.306e-02  5.550e-02  -1.136  0.25748    \nc4  6.899e-01  8.522e-02   8.096 1.36e-13 ***\nc5  1.429e-01  2.448e-02   5.837 2.88e-08 ***\nc6  5.810e-02  2.728e-02   2.130  0.03474 *  \nc7  1.473e-01  3.303e-02   4.461 1.53e-05 ***\nc8  6.328e+00  5.831e-01  10.853  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1022 on 160 degrees of freedom\n\nNumber of iterations to convergence: 18 \nAchieved convergence tolerance: 1.49e-08\n\n\n\n\ntruck_reg.do\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(\n    lnprice = log(price),\n    yd = factor(year)\n  ) %&gt;%\n  group_by(yd) %&gt;%\n  mutate(id = row_number()) %&gt;%\n  ungroup() %&gt;%\n  rename(wght = weight)\n\ntruck_7990 %&gt;%\n  group_by(yd) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 7 × 4\n  yd     freq percent   cum\n  &lt;fct&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 79       10    13.3  13.3\n2 80       10    13.3  26.7\n3 81       11    14.7  41.3\n4 82       11    14.7  56  \n5 83       10    13.3  69.3\n6 84       11    14.7  84  \n7 85       12    16   100  \n\n# I will use b8 instead of c1 to avoid extra tidying later\ninitial_values &lt;- list(\n  a2 = 1, a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,\n  b1 = 1, b2 = 1, b3 = 1, b4 = 1, b5 = 1, b6 = 1, b7 = 1, b8 = 1\n)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(yd_ind = as.integer(yd)) %&gt;%\n  mutate(yd_ind = as.factor(yd_ind - min(yd_ind) + 1))\n\ntruck_7990_dummy &lt;- model.matrix(~ yd_ind - 1, data = truck_7990)\n\ncolnames(truck_7990_dummy) &lt;- gsub(\"_ind\", \"\", colnames(truck_7990_dummy))\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_cols(as.data.frame(truck_7990_dummy))\n\nfit3 &lt;- nlsLM(\n  lnprice ~ exp(a2 * yd2 + a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * yd6 +\n    a7 * yd7 + b1 * wght + b2 * wdth + b3 * hght + b4 * hp + b5 * tran +\n    b6 * ps + b7 * four + b8),\n  data = truck_7990,\n  start = initial_values\n)\n\nsummary(fit3)\n\n\nFormula: lnprice ~ exp(a2 * yd2 + a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * \n    yd6 + a7 * yd7 + b1 * wght + b2 * wdth + b3 * hght + b4 * \n    hp + b5 * tran + b6 * ps + b7 * four + b8)\n\nParameters:\n    Estimate Std. Error t value Pr(&gt;|t|)    \na2 0.0005705  0.0037259   0.153   0.8788    \na3 0.0240717  0.0036050   6.677 8.28e-09 ***\na4 0.0263975  0.0037132   7.109 1.50e-09 ***\na5 0.0199685  0.0039124   5.104 3.50e-06 ***\na6 0.0221336  0.0038661   5.725 3.37e-07 ***\na7 0.0207545  0.0041371   5.017 4.83e-06 ***\nb1 0.0444571  0.0087268   5.094 3.63e-06 ***\nb2 0.0030967  0.0112786   0.275   0.7846    \nb3 0.0004542  0.0056452   0.080   0.9361    \nb4 0.0235098  0.0114640   2.051   0.0446 *  \nb5 0.0035386  0.0027552   1.284   0.2039    \nb6 0.0097044  0.0046752   2.076   0.0421 *  \nb7 0.0246971  0.0029674   8.323 1.23e-11 ***\nb8 2.0445709  0.0557319  36.686  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.07091 on 61 degrees of freedom\n\nNumber of iterations to convergence: 23 \nAchieved convergence tolerance: 1.49e-08\n\nfit_coef &lt;- coef(fit3)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    winv = 1 / exp(fit_coef[\"a2\"] * yd2 + fit_coef[\"a3\"] * yd3 +\n      fit_coef[\"a4\"] * yd4 + fit_coef[\"a5\"] * yd5 + fit_coef[\"a6\"] * yd6 +\n      fit_coef[\"a7\"] * yd7 + fit_coef[\"b1\"] * wght + fit_coef[\"b2\"] * wdth +\n      fit_coef[\"b3\"] * hght + fit_coef[\"b4\"] * hp + fit_coef[\"b5\"] * tran +\n      fit_coef[\"b6\"] * ps + fit_coef[\"b7\"] * four + fit_coef[\"b8\"]),\n    nprice = price * winv\n  )\n\nfit4 &lt;- nlsLM(\n  nprice ~ winv * exp(a2 * yd2 + a3 * yd3 + a4 * yd4 + a5 * yd5 + a6 * yd6 +\n    a7 * yd7 + b1 * wght + b2 * wdth + b3 * hght + b4 * hp + b5 * tran +\n    b6 * ps + b7 * four + b8),\n  data = truck_7990,\n  start = initial_values,\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit4)\n\n\nFormula: nprice ~ winv * exp(a2 * yd2 + a3 * yd3 + a4 * yd4 + a5 * yd5 + \n    a6 * yd6 + a7 * yd7 + b1 * wght + b2 * wdth + b3 * hght + \n    b4 * hp + b5 * tran + b6 * ps + b7 * four + b8)\n\nParameters:\n   Estimate Std. Error t value Pr(&gt;|t|)    \na2 -0.01752    0.04115  -0.426 0.671808    \na3  0.17842    0.03740   4.771 1.19e-05 ***\na4  0.20406    0.03782   5.396 1.18e-06 ***\na5  0.14882    0.03941   3.777 0.000363 ***\na6  0.18356    0.03874   4.738 1.33e-05 ***\na7  0.16232    0.04151   3.910 0.000234 ***\nb1  0.43760    0.05855   7.473 3.55e-10 ***\nb2  0.07716    0.11049   0.698 0.487617    \nb3 -0.04245    0.04740  -0.896 0.373973    \nb4  0.23968    0.10844   2.210 0.030841 *  \nb5  0.03410    0.02494   1.367 0.176684    \nb6  0.09343    0.03465   2.696 0.009053 ** \nb7  0.22790    0.02709   8.412 8.62e-12 ***\nb8  7.55794    0.53930  14.014  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 56.58 on 61 degrees of freedom\n\nNumber of iterations to convergence: 15 \nAchieved convergence tolerance: 1.49e-08\n\n\n\n\n\nExtra step: formatting the tables\n\n# function to avoid repeating the same code four times\nreshape_estimates &lt;- function(fit, vehicle, term_prefix, term_mappings) {\n  tidy(fit) %&gt;%\n    filter(term %in% paste0(term_prefix, 1:8)) %&gt;%\n    mutate(\n      term = case_when(\n        term == paste0(term_prefix, \"1\") ~ term_mappings[1],\n        term == paste0(term_prefix, \"2\") ~ term_mappings[2],\n        term == paste0(term_prefix, \"3\") ~ term_mappings[3],\n        term == paste0(term_prefix, \"4\") ~ term_mappings[4],\n        term == paste0(term_prefix, \"5\") ~ term_mappings[5],\n        term == paste0(term_prefix, \"6\") ~ term_mappings[6],\n        term == paste0(term_prefix, \"7\") ~ term_mappings[7],\n        term == paste0(term_prefix, \"8\") ~ term_mappings[8]\n      )\n    ) %&gt;%\n    select(term, estimate, std.error) %&gt;%\n    pivot_longer(\n      cols = c(estimate, std.error), names_to = \"stat\",\n      values_to = \"value\"\n    ) %&gt;%\n    mutate(\n      stat = if_else(stat == \"estimate\", \"Estimate\", \"Std. Error\"),\n      value = round(value, 3)\n    ) %&gt;%\n    rename(!!sym(vehicle) := value)\n}\n\ncar_vars &lt;- c(\n  \"Weight (tons)\", \"Width (feet)\", \"Height (feet)\", \"Horsepower (100)\",\n  \"Transmission (5-speed or auto)\", \"Power steering\", \"Air conditioning\", \"Constant\"\n)\n\ntruck_vars &lt;- c(\n  \"Weight (tons)\", \"Width (feet)\", \"Height (feet)\", \"Horsepower (100)\",\n  \"Transmission (5-speed or auto)\", \"Power steering\", \"Four-wheel drive\", \"Constant\"\n)\n\nordered_vars &lt;- unique(c(car_vars, truck_vars))\nordered_vars &lt;- c(\"Constant\", ordered_vars[ordered_vars != \"Constant\"])\n\ntable_84_1 &lt;- reshape_estimates(fit2, \"Car\", \"c\", car_vars) %&gt;%\n  full_join(reshape_estimates(fit4, \"Truck\", \"b\", truck_vars)) %&gt;%\n  # mutate term to factor + keep Constant at the beginning\n  mutate(\n    term = factor(term, levels = ordered_vars)\n  ) %&gt;%\n  arrange(term)\n\ncolnames(table_84_1) &lt;- c(\"Variable\", \"Statistic\", \"Car\", \"Truck\")\n\nkable(table_84_1)\n\n\n\n\nVariable\nStatistic\nCar\nTruck\n\n\n\n\nConstant\nEstimate\n6.328\n7.558\n\n\nConstant\nStd. Error\n0.583\n0.539\n\n\nWeight (tons)\nEstimate\n0.025\n0.438\n\n\nWeight (tons)\nStd. Error\n0.121\n0.059\n\n\nWidth (feet)\nEstimate\n0.357\n0.077\n\n\nWidth (feet)\nStd. Error\n0.108\n0.110\n\n\nHeight (feet)\nEstimate\n-0.063\n-0.042\n\n\nHeight (feet)\nStd. Error\n0.055\n0.047\n\n\nHorsepower (100)\nEstimate\n0.690\n0.240\n\n\nHorsepower (100)\nStd. Error\n0.085\n0.108\n\n\nTransmission (5-speed or auto)\nEstimate\n0.143\n0.034\n\n\nTransmission (5-speed or auto)\nStd. Error\n0.024\n0.025\n\n\nPower steering\nEstimate\n0.058\n0.093\n\n\nPower steering\nStd. Error\n0.027\n0.035\n\n\nAir conditioning\nEstimate\n0.147\nNA\n\n\nAir conditioning\nStd. Error\n0.033\nNA\n\n\nFour-wheel drive\nEstimate\nNA\n0.228\n\n\nFour-wheel drive\nStd. Error\nNA\n0.027",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html#exercise-3",
    "href": "chapter8.html#exercise-3",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Exercise 3",
    "text": "Exercise 3\nPooling car and truck data, run system_7985.do to reproduce columns (3) and (4) in Table 8.4 with the constraints specified in equation (8.22). How are these constraints built into the program for the nonlinear regression?\n\nFeenstra’s code\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\system_7985.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\ngen ve=2\nrename wdth wdth_t\nrename hght hght_t\nrename weight wght_t\nrename hp hp_t\nrename four four_t\nrename tran tran_t\nrename ps ps_t\nrename ac ac_t\ndrop if year&gt;=86\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\ndrop if year&gt;=86\ngen ve=1\nrename wdth wdth_c\nrename hght hght_c\nrename wght wght_c\nrename hp hp_c\nrename four four_c\nrename tran tran_c\nrename ps ps_c\nrename ac ac_c\n\nappend using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp\n\nreplace wdth_c=0 if wdth_c==.\nreplace hght_c=0 if hght_c==.\nreplace wght_c=0 if wght_c==.\nreplace hp_c=0 if hp_c==.\nreplace four_c=0 if four_c==.\nreplace tran_c=0 if tran_c==.\nreplace ps_c=0 if ps_c==.\nreplace ac_c=0 if ac_c==.\nreplace wdth_t=0 if wdth_t==.\nreplace hght_t=0 if hght_t==.\nreplace wght_t=0 if wght_t==.\nreplace hp_t=0 if hp_t==.\nreplace four_t=0 if four_t==.\nreplace tran_t=0 if tran_t==.\nreplace ps_t=0 if ps_t==.\nreplace ac_t=0 if ac_t==.\n\ntab year, gen(yd)\n\ngen cyd2=yd2\ngen tyd2=yd2\nreplace cyd2=0 if type==\"JT\"\nreplace tyd2=0 if type~=\"JT\"\n\ngen cyd3=yd3\ngen tyd3=yd3\nreplace cyd3=0 if type==\"JT\"\nreplace tyd3=0 if type~=\"JT\"\n\ngen cyd4=yd4\ngen tyd4=yd4\nreplace cyd4=0 if type==\"JT\"\nreplace tyd4=0 if type~=\"JT\"\n\ngen cyd5=yd5\ngen tyd5=yd5\nreplace cyd5=0 if type==\"JT\"\nreplace tyd5=0 if type~=\"JT\"\n\ngen cyd6=yd6\ngen tyd6=yd6\nreplace cyd6=0 if type==\"JT\"\nreplace tyd6=0 if type~=\"JT\"\n\ngen cyd7=yd7\ngen tyd7=yd7\nreplace cyd7=0 if type==\"JT\"\nreplace tyd7=0 if type~=\"JT\"\n\nprogram define nlct_1\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal c9=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nexit\n}\n\nreplace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_1 price\n\ngen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*\n*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*\n*/+_b[c7]*ac_c+_b[c8])\n\nreplace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*\n*/+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*\n*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n\ngen nprice=price*winv\n\n\nprogram define nlct_2\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal c9=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nexit\n}\nreplace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*\n*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_2 nprice\n\nprogram drop _all\nlog close\nexit\nOutput:\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\system_7985.log,replace\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\system_7985.log\n  log type:  text\n opened on:  19 Jun 2024, 21:59:23\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tr\n&gt; uck_7990,clear\n\n. gen ve=2\n\n. rename wdth wdth_t\n\n. rename hght hght_t\n\n. rename weight wght_t\n\n. rename hp hp_t\n\n. rename four four_t\n\n. rename tran tran_t\n\n. rename ps ps_t\n\n. rename ac ac_t\n\n. drop if year&gt;=86\n(45 observations deleted)\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\t\n&gt; ruck_temp,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tru\n&gt; ck_temp.dta saved\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. drop if year&gt;=86\n(105 observations deleted)\n\n. gen ve=1\n\n. rename wdth wdth_c\n\n. rename hght hght_c\n\n. rename wght wght_c\n\n. rename hp hp_c\n\n. rename four four_c\n\n. rename tran tran_c\n\n. rename ps ps_c\n\n. rename ac ac_c\n\n. \n. append using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Cha\n&gt; pter-8\\truck_temp\n\n. \n. replace wdth_c=0 if wdth_c==.\n(75 real changes made)\n\n. replace hght_c=0 if hght_c==.\n(75 real changes made)\n\n. replace wght_c=0 if wght_c==.\n(75 real changes made)\n\n. replace hp_c=0 if hp_c==.\n(75 real changes made)\n\n. replace four_c=0 if four_c==.\n(75 real changes made)\n\n. replace tran_c=0 if tran_c==.\n(75 real changes made)\n\n. replace ps_c=0 if ps_c==.\n(75 real changes made)\n\n. replace ac_c=0 if ac_c==.\n(75 real changes made)\n\n. replace wdth_t=0 if wdth_t==.\n(179 real changes made)\n\n. replace hght_t=0 if hght_t==.\n(179 real changes made)\n\n. replace wght_t=0 if wght_t==.\n(179 real changes made)\n\n. replace hp_t=0 if hp_t==.\n(179 real changes made)\n\n. replace four_t=0 if four_t==.\n(179 real changes made)\n\n. replace tran_t=0 if tran_t==.\n(179 real changes made)\n\n. replace ps_t=0 if ps_t==.\n(179 real changes made)\n\n. replace ac_t=0 if ac_t==.\n(179 real changes made)\n\n. \n. tab year, gen(yd)\n\n       year |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         79 |         31       12.20       12.20\n         80 |         34       13.39       25.59\n         81 |         35       13.78       39.37\n         82 |         35       13.78       53.15\n         83 |         36       14.17       67.32\n         84 |         40       15.75       83.07\n         85 |         43       16.93      100.00\n------------+-----------------------------------\n      Total |        254      100.00\n\n. \n. gen cyd2=yd2\n\n. gen tyd2=yd2\n\n. replace cyd2=0 if type==\"JT\"\n(8 real changes made)\n\n. replace tyd2=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd3=yd3\n\n. gen tyd3=yd3\n\n. replace cyd3=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd3=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd4=yd4\n\n. gen tyd4=yd4\n\n. replace cyd4=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd4=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd5=yd5\n\n. gen tyd5=yd5\n\n. replace cyd5=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd5=0 if type~=\"JT\"\n(29 real changes made)\n\n. \n. gen cyd6=yd6\n\n. gen tyd6=yd6\n\n. replace cyd6=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd6=0 if type~=\"JT\"\n(33 real changes made)\n\n. \n. gen cyd7=yd7\n\n. gen tyd7=yd7\n\n. replace cyd7=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd7=0 if type~=\"JT\"\n(36 real changes made)\n\n. \n. program define nlct_1\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2\n&gt;  d3 d4 d5 d6 d7 d8\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global b2=.1\n 10. global b3=.1\n 11. global b4=.1\n 12. global b5=.1\n 13. global b6=.1\n 14. global b7=.1\n 15. global c1=.1\n 16. global c2=.1\n 17. global c3=.1\n 18. global c4=.1\n 19. global c5=.1\n 20. global c6=.1\n 21. global c7=.1\n 22. global c8=.1\n 23. global c9=.1\n 24. global d1=.1\n 25. global d2=.1\n 26. global d3=.1\n 27. global d4=.1\n 28. global d5=.1\n 29. global d6=.1\n 30. global d7=.1\n 31. global d8=.1\n 32. exit\n 33. }\n 34. \n. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n&gt; */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6\n&gt; +$c9*tyd7/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 35. \n. end\n\n. \n. nl ct_1 price\n(obs = 254)\n\nIteration 0:   residual SS =  1.51e+10\n...\nIteration 24:  residual SS =  1.01e+08\nIteration 25:  residual SS =  1.01e+08\n\n      Source |       SS       df       MS            Number of obs =       254\n-------------+------------------------------         F( 28,   226) =   1210.09\n       Model |  1.5069e+10    28   538194036         Prob &gt; F      =    0.0000\n    Residual |   100515047   226  444756.844         R-squared     =    0.9934\n-------------+------------------------------         Adj R-squared =    0.9926\n       Total |  1.5170e+10   254  59724204.9         Root MSE      =  666.9009\n                                                     Res. dev.     =  3994.496\n(ct_1)\n------------------------------------------------------------------------------\n       price |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   254.0918   317.1045     0.80   0.424    -370.7678    878.9513\n          a4 |   505.1058   325.6388     1.55   0.122    -136.5708    1146.782\n          a5 |   708.9466   317.3172     2.23   0.026       83.668    1334.225\n          a6 |   1082.054   322.4415     3.36   0.001     446.6773     1717.43\n          a7 |   1063.014   373.9703     2.84   0.005     326.0995    1799.929\n          b2 |   .0040633   .0329008     0.12   0.902    -.0607683    .0688948\n          b3 |   .0756038    .049061     1.54   0.125    -.0210716    .1722792\n          b4 |   .0828575   .0490467     1.69   0.093    -.0137897    .1795048\n          b5 |   .0327776    .050707     0.65   0.519    -.0671415    .1326967\n          b6 |   .0351224   .0514768     0.68   0.496    -.0663135    .1365582\n          b7 |   .0825554   .0557608     1.48   0.140    -.0273221    .1924329\n          c1 |   .0326037   .1117298     0.29   0.771    -.1875618    .2527691\n          c2 |    .385946   .1204171     3.21   0.002     .1486621    .6232299\n          c3 |  -.1929238   .0568197    -3.40   0.001     -.304888   -.0809596\n          c4 |    .715212   .0736084     9.72   0.000     .5701655    .8602585\n          c5 |   .1578585     .03381     4.67   0.000     .0912354    .2244816\n          c6 |   .0641097   .0247061     2.59   0.010     .0154259    .1127934\n          c7 |   .1829447   .0242773     7.54   0.000     .1351059    .2307836\n          c8 |   6.599831   .7305317     9.03   0.000     5.160306    8.039356\n          c9 |   .1171992   .0634238     1.85   0.066    -.0077785    .2421769\n          d1 |   .4917133   .0795807     6.18   0.000     .3348983    .6485283\n          d2 |   .2622177   .1757206     1.49   0.137    -.0840426    .6084779\n          d3 |  -.0451278   .0677055    -0.67   0.506    -.1785426     .088287\n          d4 |   .3030767   .1701249     1.78   0.076    -.0321571    .6383106\n          d5 |   .0397822   .0362731     1.10   0.274    -.0316947     .111259\n          d6 |   .0967659   .0501832     1.93   0.055    -.0021208    .1956526\n          d7 |   .3052359   .0715711     4.26   0.000     .1642038     .446268\n          d8 |   6.299805   .9622249     6.55   0.000     4.403726    8.195885\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7\n&gt; ]*cyd7/*\n&gt; */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps\n&gt; _c/*\n&gt; */+_b[c7]*ac_c+_b[c8])\n\n. \n. replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*\n&gt; */+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*\n&gt; */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n&gt; */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n(75 real changes made)\n\n. \n. gen nprice=price*winv\n\n. \n. \n. program define nlct_2\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2\n&gt;  d3 d4 d5 d6 d7 d8\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global b2=.1\n 10. global b3=.1\n 11. global b4=.1\n 12. global b5=.1\n 13. global b6=.1\n 14. global b7=.1\n 15. global c1=.1\n 16. global c2=.1\n 17. global c3=.1\n 18. global c4=.1\n 19. global c5=.1\n 20. global c6=.1\n 21. global c7=.1\n 22. global c8=.1\n 23. global c9=.1\n 24. global d1=.1\n 25. global d2=.1\n 26. global d3=.1\n 27. global d4=.1\n 28. global d5=.1\n 29. global d6=.1\n 30. global d7=.1\n 31. global d8=.1\n 32. exit\n 33. }\n 34. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*\n&gt; */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)\n&gt; *tyd6+$c9*tyd7/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 35. \n. end\n\n. \n. nl ct_2 nprice\n(obs = 254)\n\nIteration 0:   residual SS =  353.5865\n...\nIteration 20:  residual SS =  2.957295\nIteration 21:  residual SS =  2.957295\n\n      Source |       SS       df       MS            Number of obs =       254\n-------------+------------------------------         F( 28,   226) =    958.75\n       Model |  351.277591    28  12.5456282         Prob &gt; F      =    0.0000\n    Residual |  2.95729549   226  .013085378         R-squared     =    0.9917\n-------------+------------------------------         Adj R-squared =    0.9906\n       Total |  354.234886   254  1.39462554         Root MSE      =  .1143913\n                                                     Res. dev.     = -410.2562\n(ct_2)\n------------------------------------------------------------------------------\n      nprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   367.9829    239.059     1.54   0.125    -103.0867    839.0525\n          a4 |    600.553   254.2261     2.36   0.019     99.59628     1101.51\n          a5 |   887.9399   243.5428     3.65   0.000     408.0348    1367.845\n          a6 |   1104.433   251.0245     4.40   0.000     609.7847     1599.08\n          a7 |   855.7993   366.2444     2.34   0.020     134.1088     1577.49\n          b2 |   .0130387   .0303131     0.43   0.668    -.0466937    .0727711\n          b3 |   .0674477   .0425176     1.59   0.114     -.016334    .1512294\n          b4 |   .0701234   .0441821     1.59   0.114    -.0169382     .157185\n          b5 |  -.0005627   .0470779    -0.01   0.990    -.0933305    .0922051\n          b6 |   .0179989   .0473905     0.38   0.704    -.0753848    .1113826\n          b7 |   .1007712   .0641587     1.57   0.118    -.0256545    .2271969\n          c1 |   .0492474   .1311096     0.38   0.708    -.2091061     .307601\n          c2 |   .3908689   .1383663     2.82   0.005     .1182159     .663522\n          c3 |  -.0618204   .0611492    -1.01   0.313    -.1823158     .058675\n          c4 |   .8103277   .1038045     7.81   0.000     .6057792    1.014876\n          c5 |   .1779391   .0355273     5.01   0.000     .1079319    .2479463\n          c6 |   .0693687   .0304968     2.27   0.024     .0092743     .129463\n          c7 |   .1567051   .0360384     4.35   0.000     .0856908    .2277193\n          c8 |   5.839036   .8621144     6.77   0.000     4.140226    7.537847\n          c9 |   .1059852   .0550545     1.93   0.055    -.0025007    .2144711\n          d1 |   .4759918   .1172145     4.06   0.000     .2450187    .7069649\n          d2 |   .2120021   .1419991     1.49   0.137    -.0678094    .4918136\n          d3 |  -.0270369    .074052    -0.37   0.715    -.1729575    .1188837\n          d4 |     .24435   .1516866     1.61   0.109    -.0545508    .5432508\n          d5 |   .0530065   .0356148     1.49   0.138     -.017173     .123186\n          d6 |   .0575178   .0639555     0.90   0.369    -.0685076    .1835431\n          d7 |   .2971909   .0566882     5.24   0.000      .185486    .4088959\n          d8 |   6.630805   .7652819     8.66   0.000     5.122804    8.138805\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. program drop _all\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\system_7985.log\n  log type:  text\n closed on:  19 Jun 2024, 21:59:28\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nMy code\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(ve = 1) %&gt;%\n  rename(\n    wdth_c = wdth, hght_c = hght, wght_c = wght, hp_c = hp, four_c = four,\n    tran_c = tran, ps_c = ps, ac_c = ac\n  )\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(ve = 2) %&gt;%\n  rename(\n    wdth_t = wdth, hght_t = hght, wght_t = weight, hp_t = hp, four_t = four,\n    tran_t = tran, ps_t = ps, ac_t = ac\n  )\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_rows(car_7990) %&gt;%\n  mutate(\n    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),\n    hght_c = ifelse(is.na(hght_c), 0, hght_c),\n    wght_c = ifelse(is.na(wght_c), 0, wght_c),\n    hp_c = ifelse(is.na(hp_c), 0, hp_c),\n    four_c = ifelse(is.na(four_c), 0, four_c),\n    tran_c = ifelse(is.na(tran_c), 0, tran_c),\n    ps_c = ifelse(is.na(ps_c), 0, ps_c),\n    ac_c = ifelse(is.na(ac_c), 0, ac_c),\n    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),\n    hght_t = ifelse(is.na(hght_t), 0, hght_t),\n    wght_t = ifelse(is.na(wght_t), 0, wght_t),\n    hp_t = ifelse(is.na(hp_t), 0, hp_t),\n    four_t = ifelse(is.na(four_t), 0, four_t),\n    tran_t = ifelse(is.na(tran_t), 0, tran_t),\n    ps_t = ifelse(is.na(ps_t), 0, ps_t),\n    ac_t = ifelse(is.na(ac_t), 0, ac_t)\n  )\n\ntruck_7990 %&gt;%\n  group_by(year) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 7 × 4\n   year  freq percent   cum\n  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1    79    31    12.2  12.2\n2    80    34    13.4  25.6\n3    81    35    13.8  39.4\n4    82    35    13.8  53.1\n5    83    36    14.2  67.3\n6    84    40    15.7  83.1\n7    85    43    16.9 100  \n\n# expand the yd variable\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(yd = as.factor(year - min(year) + 1))\n\ntruck_7990_dummy &lt;- model.matrix(~ yd - 1, data = truck_7990)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_cols(as.data.frame(truck_7990_dummy))\n\n# generate the cyd and tyd variables\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    cyd2 = ifelse(type == \"JT\", 0, yd2),\n    cyd3 = ifelse(type == \"JT\", 0, yd3),\n    cyd4 = ifelse(type == \"JT\", 0, yd4),\n    cyd5 = ifelse(type == \"JT\", 0, yd5),\n    cyd6 = ifelse(type == \"JT\", 0, yd6),\n    cyd7 = ifelse(type == \"JT\", 0, yd7),\n    tyd2 = ifelse(type != \"JT\", 0, yd2),\n    tyd3 = ifelse(type != \"JT\", 0, yd3),\n    tyd4 = ifelse(type != \"JT\", 0, yd4),\n    tyd5 = ifelse(type != \"JT\", 0, yd5),\n    tyd6 = ifelse(type != \"JT\", 0, yd6),\n    tyd7 = ifelse(type != \"JT\", 0, yd7)\n  )\n\n# fit the models\n\ninitial_values &lt;- list(\n  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,\n  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,\n  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,\n  c8 = 0.1, c9 = 0.1,\n  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,\n  d8 = 0.1\n)\n\nfit &lt;- nlsLM(\n  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 + b7 * cyd7 +\n      c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c +\n      c6 * ps_c + c7 * ac_c + c8) +\n    exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +\n      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 +\n      d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t +\n      d6 * ps_t + d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values\n)\n\nsummary(fit)\n\n\nFormula: price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * \n    cyd7 + exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + \n    b6 * cyd6 + b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * \n    hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * ac_c + \n    c8) + exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * \n    tyd4 + (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + \n    d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * \n    tran_t + d6 * ps_t + d7 * four_t + d8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3  2.542e+02  3.171e+02   0.802 0.423598    \na4  5.052e+02  3.256e+02   1.552 0.122150    \na5  7.090e+02  3.173e+02   2.235 0.026415 *  \na6  1.082e+03  3.224e+02   3.356 0.000926 ***\na7  1.063e+03  3.739e+02   2.843 0.004876 ** \nb2  4.065e-03  3.290e-02   0.124 0.901779    \nb3  7.559e-02  4.906e-02   1.541 0.124732    \nb4  8.284e-02  4.904e-02   1.689 0.092555 .  \nb5  3.276e-02  5.070e-02   0.646 0.518840    \nb6  3.510e-02  5.147e-02   0.682 0.495934    \nb7  8.254e-02  5.576e-02   1.480 0.140197    \nc1  3.261e-02  1.117e-01   0.292 0.770715    \nc2  3.860e-01  1.204e-01   3.205 0.001545 ** \nc3 -1.929e-01  5.683e-02  -3.395 0.000811 ***\nc4  7.152e-01  7.362e-02   9.715  &lt; 2e-16 ***\nc5  1.579e-01  3.382e-02   4.668 5.21e-06 ***\nc6  6.412e-02  2.471e-02   2.595 0.010082 *  \nc7  1.830e-01  2.428e-02   7.535 1.16e-12 ***\nc8  6.599e+00  7.307e-01   9.032  &lt; 2e-16 ***\nc9  1.172e-01  6.342e-02   1.848 0.065932 .  \nd1  4.917e-01  7.958e-02   6.179 2.97e-09 ***\nd2  2.621e-01  1.757e-01   1.492 0.137107    \nd3 -4.513e-02  6.770e-02  -0.667 0.505752    \nd4  3.031e-01  1.701e-01   1.782 0.076158 .  \nd5  3.978e-02  3.627e-02   1.097 0.273899    \nd6  9.676e-02  5.018e-02   1.928 0.055072 .  \nd7  3.052e-01  7.156e-02   4.265 2.94e-05 ***\nd8  6.300e+00  9.620e-01   6.549 3.85e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 666.9 on 226 degrees of freedom\n\nNumber of iterations to convergence: 30 \nAchieved convergence tolerance: 1.49e-08\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    winv = case_when(\n      ve == 1 ~ 1 / exp(coef(fit)[\"b2\"] * cyd2 + coef(fit)[\"b3\"] * cyd3 +\n        coef(fit)[\"b4\"] * cyd4 + coef(fit)[\"b5\"] * cyd5 +\n        coef(fit)[\"b6\"] * cyd6 + coef(fit)[\"b7\"] * cyd7 +\n        coef(fit)[\"c1\"] * wght_c + coef(fit)[\"c2\"] * wdth_c +\n        coef(fit)[\"c3\"] * hght_c + coef(fit)[\"c4\"] * hp_c +\n        coef(fit)[\"c5\"] * tran_c + coef(fit)[\"c6\"] * ps_c +\n        coef(fit)[\"c7\"] * ac_c + coef(fit)[\"c8\"]),\n      ve == 2 ~ 1 / exp((coef(fit)[\"b2\"] + 0.16) * tyd2 +\n        (coef(fit)[\"b3\"] + 0.16) * tyd3 + (coef(fit)[\"b4\"] + 0.16) * tyd4 +\n        (coef(fit)[\"b5\"] + 0.16) * tyd5 + (coef(fit)[\"b6\"] + 0.16) * tyd6 +\n        coef(fit)[\"c9\"] * tyd7 + coef(fit)[\"d1\"] * wght_t +\n        coef(fit)[\"d2\"] * wdth_t + coef(fit)[\"d3\"] * hght_t +\n        coef(fit)[\"d4\"] * hp_t + coef(fit)[\"d5\"] * tran_t +\n        coef(fit)[\"d6\"] * ps_t + coef(fit)[\"d7\"] * four_t +\n        coef(fit)[\"d8\"])\n    ),\n    nprice = price * winv\n  )\n\nfit2 &lt;- nlsLM(\n  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7) +\n    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +\n      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +\n      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +\n    winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +\n      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +\n      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +\n      d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values\n)\n\nsummary(fit2)\n\n\nFormula: nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + \n    a7 * cyd7) + winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + \n    b5 * cyd5 + b6 * cyd6 + b7 * cyd7 + c1 * wght_c + c2 * wdth_c + \n    c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * \n    ac_c + c8) + winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + \n    (b4 + 0.16) * tyd4 + (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + \n    c9 * tyd7 + d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * \n    hp_t + d5 * tran_t + d6 * ps_t + d7 * four_t + d8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3  3.679e+02  2.391e+02   1.539 0.125219    \na4  6.005e+02  2.543e+02   2.362 0.019041 *  \na5  8.879e+02  2.436e+02   3.645 0.000332 ***\na6  1.104e+03  2.511e+02   4.399 1.68e-05 ***\na7  8.556e+02  3.663e+02   2.336 0.020379 *  \nb2  1.304e-02  3.031e-02   0.430 0.667488    \nb3  6.745e-02  4.252e-02   1.586 0.114086    \nb4  7.013e-02  4.419e-02   1.587 0.113886    \nb5 -5.484e-04  4.708e-02  -0.012 0.990718    \nb6  1.801e-02  4.740e-02   0.380 0.704268    \nb7  1.008e-01  6.416e-02   1.571 0.117554    \nc1  4.925e-02  1.311e-01   0.376 0.707523    \nc2  3.908e-01  1.383e-01   2.825 0.005153 ** \nc3 -6.182e-02  6.114e-02  -1.011 0.313088    \nc4  8.103e-01  1.038e-01   7.807 2.17e-13 ***\nc5  1.779e-01  3.552e-02   5.009 1.10e-06 ***\nc6  6.936e-02  3.049e-02   2.275 0.023864 *  \nc7  1.567e-01  3.604e-02   4.348 2.08e-05 ***\nc8  5.839e+00  8.619e-01   6.775 1.07e-10 ***\nc9  1.060e-01  5.506e-02   1.925 0.055494 .  \nd1  4.760e-01  1.172e-01   4.060 6.76e-05 ***\nd2  2.121e-01  1.420e-01   1.493 0.136773    \nd3 -2.704e-02  7.406e-02  -0.365 0.715380    \nd4  2.443e-01  1.517e-01   1.611 0.108659    \nd5  5.301e-02  3.562e-02   1.488 0.138112    \nd6  5.751e-02  6.396e-02   0.899 0.369534    \nd7  2.972e-01  5.670e-02   5.242 3.64e-07 ***\nd8  6.630e+00  7.655e-01   8.661 8.98e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1144 on 226 degrees of freedom\n\nNumber of iterations to convergence: 31 \nAchieved convergence tolerance: 1.49e-08\n\n\n\n\nExtra step: formatting the tables\n\ntable_84_2 &lt;- tidy(fit2) %&gt;%\n  select(term, estimate, std.error) %&gt;%\n  mutate(\n    vehicle = substr(term, 1, 1),\n    vehicle = case_when(\n      vehicle == \"c\" ~ \"car\",\n      vehicle == \"d\" ~ \"truck\",\n      TRUE ~ \"Exclude\"\n    )\n  ) %&gt;%\n  filter(vehicle != \"Exclude\") %&gt;%\n  mutate(\n    term = case_when(\n      term == \"c1\" | term == \"d1\" ~ \"Weight (tons)\",\n      term == \"c2\" | term == \"d2\" ~ \"Width (feet)\",\n      term == \"c3\" | term == \"d3\" ~ \"Height (feet)\",\n      term == \"c4\" | term == \"d4\" ~ \"Horsepower (100)\",\n      term == \"c5\" | term == \"d5\" ~ \"Transmission (5-speed or auto)\",\n      term == \"c6\" | term == \"d6\" ~ \"Power steering\",\n      term == \"c7\"                ~ \"Air conditioning\",\n      term == \"d7\"                ~ \"Four-wheel drive\",\n      term == \"c8\" | term == \"d8\" ~ \"Constant\",\n      TRUE ~ \"Exclude\"\n    )\n  ) %&gt;%\n  filter(term != \"Exclude\") %&gt;%\n  pivot_longer(cols = c(estimate, std.error), names_to = \"stat\") %&gt;%\n  pivot_wider(names_from = \"vehicle\", values_from = \"value\") %&gt;%\n  mutate_if(is.numeric, ~ round(., 3)) %&gt;%\n  mutate(\n    term = factor(term, levels = c(\n      \"Constant\", \"Weight (tons)\", \"Width (feet)\", \"Height (feet)\",\n      \"Horsepower (100)\", \"Transmission (5-speed or auto)\", \"Power steering\",\n      \"Air conditioning\", \"Four-wheel drive\"\n    )),\n    stat = if_else(stat == \"estimate\", \"Estimate\", \"Std. Error\")\n  ) %&gt;%\n  arrange(term)\n\ncolnames(table_84_2) &lt;- c(\"Variable\", \"Statistic\", \"Car\", \"Truck\")\n\nkable(table_84_2)\n\n\n\n\nVariable\nStatistic\nCar\nTruck\n\n\n\n\nConstant\nEstimate\n5.839\n6.630\n\n\nConstant\nStd. Error\n0.862\n0.765\n\n\nWeight (tons)\nEstimate\n0.049\n0.476\n\n\nWeight (tons)\nStd. Error\n0.131\n0.117\n\n\nWidth (feet)\nEstimate\n0.391\n0.212\n\n\nWidth (feet)\nStd. Error\n0.138\n0.142\n\n\nHeight (feet)\nEstimate\n-0.062\n-0.027\n\n\nHeight (feet)\nStd. Error\n0.061\n0.074\n\n\nHorsepower (100)\nEstimate\n0.810\n0.244\n\n\nHorsepower (100)\nStd. Error\n0.104\n0.152\n\n\nTransmission (5-speed or auto)\nEstimate\n0.178\n0.053\n\n\nTransmission (5-speed or auto)\nStd. Error\n0.036\n0.036\n\n\nPower steering\nEstimate\n0.069\n0.058\n\n\nPower steering\nStd. Error\n0.030\n0.064\n\n\nAir conditioning\nEstimate\n0.157\nNA\n\n\nAir conditioning\nStd. Error\n0.036\nNA\n\n\nFour-wheel drive\nEstimate\nNA\n0.297\n\n\nFour-wheel drive\nStd. Error\nNA\n0.057",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html#exercise-4",
    "href": "chapter8.html#exercise-4",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Exercise 4",
    "text": "Exercise 4\nRun the programs unit_quality.do, qindex_c.do, qindex_t.do to reproduce the quality indexes and unit-qualities for cars and trucks in Table 8.3. What formula is used for the quality of each model and the quality indexes, and how does this differ from the unit-quality?\n\nFeenstra’s code\n\nunit_quality.do\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\unit_quality.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\ndrop if year&gt;=86\ngen ve=2\nrename quan quan_t\nrename wdth wdth_t\nrename hght hght_t\nrename weight wght_t\nrename hp hp_t\nrename four four_t\nrename tran tran_t\nrename ps ps_t\nrename ac ac_t\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\ndrop if year&gt;=86\ngen ve=1\nrename quan quan_c\nrename wdth wdth_c\nrename hght hght_c\nrename wght wght_c\nrename hp hp_c\nrename four four_c\nrename tran tran_c\nrename ps ps_c\nrename ac ac_c\n\nappend using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp\n\nreplace wdth_c=0 if wdth_c==.\nreplace hght_c=0 if hght_c==.\nreplace wght_c=0 if wght_c==.\nreplace hp_c=0 if hp_c==.\nreplace four_c=0 if four_c==.\nreplace tran_c=0 if tran_c==.\nreplace ps_c=0 if ps_c==.\nreplace ac_c=0 if ac_c==.\nreplace wdth_t=0 if wdth_t==.\nreplace hght_t=0 if hght_t==.\nreplace wght_t=0 if wght_t==.\nreplace hp_t=0 if hp_t==.\nreplace four_t=0 if four_t==.\nreplace tran_t=0 if tran_t==.\nreplace ps_t=0 if ps_t==.\nreplace ac_t=0 if ac_t==.\n\ntab year, gen(yd)\n\ngen cyd2=yd2\ngen tyd2=yd2\nreplace cyd2=0 if type==\"JT\"\nreplace tyd2=0 if type~=\"JT\"\n\ngen cyd3=yd3\ngen tyd3=yd3\nreplace cyd3=0 if type==\"JT\"\nreplace tyd3=0 if type~=\"JT\"\n\ngen cyd4=yd4\ngen tyd4=yd4\nreplace cyd4=0 if type==\"JT\"\nreplace tyd4=0 if type~=\"JT\"\n\ngen cyd5=yd5\ngen tyd5=yd5\nreplace cyd5=0 if type==\"JT\"\nreplace tyd5=0 if type~=\"JT\"\n\ngen cyd6=yd6\ngen tyd6=yd6\nreplace cyd6=0 if type==\"JT\"\nreplace tyd6=0 if type~=\"JT\"\n\ngen cyd7=yd7\ngen tyd7=yd7\nreplace cyd7=0 if type==\"JT\"\nreplace tyd7=0 if type~=\"JT\"\n\nprogram define nlct_1\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal c9=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nexit\n}\n\nreplace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_1 price\n\ngen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*\n*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*\n*/+_b[c7]*ac_c+_b[c8])\n\nreplace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*\n*/+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*\n*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n\ngen nprice=price*winv\n\n\nprogram define nlct_2\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2 d3 d4 d5 d6 d7 d8\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal c9=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nexit\n}\nreplace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*\n*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6+$c9*tyd7/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_2 nprice\n\n\npreserve\nkeep if ve==1\n\ngen quality=exp(_b[c8]+_b[b2]+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c/*\n*/+_b[c5]*tran_c+_b[c6]*ps_c+_b[c7]*ac_c)\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\quality_c,replace\n\ngen nvalue=quality*quan_c\negen aquan=mean(quan_c), by(year)\negen anvalue=mean(nvalue),by(year)\ngen uquality=anvalue/aquan\ncollapse (mean)uquality, by(year)\nlist\nrestore\n\npreserve\nkeep if ve==2\n\ngen quality=exp(_b[d8]+_b[b2]+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t)\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\quality_t,replace\n\ngen nvalue=quality*quan_t\negen aquan=mean(quan_t),by(year)\negen anvalue=mean(nvalue), by(year)\ngen uquality=anvalue/aquan\ncollapse (mean)uquality, by(year)\nlist\nrestore\n\nprogram drop _all\nlog close\nexit\nOutput:\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\unit_quality.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\unit_quality.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\unit_quality.log\n  log type:  text\n opened on:  19 Jun 2024, 23:03:32\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tr\n&gt; uck_7990,clear\n\n. drop if year&gt;=86\n(45 observations deleted)\n\n. gen ve=2\n\n. rename quan quan_t\n\n. rename wdth wdth_t\n\n. rename hght hght_t\n\n. rename weight wght_t\n\n. rename hp hp_t\n\n. rename four four_t\n\n. rename tran tran_t\n\n. rename ps ps_t\n\n. rename ac ac_t\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\t\n&gt; ruck_temp,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tru\n&gt; ck_temp.dta saved\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. drop if year&gt;=86\n(105 observations deleted)\n\n. gen ve=1\n\n. rename quan quan_c\n\n. rename wdth wdth_c\n\n. rename hght hght_c\n\n. rename wght wght_c\n\n. rename hp hp_c\n\n. rename four four_c\n\n. rename tran tran_c\n\n. rename ps ps_c\n\n. rename ac ac_c\n\n. \n. append using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Cha\n&gt; pter-8\\truck_temp\n\n. \n. replace wdth_c=0 if wdth_c==.\n(75 real changes made)\n\n. replace hght_c=0 if hght_c==.\n(75 real changes made)\n\n. replace wght_c=0 if wght_c==.\n(75 real changes made)\n\n. replace hp_c=0 if hp_c==.\n(75 real changes made)\n\n. replace four_c=0 if four_c==.\n(75 real changes made)\n\n. replace tran_c=0 if tran_c==.\n(75 real changes made)\n\n. replace ps_c=0 if ps_c==.\n(75 real changes made)\n\n. replace ac_c=0 if ac_c==.\n(75 real changes made)\n\n. replace wdth_t=0 if wdth_t==.\n(179 real changes made)\n\n. replace hght_t=0 if hght_t==.\n(179 real changes made)\n\n. replace wght_t=0 if wght_t==.\n(179 real changes made)\n\n. replace hp_t=0 if hp_t==.\n(179 real changes made)\n\n. replace four_t=0 if four_t==.\n(179 real changes made)\n\n. replace tran_t=0 if tran_t==.\n(179 real changes made)\n\n. replace ps_t=0 if ps_t==.\n(179 real changes made)\n\n. replace ac_t=0 if ac_t==.\n(179 real changes made)\n\n. \n. tab year, gen(yd)\n\n       year |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         79 |         31       12.20       12.20\n         80 |         34       13.39       25.59\n         81 |         35       13.78       39.37\n         82 |         35       13.78       53.15\n         83 |         36       14.17       67.32\n         84 |         40       15.75       83.07\n         85 |         43       16.93      100.00\n------------+-----------------------------------\n      Total |        254      100.00\n\n. \n. gen cyd2=yd2\n\n. gen tyd2=yd2\n\n. replace cyd2=0 if type==\"JT\"\n(8 real changes made)\n\n. replace tyd2=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd3=yd3\n\n. gen tyd3=yd3\n\n. replace cyd3=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd3=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd4=yd4\n\n. gen tyd4=yd4\n\n. replace cyd4=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd4=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd5=yd5\n\n. gen tyd5=yd5\n\n. replace cyd5=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd5=0 if type~=\"JT\"\n(29 real changes made)\n\n. \n. gen cyd6=yd6\n\n. gen tyd6=yd6\n\n. replace cyd6=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd6=0 if type~=\"JT\"\n(33 real changes made)\n\n. \n. gen cyd7=yd7\n\n. gen tyd7=yd7\n\n. replace cyd7=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd7=0 if type~=\"JT\"\n(36 real changes made)\n\n. \n. program define nlct_1\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2\n&gt;  d3 d4 d5 d6 d7 d8\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global b2=.1\n 10. global b3=.1\n 11. global b4=.1\n 12. global b5=.1\n 13. global b6=.1\n 14. global b7=.1\n 15. global c1=.1\n 16. global c2=.1\n 17. global c3=.1\n 18. global c4=.1\n 19. global c5=.1\n 20. global c6=.1\n 21. global c7=.1\n 22. global c8=.1\n 23. global c9=.1\n 24. global d1=.1\n 25. global d2=.1\n 26. global d3=.1\n 27. global d4=.1\n 28. global d5=.1\n 29. global d6=.1\n 30. global d7=.1\n 31. global d8=.1\n 32. exit\n 33. }\n 34. \n. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n&gt; */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)*tyd6\n&gt; +$c9*tyd7/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 35. \n. end\n\n. \n. nl ct_1 price\n(obs = 254)\n\nIteration 0:   residual SS =  1.51e+10\n...\nIteration 24:  residual SS =  1.01e+08\nIteration 25:  residual SS =  1.01e+08\n\n      Source |       SS       df       MS            Number of obs =       254\n-------------+------------------------------         F( 28,   226) =   1210.09\n       Model |  1.5069e+10    28   538194036         Prob &gt; F      =    0.0000\n    Residual |   100515047   226  444756.844         R-squared     =    0.9934\n-------------+------------------------------         Adj R-squared =    0.9926\n       Total |  1.5170e+10   254  59724204.9         Root MSE      =  666.9009\n                                                     Res. dev.     =  3994.496\n(ct_1)\n------------------------------------------------------------------------------\n       price |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   254.0918   317.1045     0.80   0.424    -370.7678    878.9513\n          a4 |   505.1058   325.6388     1.55   0.122    -136.5708    1146.782\n          a5 |   708.9466   317.3172     2.23   0.026       83.668    1334.225\n          a6 |   1082.054   322.4415     3.36   0.001     446.6773     1717.43\n          a7 |   1063.014   373.9703     2.84   0.005     326.0995    1799.929\n          b2 |   .0040633   .0329008     0.12   0.902    -.0607683    .0688948\n          b3 |   .0756038    .049061     1.54   0.125    -.0210716    .1722792\n          b4 |   .0828575   .0490467     1.69   0.093    -.0137897    .1795048\n          b5 |   .0327776    .050707     0.65   0.519    -.0671415    .1326967\n          b6 |   .0351224   .0514768     0.68   0.496    -.0663135    .1365582\n          b7 |   .0825554   .0557608     1.48   0.140    -.0273221    .1924329\n          c1 |   .0326037   .1117298     0.29   0.771    -.1875618    .2527691\n          c2 |    .385946   .1204171     3.21   0.002     .1486621    .6232299\n          c3 |  -.1929238   .0568197    -3.40   0.001     -.304888   -.0809596\n          c4 |    .715212   .0736084     9.72   0.000     .5701655    .8602585\n          c5 |   .1578585     .03381     4.67   0.000     .0912354    .2244816\n          c6 |   .0641097   .0247061     2.59   0.010     .0154259    .1127934\n          c7 |   .1829447   .0242773     7.54   0.000     .1351059    .2307836\n          c8 |   6.599831   .7305317     9.03   0.000     5.160306    8.039356\n          c9 |   .1171992   .0634238     1.85   0.066    -.0077785    .2421769\n          d1 |   .4917133   .0795807     6.18   0.000     .3348983    .6485283\n          d2 |   .2622177   .1757206     1.49   0.137    -.0840426    .6084779\n          d3 |  -.0451278   .0677055    -0.67   0.506    -.1785426     .088287\n          d4 |   .3030767   .1701249     1.78   0.076    -.0321571    .6383106\n          d5 |   .0397822   .0362731     1.10   0.274    -.0316947     .111259\n          d6 |   .0967659   .0501832     1.93   0.055    -.0021208    .1956526\n          d7 |   .3052359   .0715711     4.26   0.000     .1642038     .446268\n          d8 |   6.299805   .9622249     6.55   0.000     4.403726    8.195885\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7\n&gt; ]*cyd7/*\n&gt; */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps\n&gt; _c/*\n&gt; */+_b[c7]*ac_c+_b[c8])\n\n. \n. replace winv=1/exp((_b[b2]+0.16)*tyd2+(_b[b3]+.16)*tyd3+(_b[b4]+.16)*tyd4/*\n&gt; */+(_b[b5]+.16)*tyd5+(_b[b6]+.16)*tyd6+_b[c9]*tyd7/*\n&gt; */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n&gt; */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n(75 real changes made)\n\n. \n. gen nprice=price*winv\n\n. \n. \n. program define nlct_2\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 b2 b3 b4 b5 b6 b7 c1 c2 c3 c4 c5 c6 c7 c8 c9 d1 d2\n&gt;  d3 d4 d5 d6 d7 d8\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global b2=.1\n 10. global b3=.1\n 11. global b4=.1\n 12. global b5=.1\n 13. global b6=.1\n 14. global b7=.1\n 15. global c1=.1\n 16. global c2=.1\n 17. global c3=.1\n 18. global c4=.1\n 19. global c5=.1\n 20. global c6=.1\n 21. global c7=.1\n 22. global c8=.1\n 23. global c9=.1\n 24. global d1=.1\n 25. global d2=.1\n 26. global d3=.1\n 27. global d4=.1\n 28. global d5=.1\n 29. global d6=.1\n 30. global d7=.1\n 31. global d8=.1\n 32. exit\n 33. }\n 34. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7)/*\n&gt; */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+winv*exp($b2*tyd2+($b3+.16)*tyd3+($b4+.16)*tyd4+($b5+.16)*tyd5+($b6+.16)\n&gt; *tyd6+$c9*tyd7/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 35. \n. end\n\n. \n. nl ct_2 nprice\n(obs = 254)\n\nIteration 0:   residual SS =  353.5865\n...\nIteration 20:  residual SS =  2.957295\nIteration 21:  residual SS =  2.957295\n\n      Source |       SS       df       MS            Number of obs =       254\n-------------+------------------------------         F( 28,   226) =    958.75\n       Model |  351.277591    28  12.5456282         Prob &gt; F      =    0.0000\n    Residual |  2.95729549   226  .013085378         R-squared     =    0.9917\n-------------+------------------------------         Adj R-squared =    0.9906\n       Total |  354.234886   254  1.39462554         Root MSE      =  .1143913\n                                                     Res. dev.     = -410.2562\n(ct_2)\n------------------------------------------------------------------------------\n      nprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   367.9829    239.059     1.54   0.125    -103.0867    839.0525\n          a4 |    600.553   254.2261     2.36   0.019     99.59628     1101.51\n          a5 |   887.9399   243.5428     3.65   0.000     408.0348    1367.845\n          a6 |   1104.433   251.0245     4.40   0.000     609.7847     1599.08\n          a7 |   855.7993   366.2444     2.34   0.020     134.1088     1577.49\n          b2 |   .0130387   .0303131     0.43   0.668    -.0466937    .0727711\n          b3 |   .0674477   .0425176     1.59   0.114     -.016334    .1512294\n          b4 |   .0701234   .0441821     1.59   0.114    -.0169382     .157185\n          b5 |  -.0005627   .0470779    -0.01   0.990    -.0933305    .0922051\n          b6 |   .0179989   .0473905     0.38   0.704    -.0753848    .1113826\n          b7 |   .1007712   .0641587     1.57   0.118    -.0256545    .2271969\n          c1 |   .0492474   .1311096     0.38   0.708    -.2091061     .307601\n          c2 |   .3908689   .1383663     2.82   0.005     .1182159     .663522\n          c3 |  -.0618204   .0611492    -1.01   0.313    -.1823158     .058675\n          c4 |   .8103277   .1038045     7.81   0.000     .6057792    1.014876\n          c5 |   .1779391   .0355273     5.01   0.000     .1079319    .2479463\n          c6 |   .0693687   .0304968     2.27   0.024     .0092743     .129463\n          c7 |   .1567051   .0360384     4.35   0.000     .0856908    .2277193\n          c8 |   5.839036   .8621144     6.77   0.000     4.140226    7.537847\n          c9 |   .1059852   .0550545     1.93   0.055    -.0025007    .2144711\n          d1 |   .4759918   .1172145     4.06   0.000     .2450187    .7069649\n          d2 |   .2120021   .1419991     1.49   0.137    -.0678094    .4918136\n          d3 |  -.0270369    .074052    -0.37   0.715    -.1729575    .1188837\n          d4 |     .24435   .1516866     1.61   0.109    -.0545508    .5432508\n          d5 |   .0530065   .0356148     1.49   0.138     -.017173     .123186\n          d6 |   .0575178   .0639555     0.90   0.369    -.0685076    .1835431\n          d7 |   .2971909   .0566882     5.24   0.000      .185486    .4088959\n          d8 |   6.630805   .7652819     8.66   0.000     5.122804    8.138805\n------------------------------------------------------------------------------\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. \n. preserve\n\n. keep if ve==1\n(75 observations deleted)\n\n. \n. gen quality=exp(_b[c8]+_b[b2]+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*h\n&gt; p_c/*\n&gt; */+_b[c5]*tran_c+_b[c6]*ps_c+_b[c7]*ac_c)\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\q\n&gt; uality_c,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qua\n&gt; lity_c.dta saved\n\n. \n. gen nvalue=quality*quan_c\n\n. egen aquan=mean(quan_c), by(year)\n\n. egen anvalue=mean(nvalue),by(year)\n\n. gen uquality=anvalue/aquan\n\n. collapse (mean)uquality, by(year)\n\n. list\n\n     +-----------------+\n     | year   uquality |\n     |-----------------|\n  1. |   79   4360.772 |\n  2. |   80   4472.789 |\n  3. |   81   4867.316 |\n  4. |   82   5252.845 |\n  5. |   83   5636.667 |\n     |-----------------|\n  6. |   84    5862.13 |\n  7. |   85   6130.052 |\n     +-----------------+\n\n. restore\n\n. \n. preserve\n\n. keep if ve==2\n(179 observations deleted)\n\n. \n. gen quality=exp(_b[d8]+_b[b2]+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*h\n&gt; p_t/*\n&gt; */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t)\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\q\n&gt; uality_t,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qua\n&gt; lity_t.dta saved\n\n. \n. gen nvalue=quality*quan_t\n\n. egen aquan=mean(quan_t),by(year)\n\n. egen anvalue=mean(nvalue), by(year)\n\n. gen uquality=anvalue/aquan\n\n. collapse (mean)uquality, by(year)\n\n. list\n\n     +-----------------+\n     | year   uquality |\n     |-----------------|\n  1. |   79   4626.836 |\n  2. |   80   4637.583 |\n  3. |   81   4791.255 |\n  4. |   82   4929.792 |\n  5. |   83   4997.103 |\n     |-----------------|\n  6. |   84   5009.971 |\n  7. |   85   5432.772 |\n     +-----------------+\n\n. restore\n\n. \n. program drop _all\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\unit_quality.log\n  log type:  text\n closed on:  19 Jun 2024, 23:03:38\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\nqindex_c.do\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qindex_c.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\quality_c,clear\nkeep year model type quality quan_c\nren quan_c quan\n\npreserve\nkeep if year==80\nkeep model type quality quan\nren quality quality_80\nren quan quan_80\nsort model\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\quality_80_c,replace\nrestore\n\nsort model\nmerge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\quality_80_c\nkeep if _merge==3\ndrop _merge\n\nsort year model\negen value_80=sum(quality_80*quan_80), by(year)\negen value_cp=sum(quality*quan_80), by(year)\ngen lasp=value_cp/value_80\n\negen value_c=sum(quality*quan),by(year)\negen value_cq=sum(quality_80*quan), by(year)\ngen pasp=value_c/value_cq\n\ngen qindex=(lasp*pasp)^0.5\ncollapse (mean) qindex, by(year)\n\nlist\nlog close\nOutput:\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\qindex_c.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\qindex_c.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\qindex_c.log\n  log type:  text\n opened on:  19 Jun 2024, 23:06:51\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qu\n&gt; ality_c,clear\n\n. keep year model type quality quan_c\n\n. ren quan_c quan\n\n. \n. preserve\n\n. keep if year==80\n(155 observations deleted)\n\n. keep model type quality quan\n\n. ren quality quality_80\n\n. ren quan quan_80\n\n. sort model\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\q\n&gt; uality_80_c,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qua\n&gt; lity_80_c.dta saved\n\n. restore\n\n. \n. sort model\n\n. merge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-editio\n&gt; n\\Chapter-8\\quality_80_c\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable model does not uniquely identify observations in the master data\n\n. keep if _merge==3\n(23 observations deleted)\n\n. drop _merge\n\n. \n. sort year model\n\n. egen value_80=sum(quality_80*quan_80), by(year)\n\n. egen value_cp=sum(quality*quan_80), by(year)\n\n. gen lasp=value_cp/value_80\n\n. \n. egen value_c=sum(quality*quan),by(year)\n\n. egen value_cq=sum(quality_80*quan), by(year)\n\n. gen pasp=value_c/value_cq\n\n. \n. gen qindex=(lasp*pasp)^0.5\n\n. collapse (mean) qindex, by(year)\n\n. \n. list\n\n     +-----------------+\n     | year     qindex |\n     |-----------------|\n  1. |   79    .986878 |\n  2. |   80          1 |\n  3. |   81   1.085813 |\n  4. |   82    1.15183 |\n  5. |   83   1.212675 |\n     |-----------------|\n  6. |   84   1.266379 |\n  7. |   85   1.305744 |\n     +-----------------+\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\qindex_c.log\n  log type:  text\n closed on:  19 Jun 2024, 23:06:53\n----------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\nqindex_t.do\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\qindex_t.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\qindex_t.log not found)\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\qindex_t.log\n  log type:  text\n opened on:  19 Jun 2024, 23:09:00\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qu\n&gt; ality_t,clear\n\n. keep year model type quality quan_t\n\n. ren quan_t quan\n\n. \n. preserve\n\n. keep if year==80\n(65 observations deleted)\n\n. keep model type quality quan\n\n. ren quality quality_80\n\n. ren quan quan_80\n\n. sort model\n\n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\q\n&gt; uality_80_t,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\qua\n&gt; lity_80_t.dta saved\n\n. restore\n\n. \n. sort model\n\n. merge model using Z:\\home\\pacha\\github\\advanced-international-trade\\first-editio\n&gt; n\\Chapter-8\\quality_80_t\n(note: you are using old merge syntax; see [R] merge for new syntax)\nvariable model does not uniquely identify observations in the master data\n\n. keep if _merge==3\n(14 observations deleted)\n\n. drop _merge\n\n. \n. sort year model\n\n. egen value_80=sum(quality_80*quan_80), by(year)\n\n. egen value_cp=sum(quality*quan_80), by(year)\n\n. gen lasp=value_cp/value_80\n\n. \n. egen value_c=sum(quality*quan),by(year)\n\n. egen value_cq=sum(quality_80*quan), by(year)\n\n. gen pasp=value_c/value_cq\n\n. \n. gen qindex=(lasp*pasp)^0.5\n\n. collapse (mean) qindex, by(year)\n\n. \n. list\n\n     +-----------------+\n     | year     qindex |\n     |-----------------|\n  1. |   79   .9956951 |\n  2. |   80          1 |\n  3. |   81   1.035043 |\n  4. |   82   1.058717 |\n  5. |   83   1.057227 |\n     |-----------------|\n  6. |   84   1.053449 |\n  7. |   85   1.160353 |\n     +-----------------+\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\qindex_t.log\n  log type:  text\n closed on:  19 Jun 2024, 23:09:01\n----------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\n\nMy code\n\nunit_quality.do\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(ve = 2) %&gt;%\n  rename(\n    quan_t = quan,\n    wdth_t = wdth,\n    hght_t = hght,\n    wght_t = weight,\n    hp_t = hp,\n    four_t = four,\n    tran_t = tran,\n    ps_t = ps,\n    ac_t = ac\n  )\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  filter(year &lt; 86) %&gt;%\n  mutate(ve = 1) %&gt;%\n  rename(\n    quan_c = quan,\n    wdth_c = wdth,\n    hght_c = hght,\n    wght_c = wght,\n    hp_c = hp,\n    four_c = four,\n    tran_c = tran,\n    ps_c = ps,\n    ac_c = ac\n  )\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_rows(car_7990) %&gt;%\n  mutate(\n    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),\n    hght_c = ifelse(is.na(hght_c), 0, hght_c),\n    wght_c = ifelse(is.na(wght_c), 0, wght_c),\n    hp_c = ifelse(is.na(hp_c), 0, hp_c),\n    four_c = ifelse(is.na(four_c), 0, four_c),\n    tran_c = ifelse(is.na(tran_c), 0, tran_c),\n    ps_c = ifelse(is.na(ps_c), 0, ps_c),\n    ac_c = ifelse(is.na(ac_c), 0, ac_c),\n    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),\n    hght_t = ifelse(is.na(hght_t), 0, hght_t),\n    wght_t = ifelse(is.na(wght_t), 0, wght_t),\n    hp_t = ifelse(is.na(hp_t), 0, hp_t),\n    four_t = ifelse(is.na(four_t), 0, four_t),\n    tran_t = ifelse(is.na(tran_t), 0, tran_t),\n    ps_t = ifelse(is.na(ps_t), 0, ps_t),\n    ac_t = ifelse(is.na(ac_t), 0, ac_t)\n  )\n\ntruck_7990 %&gt;%\n  group_by(year) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 7 × 4\n   year  freq percent   cum\n  &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1    79    31    12.2  12.2\n2    80    34    13.4  25.6\n3    81    35    13.8  39.4\n4    82    35    13.8  53.1\n5    83    36    14.2  67.3\n6    84    40    15.7  83.1\n7    85    43    16.9 100  \n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(yd = as.factor(year - min(year) + 1))\n\ntruck_7990_dummy &lt;- model.matrix(~ yd - 1, data = truck_7990)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_cols(as.data.frame(truck_7990_dummy))\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    cyd2 = ifelse(type == \"JT\", 0, yd2),\n    cyd3 = ifelse(type == \"JT\", 0, yd3),\n    cyd4 = ifelse(type == \"JT\", 0, yd4),\n    cyd5 = ifelse(type == \"JT\", 0, yd5),\n    cyd6 = ifelse(type == \"JT\", 0, yd6),\n    cyd7 = ifelse(type == \"JT\", 0, yd7),\n    tyd2 = ifelse(type != \"JT\", 0, yd2),\n    tyd3 = ifelse(type != \"JT\", 0, yd3),\n    tyd4 = ifelse(type != \"JT\", 0, yd4),\n    tyd5 = ifelse(type != \"JT\", 0, yd5),\n    tyd6 = ifelse(type != \"JT\", 0, yd6),\n    tyd7 = ifelse(type != \"JT\", 0, yd7)\n  )\n\ninitial_values &lt;- list(\n  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1,\n  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1,\n  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,\n  c8 = 0.1, c9 = 0.1,\n  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,\n  d8 = 0.1\n)\n\nfit &lt;- nlsLM(\n  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +\n      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +\n      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +\n    exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +\n      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +\n      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +\n      d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values\n)\n\nsummary(fit)\n\n\nFormula: price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * \n    cyd7 + exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + \n    b6 * cyd6 + b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * \n    hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * ac_c + \n    c8) + exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * \n    tyd4 + (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + \n    d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * \n    tran_t + d6 * ps_t + d7 * four_t + d8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3  2.542e+02  3.171e+02   0.802 0.423598    \na4  5.052e+02  3.256e+02   1.552 0.122150    \na5  7.090e+02  3.173e+02   2.235 0.026415 *  \na6  1.082e+03  3.224e+02   3.356 0.000926 ***\na7  1.063e+03  3.739e+02   2.843 0.004876 ** \nb2  4.065e-03  3.290e-02   0.124 0.901779    \nb3  7.559e-02  4.906e-02   1.541 0.124732    \nb4  8.284e-02  4.904e-02   1.689 0.092555 .  \nb5  3.276e-02  5.070e-02   0.646 0.518840    \nb6  3.510e-02  5.147e-02   0.682 0.495934    \nb7  8.254e-02  5.576e-02   1.480 0.140197    \nc1  3.261e-02  1.117e-01   0.292 0.770715    \nc2  3.860e-01  1.204e-01   3.205 0.001545 ** \nc3 -1.929e-01  5.683e-02  -3.395 0.000811 ***\nc4  7.152e-01  7.362e-02   9.715  &lt; 2e-16 ***\nc5  1.579e-01  3.382e-02   4.668 5.21e-06 ***\nc6  6.412e-02  2.471e-02   2.595 0.010082 *  \nc7  1.830e-01  2.428e-02   7.535 1.16e-12 ***\nc8  6.599e+00  7.307e-01   9.032  &lt; 2e-16 ***\nc9  1.172e-01  6.342e-02   1.848 0.065932 .  \nd1  4.917e-01  7.958e-02   6.179 2.97e-09 ***\nd2  2.621e-01  1.757e-01   1.492 0.137107    \nd3 -4.513e-02  6.770e-02  -0.667 0.505752    \nd4  3.031e-01  1.701e-01   1.782 0.076158 .  \nd5  3.978e-02  3.627e-02   1.097 0.273899    \nd6  9.676e-02  5.018e-02   1.928 0.055072 .  \nd7  3.052e-01  7.156e-02   4.265 2.94e-05 ***\nd8  6.300e+00  9.620e-01   6.549 3.85e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 666.9 on 226 degrees of freedom\n\nNumber of iterations to convergence: 30 \nAchieved convergence tolerance: 1.49e-08\n\nfit_coef &lt;- coef(fit)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    winv = case_when(\n      ve == 1 ~ 1 / exp(fit_coef[\"b2\"] * cyd2 + fit_coef[\"b3\"] * cyd3 +\n        fit_coef[\"b4\"] * cyd4 + fit_coef[\"b5\"] * cyd5 +\n        fit_coef[\"b6\"] * cyd6 + fit_coef[\"b7\"] * cyd7 +\n        fit_coef[\"c1\"] * wght_c + fit_coef[\"c2\"] * wdth_c +\n        fit_coef[\"c3\"] * hght_c + fit_coef[\"c4\"] * hp_c +\n        fit_coef[\"c5\"] * tran_c + fit_coef[\"c6\"] * ps_c +\n        fit_coef[\"c7\"] * ac_c + fit_coef[\"c8\"]),\n      ve == 2 ~ 1 / exp((fit_coef[\"b2\"] + 0.16) * tyd2 +\n        (fit_coef[\"b3\"] + 0.16) * tyd3 + (fit_coef[\"b4\"] + 0.16) * tyd4 +\n        (fit_coef[\"b5\"] + 0.16) * tyd5 + (fit_coef[\"b6\"] + 0.16) * tyd6 +\n        fit_coef[\"c9\"] * tyd7 + fit_coef[\"d1\"] * wght_t +\n        fit_coef[\"d2\"] * wdth_t + fit_coef[\"d3\"] * hght_t +\n        fit_coef[\"d4\"] * hp_t + fit_coef[\"d5\"] * tran_t +\n        fit_coef[\"d6\"] * ps_t + fit_coef[\"d7\"] * four_t + fit_coef[\"d8\"])\n    ),\n    nprice = price * winv\n  )\n\nfit2 &lt;- nlsLM(\n  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7) +\n    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +\n      b7 * cyd7 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +\n      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +\n    winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + (b4 + 0.16) * tyd4 +\n      (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + c9 * tyd7 + d1 * wght_t +\n      d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t +\n      d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values\n)\n\nsummary(fit2)\n\n\nFormula: nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + \n    a7 * cyd7) + winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + \n    b5 * cyd5 + b6 * cyd6 + b7 * cyd7 + c1 * wght_c + c2 * wdth_c + \n    c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * \n    ac_c + c8) + winv * exp(b2 * tyd2 + (b3 + 0.16) * tyd3 + \n    (b4 + 0.16) * tyd4 + (b5 + 0.16) * tyd5 + (b6 + 0.16) * tyd6 + \n    c9 * tyd7 + d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * \n    hp_t + d5 * tran_t + d6 * ps_t + d7 * four_t + d8)\n\nParameters:\n     Estimate Std. Error t value Pr(&gt;|t|)    \na3  3.679e+02  2.391e+02   1.539 0.125219    \na4  6.005e+02  2.543e+02   2.362 0.019041 *  \na5  8.879e+02  2.436e+02   3.645 0.000332 ***\na6  1.104e+03  2.511e+02   4.399 1.68e-05 ***\na7  8.556e+02  3.663e+02   2.336 0.020379 *  \nb2  1.304e-02  3.031e-02   0.430 0.667488    \nb3  6.745e-02  4.252e-02   1.586 0.114086    \nb4  7.013e-02  4.419e-02   1.587 0.113886    \nb5 -5.484e-04  4.708e-02  -0.012 0.990718    \nb6  1.801e-02  4.740e-02   0.380 0.704268    \nb7  1.008e-01  6.416e-02   1.571 0.117554    \nc1  4.925e-02  1.311e-01   0.376 0.707523    \nc2  3.908e-01  1.383e-01   2.825 0.005153 ** \nc3 -6.182e-02  6.114e-02  -1.011 0.313088    \nc4  8.103e-01  1.038e-01   7.807 2.17e-13 ***\nc5  1.779e-01  3.552e-02   5.009 1.10e-06 ***\nc6  6.936e-02  3.049e-02   2.275 0.023864 *  \nc7  1.567e-01  3.604e-02   4.348 2.08e-05 ***\nc8  5.839e+00  8.619e-01   6.775 1.07e-10 ***\nc9  1.060e-01  5.506e-02   1.925 0.055494 .  \nd1  4.760e-01  1.172e-01   4.060 6.76e-05 ***\nd2  2.121e-01  1.420e-01   1.493 0.136773    \nd3 -2.704e-02  7.406e-02  -0.365 0.715380    \nd4  2.443e-01  1.517e-01   1.611 0.108659    \nd5  5.301e-02  3.562e-02   1.488 0.138112    \nd6  5.751e-02  6.396e-02   0.899 0.369534    \nd7  2.972e-01  5.670e-02   5.242 3.64e-07 ***\nd8  6.630e+00  7.655e-01   8.661 8.98e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1144 on 226 degrees of freedom\n\nNumber of iterations to convergence: 31 \nAchieved convergence tolerance: 1.49e-08\n\nfit2_coef &lt;- coef(fit2)\n\n\ntruck_7990_2 &lt;- truck_7990 %&gt;%\n  filter(ve == 1) %&gt;%\n  mutate(\n    quality = exp(fit2_coef[\"c8\"] + fit2_coef[\"b2\"] + fit2_coef[\"c1\"] * wght_c +\n      fit2_coef[\"c2\"] * wdth_c + fit2_coef[\"c3\"] * hght_c +\n      fit2_coef[\"c4\"] * hp_c + fit2_coef[\"c5\"] * tran_c +\n      fit2_coef[\"c6\"] * ps_c + fit2_coef[\"c7\"] * ac_c),\n    nvalue = quality * quan_c\n  )\n\ncar_uquality &lt;- truck_7990_2 %&gt;%\n  group_by(year) %&gt;%\n  summarise(\n    aquan = mean(quan_c),\n    anvalue = mean(nvalue)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(uquality = anvalue / aquan) %&gt;%\n  group_by(year) %&gt;%\n  summarise(mean_uquality = mean(uquality))\n\ncar_uquality\n\n# A tibble: 7 × 2\n   year mean_uquality\n  &lt;dbl&gt;         &lt;dbl&gt;\n1    79         4361.\n2    80         4473.\n3    81         4868.\n4    82         5253.\n5    83         5637.\n6    84         5862.\n7    85         6130.\n\ntruck_7990_3 &lt;- truck_7990 %&gt;%\n  filter(ve == 2) %&gt;%\n  mutate(\n    quality = exp(fit2_coef[\"d8\"] + fit2_coef[\"b2\"] + fit2_coef[\"d1\"] * wght_t +\n      fit2_coef[\"d2\"] * wdth_t + fit2_coef[\"d3\"] * hght_t +\n      fit2_coef[\"d4\"] * hp_t + fit2_coef[\"d5\"] * tran_t +\n      fit2_coef[\"d6\"] * ps_t + fit2_coef[\"d7\"] * four_t),\n    nvalue = quality * quan_t\n  )\n\ntruck_uquality &lt;- truck_7990_3 %&gt;%\n  group_by(year) %&gt;%\n  summarise(\n    aquan = mean(quan_t),\n    anvalue = mean(nvalue)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(uquality = anvalue / aquan) %&gt;%\n  group_by(year) %&gt;%\n  summarise(mean_uquality = mean(uquality))\n\ntruck_uquality\n\n# A tibble: 7 × 2\n   year mean_uquality\n  &lt;dbl&gt;         &lt;dbl&gt;\n1    79         4627.\n2    80         4637.\n3    81         4791.\n4    82         4930.\n5    83         4997.\n6    84         5010.\n7    85         5433.\n\n\n\n\nqindex_c.do\n\ncar_7990_2_80 &lt;- truck_7990_2 %&gt;%\n  filter(year == 80) %&gt;%\n  select(model, type, quality, quan_c) %&gt;%\n  rename(\n    quality_80 = quality,\n    quan_80 = quan_c\n  )\n\ncar_qindex &lt;- truck_7990_2 %&gt;%\n  select(year, model, type, quality, quan_c) %&gt;%\n  inner_join(car_7990_2_80, by = c(\"model\", \"type\")) %&gt;%\n  group_by(year, model) %&gt;%\n  mutate(\n    value_80 = sum(quality_80 * quan_80),\n    value_cp = sum(quality * quan_80),\n    lasp = value_cp / value_80\n  ) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_c = sum(quality * quan_c),\n    value_cq = sum(quality_80 * quan_c),\n    pasp = value_c / value_cq,\n    qindex = sqrt(lasp * pasp)\n  ) %&gt;%\n  summarise(mean_qindex = mean(qindex))\n\ncar_qindex\n\n# A tibble: 7 × 2\n   year mean_qindex\n  &lt;dbl&gt;       &lt;dbl&gt;\n1    79       0.985\n2    80       1    \n3    81       1.09 \n4    82       1.14 \n5    83       1.20 \n6    84       1.26 \n7    85       1.33 \n\n\n\n\nqindex_t.do\n\ntruck_7990_3_80 &lt;- truck_7990_3 %&gt;%\n  filter(year == 80) %&gt;%\n  select(model, type, quality, quan_t) %&gt;%\n  rename(\n    quality_80 = quality,\n    quan_80 = quan_t\n  )\n\ntruck_qindex &lt;- truck_7990_3 %&gt;%\n  select(year, model, type, quality, quan_t) %&gt;%\n  inner_join(truck_7990_3_80, by = c(\"model\", \"type\")) %&gt;%\n  group_by(year, model) %&gt;%\n  mutate(\n    value_80 = sum(quality_80 * quan_80),\n    value_tp = sum(quality * quan_80),\n    lasp = value_tp / value_80\n  ) %&gt;%\n  group_by(year) %&gt;%\n  mutate(\n    value_t = sum(quality * quan_t),\n    value_tq = sum(quality_80 * quan_t),\n    pasp = value_t / value_tq,\n    qindex = sqrt(lasp * pasp)\n  ) %&gt;%\n  summarise(mean_qindex = mean(qindex))\n\ntruck_qindex\n\n# A tibble: 7 × 2\n   year mean_qindex\n  &lt;dbl&gt;       &lt;dbl&gt;\n1    79       0.983\n2    80       1    \n3    81       1.03 \n4    82       1.06 \n5    83       1.05 \n6    84       1.07 \n7    85       1.17 \n\n\n\n\n\nExtra step: formatting the tables\n\n# function to avoid code quadruplication\nreshape_qindex &lt;- function(data, mean_qindex_col, group, measurement) {\n  data %&gt;%\n    rename(mean_qindex = !!mean_qindex_col) %&gt;%\n    mutate(\n      qindex_pct = (mean_qindex - lag(mean_qindex)) / mean_qindex\n    ) %&gt;%\n    pivot_longer(\n      cols = c(mean_qindex, qindex_pct),\n      names_to = \"metric\",\n      values_to = \"value\"\n    ) %&gt;%\n    pivot_wider(names_from = year, values_from = value) %&gt;%\n    mutate(type = group) %&gt;%\n    mutate(metric = c(measurement, paste(measurement, \"(% Change)\"))) %&gt;%\n    select(type, metric, everything()) %&gt;%\n    mutate_if(is.numeric, ~ round(., 3))\n}\n\ntable83 &lt;- reshape_qindex(car_uquality, \"mean_uquality\", \"Japanese Cars\", \"Unit quality\") %&gt;%\n  bind_rows(\n    reshape_qindex(car_qindex, \"mean_qindex\", \"Japanese Cars\", \"Quality index\")\n  ) %&gt;%\n  bind_rows(\n    reshape_qindex(truck_uquality, \"mean_uquality\", \"Japanese Trucks\", \"Unit quality\")\n  ) %&gt;%\n  bind_rows(\n    reshape_qindex(truck_qindex, \"mean_qindex\", \"Japanese Trucks\", \"Quality index\")\n  )\n\ncolnames(table83) &lt;- c(\"Type\", \"Metric\", paste0(\"19\", 79:85))\n\nkable(table83)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nMetric\n1979\n1980\n1981\n1982\n1983\n1984\n1985\n\n\n\n\nJapanese Cars\nUnit quality\n4361.162\n4473.178\n4867.702\n5253.221\n5637.037\n5862.490\n6130.408\n\n\nJapanese Cars\nUnit quality (% Change)\nNA\n0.025\n0.081\n0.073\n0.068\n0.038\n0.044\n\n\nJapanese Cars\nQuality index\n0.985\n1.000\n1.085\n1.144\n1.204\n1.263\n1.328\n\n\nJapanese Cars\nQuality index (% Change)\nNA\n0.015\n0.079\n0.052\n0.049\n0.047\n0.049\n\n\nJapanese Trucks\nUnit quality\n4626.649\n4637.404\n4791.084\n4929.624\n4996.917\n5009.782\n5432.585\n\n\nJapanese Trucks\nUnit quality (% Change)\nNA\n0.002\n0.032\n0.028\n0.013\n0.003\n0.078\n\n\nJapanese Trucks\nQuality index\n0.983\n1.000\n1.032\n1.056\n1.054\n1.068\n1.167\n\n\nJapanese Trucks\nQuality index (% Change)\nNA\n0.017\n0.031\n0.023\n-0.002\n0.013\n0.085",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html#exercise-5",
    "href": "chapter8.html#exercise-5",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "Exercise 5",
    "text": "Exercise 5\nPooling car and truck data, run system_nocom.do and system_wcon.do to reproduce columns (1) - (4) in Table 8.5, with constraints specified in equation (8.22).\n\nFeenstra’s code\n\nsystem_nocom.do\nIn the original code:\ngen cyd10=yd10\ngen tyd10=yd10\nreplace cyd7=10 if type==\"JT\"\nreplace tyd7=10 if type~=\"JT\"\n\ngen cyd11=yd11\ngen tyd11=yd11\nreplace cyd7=11 if type==\"JT\"\nreplace tyd7=11 if type~=\"JT\"\n\ngen cyd12=yd12\ngen tyd12=yd12\nreplace cyd7=12 if type==\"JT\"\nreplace tyd7=12 if type~=\"JT\"\nCan be simplified to:\ngen cyd10=yd10\ngen tyd10=yd10\n\ngen cyd11=yd11\ngen tyd11=yd11\n\ngen cyd12=yd12\ngen tyd12=yd12\n\nreplace cyd7=12 if type==\"JT\"\nreplace tyd7=12 if type~=\"JT\"\nThe original code is:\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\system_nocon.log,replace\n\nset matsize 400\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_7990,clear\ngen ve=2\nrename wdth wdth_t\nrename hght hght_t\nrename weight wght_t\nrename hp hp_t\nrename four four_t\nrename tran tran_t\nrename ps ps_t\nrename ac ac_t\n\nsave Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\car_7990,clear\ngen ve=1\nrename wdth wdth_c\nrename hght hght_c\nrename wght wght_c\nrename hp hp_c\nrename four four_c\nrename tran tran_c\nrename ps ps_c\nrename ac ac_c\n\nappend using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\truck_temp\n\nreplace wdth_c=0 if wdth_c==.\nreplace hght_c=0 if hght_c==.\nreplace wght_c=0 if wght_c==.\nreplace hp_c=0 if hp_c==.\nreplace four_c=0 if four_c==.\nreplace tran_c=0 if tran_c==.\nreplace ps_c=0 if ps_c==.\nreplace ac_c=0 if ac_c==.\nreplace wdth_t=0 if wdth_t==.\nreplace hght_t=0 if hght_t==.\nreplace wght_t=0 if wght_t==.\nreplace hp_t=0 if hp_t==.\nreplace four_t=0 if four_t==.\nreplace tran_t=0 if tran_t==.\nreplace ps_t=0 if ps_t==.\nreplace ac_t=0 if ac_t==.\n\ntab year, gen(yd)\n\ngen cyd2=yd2\ngen tyd2=yd2\nreplace cyd2=0 if type==\"JT\"\nreplace tyd2=0 if type~=\"JT\"\n\ngen cyd3=yd3\ngen tyd3=yd3\nreplace cyd3=0 if type==\"JT\"\nreplace tyd3=0 if type~=\"JT\"\n\ngen cyd4=yd4\ngen tyd4=yd4\nreplace cyd4=0 if type==\"JT\"\nreplace tyd4=0 if type~=\"JT\"\n\ngen cyd5=yd5\ngen tyd5=yd5\nreplace cyd5=0 if type==\"JT\"\nreplace tyd5=0 if type~=\"JT\"\n\ngen cyd6=yd6\ngen tyd6=yd6\nreplace cyd6=0 if type==\"JT\"\nreplace tyd6=0 if type~=\"JT\"\n\ngen cyd7=yd7\ngen tyd7=yd7\nreplace cyd7=0 if type==\"JT\"\nreplace tyd7=0 if type~=\"JT\"\n\ngen cyd8=yd8\ngen tyd8=yd8\nreplace cyd8=0 if type==\"JT\"\nreplace tyd8=0 if type~=\"JT\"\n\ngen cyd9=yd9\ngen tyd9=yd9\nreplace cyd9=0 if type==\"JT\"\nreplace tyd9=0 if type~=\"JT\"\n\ngen cyd10=yd10\ngen tyd10=yd10\nreplace cyd7=10 if type==\"JT\"\nreplace tyd7=10 if type~=\"JT\"\n\ngen cyd11=yd11\ngen tyd11=yd11\nreplace cyd7=11 if type==\"JT\"\nreplace tyd7=11 if type~=\"JT\"\n\ngen cyd12=yd12\ngen tyd12=yd12\nreplace cyd7=12 if type==\"JT\"\nreplace tyd7=12 if type~=\"JT\"\n\nprogram define nlct_1\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 e11 e12\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal a8=1\nglobal a9=1\nglobal a10=1\nglobal a11=1\nglobal a12=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal b8=.1\nglobal b9=.1\nglobal b10=.1\nglobal b11=.1\nglobal b12=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nglobal e2=.1\nglobal e3=.1\nglobal e4=.1\nglobal e5=.1\nglobal e6=.1\nglobal e7=.1\nglobal e8=.1\nglobal e9=.1\nglobal e10=.1\nglobal e11=.1\nglobal e12=.1\nexit\n}\n\nreplace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n*/+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12/*\n*/+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*\n*/+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_1 price\n\ngen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7]*cyd7/*\n*/+_b[b8]*cyd8+_b[b9]*cyd9+_b[b10]*cyd10+_b[b11]*cyd11+_b[b12]*cyd12/*\n*/+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps_c/*\n*/+_b[c7]*ac_c+_b[c8])\n\nreplace winv=1/exp(_b[e2]*tyd2+_b[e3]*tyd3+_b[e4]*tyd4+_b[e5]*tyd5+_b[e6]*tyd6/*\n*/+_b[e7]*tyd7+_b[e8]*tyd8+_b[e9]*tyd9+_b[e10]*tyd10+_b[e11]*tyd11+_b[e12]*tyd12/*\n*/+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n*/+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n\ngen nprice=price*winv\n\n\nprogram define nlct_2\nversion 7.0\nif \"`1'\"==\"?\"{\nglobal S_1 \"a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 e11 e12\"\nglobal a3=1\nglobal a4=1\nglobal a5=1\nglobal a6=1\nglobal a7=1\nglobal a8=1\nglobal a9=1\nglobal a10=1\nglobal a11=1\nglobal a12=1\nglobal b2=.1\nglobal b3=.1\nglobal b4=.1\nglobal b5=.1\nglobal b6=.1\nglobal b7=.1\nglobal b8=.1\nglobal b9=.1\nglobal b10=.1\nglobal b11=.1\nglobal b12=.1\nglobal c1=.1\nglobal c2=.1\nglobal c3=.1\nglobal c4=.1\nglobal c5=.1\nglobal c6=.1\nglobal c7=.1\nglobal c8=.1\nglobal d1=.1\nglobal d2=.1\nglobal d3=.1\nglobal d4=.1\nglobal d5=.1\nglobal d6=.1\nglobal d7=.1\nglobal d8=.1\nglobal e2=.1\nglobal e3=.1\nglobal e4=.1\nglobal e5=.1\nglobal e6=.1\nglobal e7=.1\nglobal e8=.1\nglobal e9=.1\nglobal e10=.1\nglobal e11=.1\nglobal e12=.1\nexit\n}\n\nreplace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n*/+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12)/*\n*/+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n*/+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*\n*/+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n*/+$c8)+winv*exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*\n*/+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*\n*/+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n\nend\n\nnl ct_2 nprice\n\nprogram drop _all\nlog close\nexit\nOutput:\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapte\n&gt; r-8\\system_nocon.log,replace\n----------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\system_nocon.log\n  log type:  text\n opened on:   6 Jul 2024, 23:01:56\n\n. \n. set matsize 400\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           50M    max. data space                 50.000M\n    set matsize         400     max. RHS vars in models          1.254M\n                                                            -----------\n                                                                53.163M\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tr\n&gt; uck_7990,clear\n\n. gen ve=2\n\n. rename wdth wdth_t\n\n. rename hght hght_t\n\n. rename weight wght_t\n\n. rename hp hp_t\n\n. rename four four_t\n\n. rename tran tran_t\n\n. rename ps ps_t\n\n. rename ac ac_t\n\n. \n. save Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\t\n&gt; ruck_temp,replace\nfile Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\tru\n&gt; ck_temp.dta saved\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-8\\ca\n&gt; r_7990,clear\n\n. gen ve=1\n\n. rename wdth wdth_c\n\n. rename hght hght_c\n\n. rename wght wght_c\n\n. rename hp hp_c\n\n. rename four four_c\n\n. rename tran tran_c\n\n. rename ps ps_c\n\n. rename ac ac_c\n\n. \n. append using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Cha\n&gt; pter-8\\truck_temp\n\n. \n. replace wdth_c=0 if wdth_c==.\n(120 real changes made)\n\n. replace hght_c=0 if hght_c==.\n(120 real changes made)\n\n. replace wght_c=0 if wght_c==.\n(120 real changes made)\n\n. replace hp_c=0 if hp_c==.\n(120 real changes made)\n\n. replace four_c=0 if four_c==.\n(120 real changes made)\n\n. replace tran_c=0 if tran_c==.\n(120 real changes made)\n\n. replace ps_c=0 if ps_c==.\n(120 real changes made)\n\n. replace ac_c=0 if ac_c==.\n(120 real changes made)\n\n. replace wdth_t=0 if wdth_t==.\n(284 real changes made)\n\n. replace hght_t=0 if hght_t==.\n(284 real changes made)\n\n. replace wght_t=0 if wght_t==.\n(284 real changes made)\n\n. replace hp_t=0 if hp_t==.\n(284 real changes made)\n\n. replace four_t=0 if four_t==.\n(284 real changes made)\n\n. replace tran_t=0 if tran_t==.\n(284 real changes made)\n\n. replace ps_t=0 if ps_t==.\n(284 real changes made)\n\n. replace ac_t=0 if ac_t==.\n(284 real changes made)\n\n. \n. tab year, gen(yd)\n\n       year |      Freq.     Percent        Cum.\n------------+-----------------------------------\n         79 |         31        7.67        7.67\n         80 |         34        8.42       16.09\n         81 |         35        8.66       24.75\n         82 |         35        8.66       33.42\n         83 |         36        8.91       42.33\n         84 |         40        9.90       52.23\n         85 |         43       10.64       62.87\n         86 |         33        8.17       71.04\n         87 |         35        8.66       79.70\n         88 |         30        7.43       87.13\n         89 |         26        6.44       93.56\n         90 |         26        6.44      100.00\n------------+-----------------------------------\n      Total |        404      100.00\n\n. \n. gen cyd2=yd2\n\n. gen tyd2=yd2\n\n. replace cyd2=0 if type==\"JT\"\n(8 real changes made)\n\n. replace tyd2=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd3=yd3\n\n. gen tyd3=yd3\n\n. replace cyd3=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd3=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd4=yd4\n\n. gen tyd4=yd4\n\n. replace cyd4=0 if type==\"JT\"\n(9 real changes made)\n\n. replace tyd4=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd5=yd5\n\n. gen tyd5=yd5\n\n. replace cyd5=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd5=0 if type~=\"JT\"\n(29 real changes made)\n\n. \n. gen cyd6=yd6\n\n. gen tyd6=yd6\n\n. replace cyd6=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd6=0 if type~=\"JT\"\n(33 real changes made)\n\n. \n. gen cyd7=yd7\n\n. gen tyd7=yd7\n\n. replace cyd7=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd7=0 if type~=\"JT\"\n(36 real changes made)\n\n. \n. gen cyd8=yd8\n\n. gen tyd8=yd8\n\n. replace cyd8=0 if type==\"JT\"\n(7 real changes made)\n\n. replace tyd8=0 if type~=\"JT\"\n(26 real changes made)\n\n. \n. gen cyd9=yd9\n\n. gen tyd9=yd9\n\n. replace cyd9=0 if type==\"JT\"\n(6 real changes made)\n\n. replace tyd9=0 if type~=\"JT\"\n(29 real changes made)\n\n. \n. gen cyd10=yd10\n\n. gen tyd10=yd10\n\n. replace cyd7=10 if type==\"JT\"\n(84 real changes made)\n\n. replace tyd7=10 if type~=\"JT\"\n(320 real changes made)\n\n. \n. gen cyd11=yd11\n\n. gen tyd11=yd11\n\n. replace cyd7=11 if type==\"JT\"\n(84 real changes made)\n\n. replace tyd7=11 if type~=\"JT\"\n(320 real changes made)\n\n. \n. gen cyd12=yd12\n\n. gen tyd12=yd12\n\n. replace cyd7=12 if type==\"JT\"\n(84 real changes made)\n\n. replace tyd7=12 if type~=\"JT\"\n(320 real changes made)\n\n. \n. program define nlct_1\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 \n&gt; b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 \n&gt; e11 e12\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global a8=1\n 10. global a9=1\n 11. global a10=1\n 12. global a11=1\n 13. global a12=1\n 14. global b2=.1\n 15. global b3=.1\n 16. global b4=.1\n 17. global b5=.1\n 18. global b6=.1\n 19. global b7=.1\n 20. global b8=.1\n 21. global b9=.1\n 22. global b10=.1\n 23. global b11=.1\n 24. global b12=.1\n 25. global c1=.1\n 26. global c2=.1\n 27. global c3=.1\n 28. global c4=.1\n 29. global c5=.1\n 30. global c6=.1\n 31. global c7=.1\n 32. global c8=.1\n 33. global d1=.1\n 34. global d2=.1\n 35. global d3=.1\n 36. global d4=.1\n 37. global d5=.1\n 38. global d6=.1\n 39. global d7=.1\n 40. global d8=.1\n 41. global e2=.1\n 42. global e3=.1\n 43. global e4=.1\n 44. global e5=.1\n 45. global e6=.1\n 46. global e7=.1\n 47. global e8=.1\n 48. global e9=.1\n 49. global e10=.1\n 50. global e11=.1\n 51. global e12=.1\n 52. exit\n 53. }\n 54. \n. replace `1'=$a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n&gt; */+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12/*\n&gt; */+exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*\n&gt; */+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 55. \n. end\n\n. \n. nl ct_1 price\n(obs = 404)\n\nIteration 0:   residual SS =  3.68e+10\n...\nIteration 24:  residual SS =  3.13e+08\nIteration 25:  residual SS =  3.13e+08\n\n      Source |       SS       df       MS            Number of obs =       404\n-------------+------------------------------         F( 46,   357) =    147.07\n       Model |  5.9297e+09    46   128906902         Prob &gt; F      =    0.0000\n    Residual |   312918865   357  876523.431         R-squared     =    0.9499\n-------------+------------------------------         Adj R-squared =    0.9434\n       Total |  6.2426e+09   403  15490412.8         Root MSE      =  936.2283\n                                                     Res. dev.     =  6624.758\n(ct_1)\n------------------------------------------------------------------------------\n       price |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   277.0869   551.2618     0.50   0.616    -807.0417    1361.215\n          a4 |   21.66828   535.0463     0.04   0.968    -1030.571    1073.907\n          a5 |   147.2889   494.2067     0.30   0.766    -824.6333    1119.211\n          a6 |    556.957   484.3219     1.15   0.251    -395.5256     1509.44\n          a7 |  -7.057291   101.5543    -0.07   0.945    -206.7772    192.6626\n          a8 |   771.0952   521.6698     1.48   0.140     -254.837    1797.027\n          a9 |    1191.93   517.0276     2.31   0.022     175.1272    2208.733\n         a10 |   657.8229   728.4691     0.90   0.367    -774.8072    2090.453\n         a11 |  -450.8028   817.0406    -0.55   0.581     -2057.62    1156.015\n         a12 |  -433.4064   772.5761    -0.56   0.575    -1952.779    1085.966\n          b2 |  -.0841009     .04192    -2.01   0.046    -.1665421   -.0016597\n          b3 |  -.0056866   .0864787    -0.07   0.948    -.1757583    .1643851\n          b4 |   .0872793   .0747481     1.17   0.244    -.0597227    .2342813\n          b5 |   .0666161   .0692594     0.96   0.337    -.0695916    .2028239\n          b6 |   .0749652   .0668452     1.12   0.263    -.0564948    .2064251\n          b7 |   .1526226   .0314581     4.85   0.000     .0907562    .2144891\n          b8 |   .1437711    .065557     2.19   0.029     .0148446    .2726975\n          b9 |   .1988908    .062616     3.18   0.002     .0757482    .3220335\n         b10 |   .2857005   .0719646     3.97   0.000     .1441727    .4272282\n         b11 |   .4104976   .0690287     5.95   0.000     .2747436    .5462515\n         b12 |   .3679665   .0684655     5.37   0.000     .2333201    .5026129\n          c1 |   .4662111   .0865907     5.38   0.000     .2959191    .6365031\n          c2 |   .5300141   .0640388     8.28   0.000     .4040735    .6559547\n          c3 |  -.3625191   .0443666    -8.17   0.000    -.4497719   -.2752663\n          c4 |   .2502107   .0387283     6.46   0.000     .1740464     .326375\n          c5 |    .063748   .0203705     3.13   0.002     .0236867    .1038093\n          c6 |    .108309   .0205511     5.27   0.000     .0678925    .1487255\n          c7 |   .1667295   .0205709     8.11   0.000     .1262742    .2071848\n          c8 |   6.664738   .3769454    17.68   0.000     5.923426    7.406051\n          d1 |   .4827909   .0948538     5.09   0.000     .2962486    .6693333\n          d2 |   .6237576   .3207663     1.94   0.053    -.0070714    1.254587\n          d3 |  -.1758063   .0807852    -2.18   0.030    -.3346811   -.0169316\n          d4 |   .4714717   .1961516     2.40   0.017     .0857138    .8572296\n          d5 |   .0368238   .0705556     0.52   0.602     -.101933    .1755805\n          d6 |   .0595696    .060131     0.99   0.323    -.0586858     .177825\n          d7 |    .184348   .0926225     1.99   0.047     .0021937    .3665023\n          d8 |   2.773037   1.807071     1.53   0.126    -.7808051     6.32688\n          e2 |  -2.59e+09          .        .       .            .           .\n          e3 |   1.002811   .5449131     1.84   0.067    -.0688323    2.074454\n          e4 |   1.089538   .5484653     1.99   0.048     .0109092    2.168167\n          e5 |   .7809413   .5636633     1.39   0.167    -.3275767    1.889459\n          e6 |   .8176126   .5623188     1.45   0.147    -.2882611    1.923486\n          e7 |   .1963533   .0542407     3.62   0.000     .0896819    .3030248\n          e8 |   .9909852   .5576036     1.78   0.076    -.1056155    2.087586\n          e9 |   1.011894   .5669185     1.78   0.075    -.1030257    2.126813\n         e10 |   .0766676   .1003499     0.76   0.445    -.1206836    .2740188\n         e11 |   .3305375   .0754574     4.38   0.000     .1821406    .4789343\n         e12 |   .4674833   .0740926     6.31   0.000     .3217704    .6131961\n------------------------------------------------------------------------------\n* Parameter e2 taken as constant term in model & ANOVA table\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. gen winv=1/exp(_b[b2]*cyd2+_b[b3]*cyd3+_b[b4]*cyd4+_b[b5]*cyd5+_b[b6]*cyd6+_b[b7\n&gt; ]*cyd7/*\n&gt; */+_b[b8]*cyd8+_b[b9]*cyd9+_b[b10]*cyd10+_b[b11]*cyd11+_b[b12]*cyd12/*\n&gt; */+_b[c1]*wght_c+_b[c2]*wdth_c+_b[c3]*hght_c+_b[c4]*hp_c+_b[c5]*tran_c+_b[c6]*ps\n&gt; _c/*\n&gt; */+_b[c7]*ac_c+_b[c8])\n\n. \n. replace winv=1/exp(_b[e2]*tyd2+_b[e3]*tyd3+_b[e4]*tyd4+_b[e5]*tyd5+_b[e6]*tyd6/*\n&gt; */+_b[e7]*tyd7+_b[e8]*tyd8+_b[e9]*tyd9+_b[e10]*tyd10+_b[e11]*tyd11+_b[e12]*tyd12\n&gt; /*\n&gt; */+_b[d1]*wght_t+_b[d2]*wdth_t+_b[d3]*hght_t+_b[d4]*hp_t/*\n&gt; */+_b[d5]*tran_t+_b[d6]*ps_t+_b[d7]*four_t+_b[d8]) if ve==2\n(120 real changes made, 8 to missing)\n\n. \n. gen nprice=price*winv\n(8 missing values generated)\n\n. \n. \n. program define nlct_2\n  1. version 7.0\n  2. if \"`1'\"==\"?\"{\n  3. global S_1 \"a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 \n&gt; b12 c1 c2 c3 c4 c5 c6 c7 c8 d1 d2 d3 d4 d5 d6 d7 d8 e2 e3 e4 e5 e6 e7 e8 e9 e10 \n&gt; e11 e12\"\n  4. global a3=1\n  5. global a4=1\n  6. global a5=1\n  7. global a6=1\n  8. global a7=1\n  9. global a8=1\n 10. global a9=1\n 11. global a10=1\n 12. global a11=1\n 13. global a12=1\n 14. global b2=.1\n 15. global b3=.1\n 16. global b4=.1\n 17. global b5=.1\n 18. global b6=.1\n 19. global b7=.1\n 20. global b8=.1\n 21. global b9=.1\n 22. global b10=.1\n 23. global b11=.1\n 24. global b12=.1\n 25. global c1=.1\n 26. global c2=.1\n 27. global c3=.1\n 28. global c4=.1\n 29. global c5=.1\n 30. global c6=.1\n 31. global c7=.1\n 32. global c8=.1\n 33. global d1=.1\n 34. global d2=.1\n 35. global d3=.1\n 36. global d4=.1\n 37. global d5=.1\n 38. global d6=.1\n 39. global d7=.1\n 40. global d8=.1\n 41. global e2=.1\n 42. global e3=.1\n 43. global e4=.1\n 44. global e5=.1\n 45. global e6=.1\n 46. global e7=.1\n 47. global e8=.1\n 48. global e9=.1\n 49. global e10=.1\n 50. global e11=.1\n 51. global e12=.1\n 52. exit\n 53. }\n 54. \n. replace `1'=winv*($a3*cyd3+$a4*cyd4+$a5*cyd5+$a6*cyd6+$a7*cyd7/*\n&gt; */+$a8*cyd8+$a9*cyd9+$a10*cyd10+$a11*cyd11+$a12*cyd12)/*\n&gt; */+winv*exp($b2*cyd2+$b3*cyd3+$b4*cyd4+$b5*cyd5+$b6*cyd6+$b7*cyd7/*\n&gt; */+$b8*cyd8+$b9*cyd9+$b10*cyd10+$b11*cyd11+$b12*cyd12/*\n&gt; */+$c1*wght_c+$c2*wdth_c+$c3*hght_c+$c4*hp_c+$c5*tran_c+$c6*ps_c+$c7*ac_c/*\n&gt; */+$c8)+winv*exp($e2*tyd2+$e3*tyd3+$e4*tyd4+$e5*tyd5+$e6*tyd6+$e7*tyd7/*\n&gt; */+$e8*tyd8+$e9*tyd9+$e10*tyd10+$e11*tyd11+$e12*tyd12/*\n&gt; */+$d1*wght_t+$d2*wdth_t+$d3*hght_t+$d4*hp_t+$d5*tran_t+$d6*ps_t+$d7*four_t+$d8)\n 55. \n. end\n\n. \n. nl ct_2 nprice\n(obs = 396)\n\nIteration 0:   residual SS =  3738.817\n...\nIteration 32:  residual SS =  15.11498\nIteration 33:  residual SS =  15.11498\n\n      Source |       SS       df       MS            Number of obs =       396\n-------------+------------------------------         F( 46,   349) =   1037.51\n       Model |  2066.95212    46  44.9337418         Prob &gt; F      =    0.0000\n    Residual |  15.1149771   349   .04330939         R-squared     =    0.9927\n-------------+------------------------------         Adj R-squared =    0.9918\n       Total |   2082.0671   395  5.27105594         Root MSE      =  .2081091\n                                                     Res. dev.     =  -169.429\n(ct_2)\n------------------------------------------------------------------------------\n      nprice |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          a3 |   165.6435   524.1069     0.32   0.752    -865.1618    1196.449\n          a4 |   255.2019   575.0953     0.44   0.657    -875.8867     1386.29\n          a5 |    382.162   544.9258     0.70   0.484    -689.5897    1453.914\n          a6 |    561.334   534.9376     1.05   0.295    -490.7731    1613.441\n          a7 |    32.3127   99.45926     0.32   0.745    -163.3022    227.9276\n          a8 |    427.688   694.9132     0.62   0.539    -939.0566    1794.433\n          a9 |   1338.024   667.4732     2.00   0.046     25.24802      2650.8\n         a10 |   1354.805   1272.661     1.06   0.288    -1148.245    3857.854\n         a11 |   3732.851    1148.03     3.25   0.001     1474.923    5990.778\n         a12 |   4310.495   998.1988     4.32   0.000     2347.253    6273.737\n          b2 |   -.053796    .124424    -0.43   0.666    -.2985112    .1909192\n          b3 |   .1024193   .1947552     0.53   0.599    -.2806223    .4854609\n          b4 |   .1508038   .1964602     0.77   0.443    -.2355911    .5371987\n          b5 |    .104406   .1879434     0.56   0.579    -.2652381      .47405\n          b6 |    .161327   .1825493     0.88   0.377    -.1977082    .5203622\n          b7 |    .299865   .1270196     2.36   0.019     .0500448    .5496851\n          b8 |   .4180167   .1963952     2.13   0.034     .0317497    .8042836\n          b9 |   .4275378    .190593     2.24   0.026     .0526824    .8023932\n         b10 |    .473833   .1983748     2.39   0.017     .0836725    .8639936\n         b11 |   .3078561    .206895     1.49   0.138    -.0990619    .7147741\n         b12 |   .1790811   .2035596     0.88   0.380    -.2212767     .579439\n          c1 |   .6665196   .3118486     2.14   0.033     .0531805    1.279859\n          c2 |   1.066573   .3592669     2.97   0.003     .3599729    1.773174\n          c3 |  -.3333017   .1511001    -2.21   0.028    -.6304831   -.0361203\n          c4 |   .4277256   .1382984     3.09   0.002     .1557224    .6997287\n          c5 |   .2157146   .0848215     2.54   0.011     .0488889    .3825402\n          c6 |   .1948046   .0696014     2.80   0.005     .0579136    .3316957\n          c7 |   .1545815   .0715104     2.16   0.031      .013936     .295227\n          c8 |   2.456385    2.09751     1.17   0.242    -1.668965    6.581735\n          d1 |   .5464099   .0950598     5.75   0.000     .3594477    .7333721\n          d2 |   .0486571   .0432501     1.13   0.261    -.0364066    .1337208\n          d3 |  -.0695537   .0449695    -1.55   0.123     -.157999    .0188915\n          d4 |   .3998404   .0759349     5.27   0.000     .2504929    .5491879\n          d5 |   .0875427   .0184166     4.75   0.000     .0513213    .1237641\n          d6 |    .039679    .075099     0.53   0.598    -.1080246    .1873827\n          d7 |  -.0740434   .1046904    -0.71   0.480    -.2799468      .13186\n          d8 |   7.377294   .2976717    24.78   0.000     6.791838     7.96275\n          e2 |         .1          .        .       .            .           .\n          e3 |   .2699934   .0481155     5.61   0.000     .1753605    .3646263\n          e4 |   .2654374    .048439     5.48   0.000     .1701684    .3607065\n          e5 |   .1633878    .033666     4.85   0.000      .097174    .2296016\n          e6 |   .1719965   .0352488     4.88   0.000     .1026697    .2413233\n          e7 |   .0506695    .015178     3.34   0.001     .0208177    .0805213\n          e8 |   .1550894   .0392545     3.95   0.000     .0778843    .2322944\n          e9 |   .1318401   .0385509     3.42   0.001     .0560188    .2076615\n         e10 |   -.047726   .2001646    -0.24   0.812    -.4414067    .3459547\n         e11 |  -.5569037   .3050303    -1.83   0.069    -1.156833    .0430251\n         e12 |  -.6348534    .314223    -2.02   0.044    -1.252862   -.0168445\n------------------------------------------------------------------------------\n* Parameter e2 taken as constant term in model & ANOVA table\n (SEs, P values, CIs, and correlations are asymptotic approximations)\n\n. \n. program drop _all\n\n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapt\n&gt; er-8\\system_nocon.log\n  log type:  text\n closed on:   6 Jul 2024, 23:02:18\n----------------------------------------------------------------------------------\n\n. exit\n\nend of do-file\n\n\n\nMy code\n\nsystem_nocom.do\n\ntruck_7990 &lt;- feenstra_88$truck_7990 %&gt;%\n  mutate(ve = 2) %&gt;%\n  rename(\n    wdth_t = wdth, hght_t = hght, wght_t = weight, hp_t = hp, four_t = four,\n    tran_t = tran, ps_t = ps, ac_t = ac\n  )\n\ncar_7990 &lt;- feenstra_88$car_7990 %&gt;%\n  mutate(ve = 1) %&gt;%\n  rename(\n    wdth_c = wdth, hght_c = hght, wght_c = wght, hp_c = hp, four_c = four,\n    tran_c = tran, ps_c = ps, ac_c = ac\n  )\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_rows(car_7990) %&gt;%\n  mutate(\n    wdth_c = ifelse(is.na(wdth_c), 0, wdth_c),\n    hght_c = ifelse(is.na(hght_c), 0, hght_c),\n    wght_c = ifelse(is.na(wght_c), 0, wght_c),\n    hp_c = ifelse(is.na(hp_c), 0, hp_c),\n    four_c = ifelse(is.na(four_c), 0, four_c),\n    tran_c = ifelse(is.na(tran_c), 0, tran_c),\n    ps_c = ifelse(is.na(ps_c), 0, ps_c),\n    ac_c = ifelse(is.na(ac_c), 0, ac_c),\n    wdth_t = ifelse(is.na(wdth_t), 0, wdth_t),\n    hght_t = ifelse(is.na(hght_t), 0, hght_t),\n    wght_t = ifelse(is.na(wght_t), 0, wght_t),\n    hp_t = ifelse(is.na(hp_t), 0, hp_t),\n    four_t = ifelse(is.na(four_t), 0, four_t),\n    tran_t = ifelse(is.na(tran_t), 0, tran_t),\n    ps_t = ifelse(is.na(ps_t), 0, ps_t),\n    ac_t = ifelse(is.na(ac_t), 0, ac_t)\n  )\n\ntruck_7990 %&gt;%\n  group_by(year) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    percent = freq / sum(freq) * 100,\n    cum = cumsum(percent)\n  )\n\n# A tibble: 12 × 4\n    year  freq percent    cum\n   &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1    79    31    7.67   7.67\n 2    80    34    8.42  16.1 \n 3    81    35    8.66  24.8 \n 4    82    35    8.66  33.4 \n 5    83    36    8.91  42.3 \n 6    84    40    9.90  52.2 \n 7    85    43   10.6   62.9 \n 8    86    33    8.17  71.0 \n 9    87    35    8.66  79.7 \n10    88    30    7.43  87.1 \n11    89    26    6.44  93.6 \n12    90    26    6.44 100   \n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(yd = as.factor(year - min(year) + 1))\n\ntruck_7990_dummy &lt;- model.matrix(~ yd - 1, data = truck_7990)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  bind_cols(as.data.frame(truck_7990_dummy))\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    cyd2 = ifelse(type == \"JT\", 0, yd2),\n    cyd3 = ifelse(type == \"JT\", 0, yd3),\n    cyd4 = ifelse(type == \"JT\", 0, yd4),\n    cyd5 = ifelse(type == \"JT\", 0, yd5),\n    cyd6 = ifelse(type == \"JT\", 0, yd6),\n    cyd7 = ifelse(type == \"JT\", 12, yd7),\n    cyd8 = ifelse(type == \"JT\", 0, yd8),\n    cyd9 = ifelse(type == \"JT\", 0, yd9),\n    cyd10 = yd10,\n    cyd11 = yd11,\n    cyd12 = yd12,\n    tyd2 = ifelse(type != \"JT\", 0, yd2),\n    tyd3 = ifelse(type != \"JT\", 0, yd3),\n    tyd4 = ifelse(type != \"JT\", 0, yd4),\n    tyd5 = ifelse(type != \"JT\", 0, yd5),\n    tyd6 = ifelse(type != \"JT\", 0, yd6),\n    tyd7 = ifelse(type != \"JT\", 12, yd7),\n    tyd8 = ifelse(type != \"JT\", 0, yd8),\n    tyd9 = ifelse(type != \"JT\", 0, yd9),\n    tyd10 = yd10,\n    tyd11 = yd11,\n    tyd12 = yd12\n  )\n\n\ninitial_values &lt;- list(\n  a3 = 1, a4 = 1, a5 = 1, a6 = 1, a7 = 1, a8 = 1, a9 = 1, a10 = 1, a11 = 1,\n  a12 = 1,\n  b2 = 0.1, b3 = 0.1, b4 = 0.1, b5 = 0.1, b6 = 0.1, b7 = 0.1, b8 = 0.1,\n  b9 = 0.1, b10 = 0.1, b11 = 0.1, b12 = 0.1,\n  c1 = 0.1, c2 = 0.1, c3 = 0.1, c4 = 0.1, c5 = 0.1, c6 = 0.1, c7 = 0.1,\n  c8 = 0.1,\n  d1 = 0.1, d2 = 0.1, d3 = 0.1, d4 = 0.1, d5 = 0.1, d6 = 0.1, d7 = 0.1,\n  d8 = 0.1,\n  e2 = 0.1, e3 = 0.1, e4 = 0.1, e5 = 0.1, e6 = 0.1, e7 = 0.1, e8 = 0.1,\n  e9 = 0.1, e10 = 0.1, e11 = 0.1, e12 = 0.1\n)\n\nfit &lt;- nlsLM(\n  price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12 +\n    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 + b7 * cyd7 +\n      b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 + b12 * cyd12 +\n      c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c +\n      c6 * ps_c + c7 * ac_c + c8) +\n    exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 + e7 * tyd7 +\n      e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 + e12 * tyd12 +\n      d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t +\n      d6 * ps_t + d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values,\n  # adjust parameters to account to slow convergence\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit)\n\n\nFormula: price ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * \n    cyd7 + a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + \n    a12 * cyd12 + exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * \n    cyd5 + b6 * cyd6 + b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + b10 * \n    cyd10 + b11 * cyd11 + b12 * cyd12 + c1 * wght_c + c2 * wdth_c + \n    c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * \n    ac_c + c8) + exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * \n    tyd5 + e6 * tyd6 + e7 * tyd7 + e8 * tyd8 + e9 * tyd9 + e10 * \n    tyd10 + e11 * tyd11 + e12 * tyd12 + d1 * wght_t + d2 * wdth_t + \n    d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t + d7 * \n    four_t + d8)\n\nParameters:\n      Estimate Std. Error t value Pr(&gt;|t|)    \na3   2.596e+02  5.491e+02   0.473  0.63663    \na4   2.159e+01  5.320e+02   0.041  0.96766    \na5   1.385e+02  4.921e+02   0.282  0.77849    \na6   5.621e+02  4.804e+02   1.170  0.24277    \na7  -2.020e+01  1.035e+02  -0.195  0.84547    \na8   7.438e+02  5.206e+02   1.429  0.15399    \na9   1.175e+03  5.175e+02   2.270  0.02378 *  \na10  7.411e+02  7.438e+02   0.996  0.31973    \na11 -4.744e+02  8.253e+02  -0.575  0.56579    \na12 -5.577e+02  7.820e+02  -0.713  0.47623    \nb2  -8.778e-02  4.246e-02  -2.067  0.03943 *  \nb3  -6.198e-03  8.692e-02  -0.071  0.94319    \nb4   8.501e-02  7.549e-02   1.126  0.26086    \nb5   6.504e-02  7.007e-02   0.928  0.35391    \nb6   7.187e-02  6.775e-02   1.061  0.28952    \nb7   1.512e-01  3.346e-02   4.519 8.46e-06 ***\nb8   1.445e-01  6.653e-02   2.173  0.03046 *  \nb9   1.986e-01  6.371e-02   3.117  0.00198 ** \nb10  2.789e-01  7.397e-02   3.771  0.00019 ***\nb11  4.093e-01  7.059e-02   5.799 1.48e-08 ***\nb12  3.709e-01  6.936e-02   5.347 1.60e-07 ***\nc1   4.691e-01  8.868e-02   5.289 2.15e-07 ***\nc2   5.440e-01  7.051e-02   7.715 1.23e-13 ***\nc3  -3.623e-01  4.558e-02  -7.949 2.51e-14 ***\nc4   2.486e-01  3.892e-02   6.388 5.25e-10 ***\nc5   6.424e-02  2.068e-02   3.106  0.00205 ** \nc6   1.090e-01  2.102e-02   5.188 3.59e-07 ***\nc7   1.667e-01  2.075e-02   8.033 1.41e-14 ***\nc8   6.581e+00  4.161e-01  15.814  &lt; 2e-16 ***\nd1   4.809e-01  9.247e-02   5.200 3.36e-07 ***\nd2   5.697e-01  2.951e-01   1.930  0.05436 .  \nd3  -1.723e-01  7.918e-02  -2.176  0.03021 *  \nd4   4.761e-01  1.876e-01   2.538  0.01157 *  \nd5   4.939e-02  6.314e-02   0.782  0.43462    \nd6   5.430e-02  5.794e-02   0.937  0.34930    \nd7   1.797e-01  9.133e-02   1.968  0.04986 *  \nd8   3.724e+00  1.851e+00   2.012  0.04497 *  \ne2  -2.764e-01  6.097e-01  -0.453  0.65061    \ne3   6.840e-01  4.056e-01   1.687  0.09255 .  \ne4   7.412e-01  4.242e-01   1.747  0.08141 .  \ne5   5.277e-01  3.852e-01   1.370  0.17157    \ne6   5.536e-01  3.897e-01   1.421  0.15624    \ne7   1.408e-01  6.125e-02   2.298  0.02212 *  \ne8   6.340e-01  4.319e-01   1.468  0.14302    \ne9   6.354e-01  4.490e-01   1.415  0.15788    \ne10  5.881e-02  1.012e-01   0.581  0.56144    \ne11  3.243e-01  7.533e-02   4.305 2.16e-05 ***\ne12  4.668e-01  7.319e-02   6.378 5.59e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 936.3 on 356 degrees of freedom\n\nNumber of iterations to convergence: 42 \nAchieved convergence tolerance: 1.49e-08\n\nfit_coef &lt;- coef(fit)\n\ntruck_7990 &lt;- truck_7990 %&gt;%\n  mutate(\n    winv = case_when(\n      ve == 1 ~ 1 / exp(fit_coef[\"b2\"] * cyd2 + fit_coef[\"b3\"] * cyd3 +\n        fit_coef[\"b4\"] * cyd4 + fit_coef[\"b5\"] * cyd5 + fit_coef[\"b6\"] * cyd6 +\n        fit_coef[\"b7\"] * cyd7 + fit_coef[\"b8\"] * cyd8 + fit_coef[\"b9\"] * cyd9 +\n        fit_coef[\"b10\"] * cyd10 + fit_coef[\"b11\"] * cyd11 +\n        fit_coef[\"b12\"] * cyd12 + fit_coef[\"c1\"] * wght_c +\n        fit_coef[\"c2\"] * wdth_c + fit_coef[\"c3\"] * hght_c +\n        fit_coef[\"c4\"] * hp_c + fit_coef[\"c5\"] * tran_c +\n        fit_coef[\"c6\"] * ps_c + fit_coef[\"c7\"] * ac_c + fit_coef[\"c8\"]),\n      ve == 2 ~ 1 / exp(fit_coef[\"e2\"] * tyd2 + fit_coef[\"e3\"] * tyd3 +\n        fit_coef[\"e4\"] * tyd4 + fit_coef[\"e5\"] * tyd5 + fit_coef[\"e6\"] * tyd6 +\n        fit_coef[\"e7\"] * tyd7 + fit_coef[\"e8\"] * tyd8 + fit_coef[\"e9\"] * tyd9 +\n        fit_coef[\"e10\"] * tyd10 + fit_coef[\"e11\"] * tyd11 +\n        fit_coef[\"e12\"] * tyd12 + fit_coef[\"d1\"] * wght_t +\n        fit_coef[\"d2\"] * wdth_t + fit_coef[\"d3\"] * hght_t +\n        fit_coef[\"d4\"] * hp_t + fit_coef[\"d5\"] * tran_t +\n        fit_coef[\"d6\"] * ps_t + fit_coef[\"d7\"] * four_t + fit_coef[\"d8\"]),\n    ),\n    nprice = price * winv\n  )\n\nfit2 &lt;- nlsLM(\n  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12) +\n    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +\n      b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 +\n      b12 * cyd12 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +\n      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +\n    winv * exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 +\n      e7 * tyd7 + e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 +\n      e12 * tyd12 + d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t +\n      d5 * tran_t + d6 * ps_t + d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values,\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit2)\n\n\nFormula: nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + \n    a7 * cyd7 + a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + \n    a12 * cyd12) + winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + \n    b5 * cyd5 + b6 * cyd6 + b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + \n    b10 * cyd10 + b11 * cyd11 + b12 * cyd12 + c1 * wght_c + c2 * \n    wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + \n    c7 * ac_c + c8) + winv * exp(e2 * tyd2 + e3 * tyd3 + e4 * \n    tyd4 + e5 * tyd5 + e6 * tyd6 + e7 * tyd7 + e8 * tyd8 + e9 * \n    tyd9 + e10 * tyd10 + e11 * tyd11 + e12 * tyd12 + d1 * wght_t + \n    d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * \n    ps_t + d7 * four_t + d8)\n\nParameters:\n      Estimate Std. Error t value Pr(&gt;|t|)    \na3   2.558e+02  4.717e+02   0.542 0.587994    \na4   3.602e+02  5.124e+02   0.703 0.482532    \na5   5.100e+02  4.823e+02   1.057 0.291011    \na6   6.946e+02  4.770e+02   1.456 0.146214    \na7   6.024e+01  9.338e+01   0.645 0.519292    \na8   6.719e+02  6.023e+02   1.116 0.265324    \na9   1.317e+03  5.831e+02   2.259 0.024505 *  \na10  8.590e+02  1.067e+03   0.805 0.421102    \na11  8.514e+02  1.135e+03   0.750 0.453477    \na12  8.496e+02  1.123e+03   0.756 0.449875    \nb2  -4.359e-02  6.986e-02  -0.624 0.533015    \nb3   6.083e-02  1.322e-01   0.460 0.645668    \nb4   9.350e-02  1.340e-01   0.698 0.485782    \nb5   5.018e-02  1.275e-01   0.393 0.694188    \nb6   9.386e-02  1.238e-01   0.758 0.448940    \nb7   2.288e-01  7.452e-02   3.071 0.002300 ** \nb8   2.835e-01  1.330e-01   2.131 0.033774 *  \nb9   3.347e-01  1.255e-01   2.667 0.008003 ** \nb10  4.105e-01  1.389e-01   2.956 0.003328 ** \nb11  4.014e-01  1.454e-01   2.761 0.006058 ** \nb12  3.202e-01  1.418e-01   2.258 0.024519 *  \nc1   4.797e-01  2.005e-01   2.392 0.017269 *  \nc2   8.180e-01  2.096e-01   3.903 0.000114 ***\nc3  -2.666e-01  9.648e-02  -2.763 0.006022 ** \nc4   4.243e-01  9.175e-02   4.624 5.27e-06 ***\nc5   1.603e-01  5.221e-02   3.070 0.002302 ** \nc6   1.633e-01  4.580e-02   3.567 0.000411 ***\nc7   1.522e-01  4.696e-02   3.241 0.001306 ** \nc8   4.049e+00  1.249e+00   3.243 0.001296 ** \nd1   4.943e-01  9.277e-02   5.328 1.77e-07 ***\nd2   7.392e-02  6.277e-02   1.178 0.239734    \nd3  -3.155e-02  5.003e-02  -0.631 0.528681    \nd4   3.573e-01  8.138e-02   4.390 1.49e-05 ***\nd5   9.111e-02  2.193e-02   4.154 4.10e-05 ***\nd6   8.898e-03  5.962e-02   0.149 0.881454    \nd7   8.680e-02  1.017e-01   0.853 0.394034    \nd8   6.958e+00  4.030e-01  17.264  &lt; 2e-16 ***\ne2  -6.496e-03  1.990e-02  -0.326 0.744316    \ne3   3.050e-01  5.749e-02   5.306 1.98e-07 ***\ne4   3.021e-01  5.829e-02   5.182 3.68e-07 ***\ne5   1.918e-01  4.357e-02   4.402 1.42e-05 ***\ne6   2.001e-01  4.508e-02   4.439 1.21e-05 ***\ne7   5.227e-02  1.667e-02   3.135 0.001862 ** \ne8   2.051e-01  5.229e-02   3.923 0.000105 ***\ne9   1.869e-01  5.223e-02   3.578 0.000395 ***\ne10  5.322e-02  1.533e-01   0.347 0.728665    \ne11  1.145e-01  1.635e-01   0.700 0.484378    \ne12  2.044e-01  1.760e-01   1.161 0.246236    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1606 on 356 degrees of freedom\n\nNumber of iterations to convergence: 40 \nAchieved convergence tolerance: 1.49e-08\n\n\n\n\nsystem_nocom.do\n\nfit3 &lt;- nlsLM(\n  nprice ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12 +\n    exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 + b7 * cyd7 +\n      b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 + b12 * cyd12 +\n      c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c +\n      c6 * ps_c + c7 * ac_c + c8) +\n    exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 + e7 * tyd7 +\n      e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 + e12 * tyd12 +\n      d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t +\n      d6 * ps_t + d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values,\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit3)\n\n\nFormula: nprice ~ a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * \n    cyd7 + a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + \n    a12 * cyd12 + exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * \n    cyd5 + b6 * cyd6 + b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + b10 * \n    cyd10 + b11 * cyd11 + b12 * cyd12 + c1 * wght_c + c2 * wdth_c + \n    c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + c7 * \n    ac_c + c8) + exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * \n    tyd5 + e6 * tyd6 + e7 * tyd7 + e8 * tyd8 + e9 * tyd9 + e10 * \n    tyd10 + e11 * tyd11 + e12 * tyd12 + d1 * wght_t + d2 * wdth_t + \n    d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * ps_t + d7 * \n    four_t + d8)\n\nParameters:\n      Estimate Std. Error t value Pr(&gt;|t|)    \na3   2.624e-02  4.140e-01   0.063 0.949491    \na4   8.697e-02  4.183e-01   0.208 0.835437    \na5  -8.312e-02  4.548e-01  -0.183 0.855098    \na6  -1.323e-01  4.526e-01  -0.292 0.770199    \na7   2.344e-01  1.482e-02  15.813  &lt; 2e-16 ***\na8   3.986e-01  3.092e-01   1.289 0.198254    \na9   5.016e-01  2.736e-01   1.833 0.067611 .  \na10  5.424e-01  3.662e-01   1.481 0.139457    \na11  9.750e-01  2.681e-01   3.637 0.000316 ***\na12  9.776e-01  3.251e-01   3.007 0.002822 ** \nb2   9.341e-02  5.898e-02   1.584 0.114102    \nb3   1.123e-01  4.512e-01   0.249 0.803509    \nb4  -1.732e-02  5.231e-01  -0.033 0.973612    \nb5   1.847e-01  4.491e-01   0.411 0.681186    \nb6   2.756e-01  3.967e-01   0.695 0.487667    \nb7  -2.069e-01  7.952e-02  -2.602 0.009669 ** \nb8  -3.091e-01  5.138e-01  -0.602 0.547748    \nb9  -3.748e-01  4.893e-01  -0.766 0.444214    \nb10 -6.060e-01  7.450e-01  -0.813 0.416582    \nb11 -1.343e+01  2.169e+05   0.000 0.999951    \nb12 -7.439e+00  6.761e+02  -0.011 0.991227    \nc1  -3.546e-01  1.945e-01  -1.823 0.069162 .  \nc2  -3.473e-01  1.416e-01  -2.453 0.014648 *  \nc3   3.854e-01  1.320e-01   2.919 0.003736 ** \nc4   3.652e-01  1.556e-01   2.346 0.019500 *  \nc5   8.554e-02  4.351e-02   1.966 0.050062 .  \nc6  -4.309e-02  4.620e-02  -0.933 0.351609    \nc7  -4.548e-02  5.820e-02  -0.781 0.435036    \nc8  -9.251e-03  9.580e-02  -0.097 0.923125    \nd1  -1.943e-01  3.195e-01  -0.608 0.543525    \nd2  -9.550e-01  1.593e-01  -5.995 5.00e-09 ***\nd3   8.712e-01  1.543e-01   5.646 3.36e-08 ***\nd4   9.527e-02  1.540e-01   0.619 0.536598    \nd5   1.438e-01  5.331e-02   2.697 0.007324 ** \nd6   8.713e-02  2.299e+00   0.038 0.969795    \nd7  -1.475e+00  3.011e+00  -0.490 0.624490    \nd8   1.564e+00  8.814e-01   1.775 0.076812 .  \ne2   6.017e-01  5.035e-02  11.951  &lt; 2e-16 ***\ne3  -2.292e+00  7.305e-01  -3.138 0.001844 ** \ne4  -1.671e+01  1.301e+06   0.000 0.999990    \ne5  -1.534e+00  2.857e-01  -5.371 1.42e-07 ***\ne6  -1.676e+00  3.323e-01  -5.043 7.30e-07 ***\ne7  -2.786e-01  5.847e-02  -4.765 2.76e-06 ***\ne8  -1.922e+01  1.849e+07   0.000 0.999999    \ne9  -1.872e+01  1.117e+07   0.000 0.999999    \ne10  3.423e-02  1.998e-01   0.171 0.864101    \ne11 -1.734e+00  6.989e-01  -2.482 0.013532 *  \ne12 -1.259e+01  4.935e+04   0.000 0.999797    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1665 on 356 degrees of freedom\n\nNumber of iterations to convergence: 135 \nAchieved convergence tolerance: 1.49e-08\n\nfit4 &lt;- nlsLM(\n  nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + a7 * cyd7 +\n    a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + a12 * cyd12) +\n    winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + b5 * cyd5 + b6 * cyd6 +\n      b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + b10 * cyd10 + b11 * cyd11 +\n      b12 * cyd12 + c1 * wght_c + c2 * wdth_c + c3 * hght_c + c4 * hp_c +\n      c5 * tran_c + c6 * ps_c + c7 * ac_c + c8) +\n    winv * exp(e2 * tyd2 + e3 * tyd3 + e4 * tyd4 + e5 * tyd5 + e6 * tyd6 +\n      e7 * tyd7 + e8 * tyd8 + e9 * tyd9 + e10 * tyd10 + e11 * tyd11 +\n      e12 * tyd12 + d1 * wght_t + d2 * wdth_t + d3 * hght_t + d4 * hp_t +\n      d5 * tran_t + d6 * ps_t + d7 * four_t + d8),\n  data = truck_7990,\n  start = initial_values,\n  control = nls.lm.control(maxiter = 1000, maxfev = 10000)\n)\n\nsummary(fit4)\n\n\nFormula: nprice ~ winv * (a3 * cyd3 + a4 * cyd4 + a5 * cyd5 + a6 * cyd6 + \n    a7 * cyd7 + a8 * cyd8 + a9 * cyd9 + a10 * cyd10 + a11 * cyd11 + \n    a12 * cyd12) + winv * exp(b2 * cyd2 + b3 * cyd3 + b4 * cyd4 + \n    b5 * cyd5 + b6 * cyd6 + b7 * cyd7 + b8 * cyd8 + b9 * cyd9 + \n    b10 * cyd10 + b11 * cyd11 + b12 * cyd12 + c1 * wght_c + c2 * \n    wdth_c + c3 * hght_c + c4 * hp_c + c5 * tran_c + c6 * ps_c + \n    c7 * ac_c + c8) + winv * exp(e2 * tyd2 + e3 * tyd3 + e4 * \n    tyd4 + e5 * tyd5 + e6 * tyd6 + e7 * tyd7 + e8 * tyd8 + e9 * \n    tyd9 + e10 * tyd10 + e11 * tyd11 + e12 * tyd12 + d1 * wght_t + \n    d2 * wdth_t + d3 * hght_t + d4 * hp_t + d5 * tran_t + d6 * \n    ps_t + d7 * four_t + d8)\n\nParameters:\n      Estimate Std. Error t value Pr(&gt;|t|)    \na3   2.558e+02  4.717e+02   0.542 0.587994    \na4   3.602e+02  5.124e+02   0.703 0.482532    \na5   5.100e+02  4.823e+02   1.057 0.291011    \na6   6.946e+02  4.770e+02   1.456 0.146214    \na7   6.024e+01  9.338e+01   0.645 0.519292    \na8   6.719e+02  6.023e+02   1.116 0.265324    \na9   1.317e+03  5.831e+02   2.259 0.024505 *  \na10  8.590e+02  1.067e+03   0.805 0.421102    \na11  8.514e+02  1.135e+03   0.750 0.453477    \na12  8.496e+02  1.123e+03   0.756 0.449875    \nb2  -4.359e-02  6.986e-02  -0.624 0.533015    \nb3   6.083e-02  1.322e-01   0.460 0.645668    \nb4   9.350e-02  1.340e-01   0.698 0.485782    \nb5   5.018e-02  1.275e-01   0.393 0.694188    \nb6   9.386e-02  1.238e-01   0.758 0.448940    \nb7   2.288e-01  7.452e-02   3.071 0.002300 ** \nb8   2.835e-01  1.330e-01   2.131 0.033774 *  \nb9   3.347e-01  1.255e-01   2.667 0.008003 ** \nb10  4.105e-01  1.389e-01   2.956 0.003328 ** \nb11  4.014e-01  1.454e-01   2.761 0.006058 ** \nb12  3.202e-01  1.418e-01   2.258 0.024519 *  \nc1   4.797e-01  2.005e-01   2.392 0.017269 *  \nc2   8.180e-01  2.096e-01   3.903 0.000114 ***\nc3  -2.666e-01  9.648e-02  -2.763 0.006022 ** \nc4   4.243e-01  9.175e-02   4.624 5.27e-06 ***\nc5   1.603e-01  5.221e-02   3.070 0.002302 ** \nc6   1.633e-01  4.580e-02   3.567 0.000411 ***\nc7   1.522e-01  4.696e-02   3.241 0.001306 ** \nc8   4.049e+00  1.249e+00   3.243 0.001296 ** \nd1   4.943e-01  9.277e-02   5.328 1.77e-07 ***\nd2   7.392e-02  6.277e-02   1.178 0.239734    \nd3  -3.155e-02  5.003e-02  -0.631 0.528681    \nd4   3.573e-01  8.138e-02   4.390 1.49e-05 ***\nd5   9.111e-02  2.193e-02   4.154 4.10e-05 ***\nd6   8.898e-03  5.962e-02   0.149 0.881454    \nd7   8.680e-02  1.017e-01   0.853 0.394034    \nd8   6.958e+00  4.030e-01  17.264  &lt; 2e-16 ***\ne2  -6.496e-03  1.990e-02  -0.326 0.744316    \ne3   3.050e-01  5.749e-02   5.306 1.98e-07 ***\ne4   3.021e-01  5.829e-02   5.182 3.68e-07 ***\ne5   1.918e-01  4.357e-02   4.402 1.42e-05 ***\ne6   2.001e-01  4.508e-02   4.439 1.21e-05 ***\ne7   5.227e-02  1.667e-02   3.135 0.001862 ** \ne8   2.051e-01  5.229e-02   3.923 0.000105 ***\ne9   1.869e-01  5.223e-02   3.578 0.000395 ***\ne10  5.322e-02  1.533e-01   0.347 0.728665    \ne11  1.145e-01  1.635e-01   0.700 0.484378    \ne12  2.044e-01  1.760e-01   1.161 0.246236    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1606 on 356 degrees of freedom\n\nNumber of iterations to convergence: 40 \nAchieved convergence tolerance: 1.49e-08\n\n\n\n\n\nExtra step: formatting the tables\nI need to replace variables such as “c1” with “Weight (tons)” to replicate Table 3.5. I can do this by looking at the coefficients of the variables in the non-linear regression function.\n\n# function to avoid repeating the same code four times\nreshape_estimates &lt;- function(fit, vehicle, term_prefix, term_mappings) {\n  tidy(fit) %&gt;%\n    filter(term %in% paste0(term_prefix, 1:8)) %&gt;%\n    mutate(\n      term = case_when(\n        term == paste0(term_prefix, \"1\") ~ term_mappings[1],\n        term == paste0(term_prefix, \"2\") ~ term_mappings[2],\n        term == paste0(term_prefix, \"3\") ~ term_mappings[3],\n        term == paste0(term_prefix, \"4\") ~ term_mappings[4],\n        term == paste0(term_prefix, \"5\") ~ term_mappings[5],\n        term == paste0(term_prefix, \"6\") ~ term_mappings[6],\n        term == paste0(term_prefix, \"7\") ~ term_mappings[7],\n        term == paste0(term_prefix, \"8\") ~ term_mappings[8]\n      )\n    ) %&gt;%\n    select(term, estimate, std.error) %&gt;%\n    pivot_longer(\n      cols = c(estimate, std.error), names_to = \"stat\",\n      values_to = \"value\"\n    ) %&gt;%\n    mutate(\n      stat = if_else(stat == \"estimate\", \"Estimate\", \"Std. Error\"),\n      value = round(value, 3)\n    ) %&gt;%\n    rename(!!sym(vehicle) := value)\n}\n\ncar_vars &lt;- c(\n  \"Weight (tons)\", \"Width (feet)\", \"Height (feet)\", \"Horsepower (100)\",\n  \"Transmission (5-speed or auto)\", \"Power steering\", \"Air conditioning\", \"Constant\"\n)\n\ntruck_vars &lt;- c(\n  \"Weight (tons)\", \"Width (feet)\", \"Height (feet)\", \"Horsepower (100)\",\n  \"Transmission (5-speed or auto)\", \"Power steering\", \"Four-wheel drive\", \"Constant\"\n)\n\nordered_vars &lt;- unique(c(car_vars, truck_vars))\nordered_vars &lt;- c(\"Constant\", ordered_vars[!ordered_vars %in% \"Constant\"])\n\ntable_85 &lt;- reshape_estimates(fit2, \"cars\", \"c\", car_vars) %&gt;%\n  full_join(reshape_estimates(fit2, \"trucks\", \"d\", truck_vars)) %&gt;%\n  full_join(reshape_estimates(fit4, \"cars\", \"c\", car_vars),\n    by = c(\"term\", \"stat\")\n  ) %&gt;%\n  full_join(reshape_estimates(fit4, \"trucks\", \"d\", truck_vars),\n    by = c(\"term\", \"stat\")\n  ) %&gt;%\n  mutate(\n    term = factor(term, levels = ordered_vars)\n  ) %&gt;%\n  arrange(term)\n\ncolnames(table_85) &lt;- c(\n  \"Variable\", \"Statistic\", \"Cars (No Con)\", \"Trucks (No Con)\",\n  \"Cars (W Con)\", \"Trucks (W Con)\"\n)\n\nkable(table_85)\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nStatistic\nCars (No Con)\nTrucks (No Con)\nCars (W Con)\nTrucks (W Con)\n\n\n\n\nConstant\nEstimate\n4.049\n6.958\n4.049\n6.958\n\n\nConstant\nStd. Error\n1.249\n0.403\n1.249\n0.403\n\n\nWeight (tons)\nEstimate\n0.480\n0.494\n0.480\n0.494\n\n\nWeight (tons)\nStd. Error\n0.201\n0.093\n0.201\n0.093\n\n\nWidth (feet)\nEstimate\n0.818\n0.074\n0.818\n0.074\n\n\nWidth (feet)\nStd. Error\n0.210\n0.063\n0.210\n0.063\n\n\nHeight (feet)\nEstimate\n-0.267\n-0.032\n-0.267\n-0.032\n\n\nHeight (feet)\nStd. Error\n0.096\n0.050\n0.096\n0.050\n\n\nHorsepower (100)\nEstimate\n0.424\n0.357\n0.424\n0.357\n\n\nHorsepower (100)\nStd. Error\n0.092\n0.081\n0.092\n0.081\n\n\nTransmission (5-speed or auto)\nEstimate\n0.160\n0.091\n0.160\n0.091\n\n\nTransmission (5-speed or auto)\nStd. Error\n0.052\n0.022\n0.052\n0.022\n\n\nPower steering\nEstimate\n0.163\n0.009\n0.163\n0.009\n\n\nPower steering\nStd. Error\n0.046\n0.060\n0.046\n0.060\n\n\nAir conditioning\nEstimate\n0.152\nNA\n0.152\nNA\n\n\nAir conditioning\nStd. Error\n0.047\nNA\n0.047\nNA\n\n\nFour-wheel drive\nEstimate\nNA\n0.087\nNA\n0.087\n\n\nFour-wheel drive\nStd. Error\nNA\n0.102\nNA\n0.102",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter8.html",
    "href": "chapter8.html",
    "title": "Chapter 8. Import Quotas and Export Subsidies",
    "section": "",
    "text": "Empirical exercise\nThis exercise is to reproduce regression results Feenstra (1988a). To complete the exercise, the files “car_7990.dta” and “truck_7990.dta” should be stored in Chapter-8.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Chapter 8. Import Quotas and Export Subsidies</span>"
    ]
  },
  {
    "objectID": "chapter2.html",
    "href": "chapter2.html",
    "title": "Chapter 2. The Heckscher-Ohlin Model",
    "section": "",
    "text": "Read and transform the data\nIn these exercises, you will reproduce some of the empirical results from Trefler (1993, 1995). To complete the exercise, the Excel file hov_pub.csv should be stored in the directory Chapter-2. After this, run the STATA program hov_pub.do, which will create a new STATA data file trefler.dta.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Chapter 2. The Heckscher-Ohlin Model</span>"
    ]
  },
  {
    "objectID": "chapter7.html",
    "href": "chapter7.html",
    "title": "Chapter 7. Import Tariffs and Dumping",
    "section": "",
    "text": "Empirical exercise\nIn this exercise, you are asked to reproduce some of the empirical results from Feenstra (1989).\nTo complete the exercise, the files “cars.csv, trucks.csv, cycon.csv, cyship.csv, cypool.csv” should be stored in the directory: first-edition/Chapter-7. Each of these can be used in STATA programs “cars.do, trucks.do, cycon.do, cyship.do, cypool.do” to create a dataset with the variables described in “Documentation_Chp7.doc.”",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Chapter 7. Import Tariffs and Dumping</span>"
    ]
  },
  {
    "objectID": "chapter4.html",
    "href": "chapter4.html",
    "title": "Chapter 4. Trade in Intermediate Inputs and Wages",
    "section": "",
    "text": "Data Description\nHere are some variable definitions in data file data_Chp4 to help you in the replication exercise. The variable names also give you a hint as to the naming conventions used by Feenstra & Hanson with their other variables.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Chapter 4. Trade in Intermediate Inputs and Wages</span>"
    ]
  },
  {
    "objectID": "chapter5.html",
    "href": "chapter5.html",
    "title": "Chapter 5. Increasing Returns and the Gravity Equation",
    "section": "",
    "text": "Empirical exercise\nIn this exercise, you are asked to reproduce the empirical results shown in Table 5.2. There are four datasets available: dist.csv which is distances; gdp_ce_93.csv which is GDP in exporting location in 1993; gdp_ci_93.csv which is GDP in importing location in 1993; and trade_93.csv which is trade in 1993. To complete the exercise, these files should be stored in the directory Chapter-5. After this, run the STATA program data_trans.do, which will convert these datasets to STATA files with the same name. The trade data is already converted into US dollars, but GDP data is in Canadian dollars, so this is converted with the exchange rate 1 Canadian dollar = 0.775134 U.S. dollars.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Chapter 5. Increasing Returns and the Gravity Equation</span>"
    ]
  },
  {
    "objectID": "chapter9.html",
    "href": "chapter9.html",
    "title": "Chapter 9. Political Economy of Trade Policy",
    "section": "",
    "text": "Empirical exercise\nThis exercise is to reproduce regression results Branstetter and Feenstra (2002). To complete the exercise, the file “china_fdi.dta” should be stored in Chapter-9.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Chapter 9. Political Economy of Trade Policy</span>"
    ]
  },
  {
    "objectID": "chapter9.html#documentation",
    "href": "chapter9.html#documentation",
    "title": "Chapter 9. Political Economy of Trade Policy",
    "section": "Documentation",
    "text": "Documentation\nThe primary data set is a file, in STATA format, called china_fdi.dta. An extended list and description of the variables are given below.\n\n\n\n\n\n\n\nVariable\nBrief Description\n\n\n\n\npcode\nProvince Code\n\n\npname\nProvince Name\n\n\nyear\n1978-1996\n\n\noutput\nTotal output\n\n\nstate\nState-owned firm output\n\n\ncoll\nOutput of collectives\n\n\nindi\nOutput of individual enterprises\n\n\nothers\nOutput of other firms\n\n\nfiech\nfie2 + oversea2\n\n\nother2\nFiner breakdown of other output\n\n\nstock2\nOutput of stock companies\n\n\nfie2\nOutput of Foreign-Invested Enterprises (FIEs)\n\n\noversea2\nOutput of Overseas Chinese FIEs\n\n\nfiexrat\ncx_fo / fiech\n\n\ncx_fo\n(cx_or_fo + cx_pr_fo + cx_ot_fo)\n\n\nimport\nImports from provincial data\n\n\nexport\nExports from provincial data\n\n\nloan\nForeign loans\n\n\nfdi\nForeign direct investments\n\n\nofdi\nOther Foreign Direct Investment (FDI)\n\n\nfdidum\nDummy variable (1 if fdi &gt; 0 & fdi != .)\n\n\ncx_tot\nTotal exports from customs data\n\n\ncm_tot\nTotal imports from customs data\n\n\ncx_or_st\nOrdinary trade exports, State-Owned Enterprises (SOEs)\n\n\ncm_or_st\nOrdinary trade imports, SOEs\n\n\ncx_or_fo\nOrdinary trade exports, FIEs\n\n\ncm_or_fo\nOrdinary trade imports, FIEs\n\n\ncx_or_ot\nOrdinary trade exports, others\n\n\ncm_or_ot\nOrdinary trade imports, others\n\n\ncx_pr_st\nProcessing trade exports, SOEs\n\n\ncm_pr_st\nProcessing trade imports, SOEs\n\n\ncx_pr_fo\nProcessing trade exports, FIEs\n\n\ncm_pr_fo\nProcessing trade imports, FIEs\n\n\ncx_pr_ot\nProcessing trade exports, others\n\n\ncm_pr_ot\nProcessing trade imports, others\n\n\ncx_ot_st\nOther trade exports, SOEs\n\n\ncm_ot_st\nOther trade imports, SOEs\n\n\ncx_ot_fo\nOther trade exports, FIEs\n\n\ncm_ot_fo\nOther trade imports, FIEs\n\n\ncx_ot_ot\nOther trade exports, others\n\n\ncm_ot_ot\nOther trade imports, others\n\n\ntotwage\nTotal wages\n\n\nsoewage\nSOE wages\n\n\ncollwage\nUrban collective wages\n\n\nothwage\nOther wages\n\n\npremium\nothwage / ((soewage + collwage) / 2)\n\n\ntotalemp\nTotal provincial employment\n\n\nurbanemp\nTotal urban employment (in 10,000 people)\n\n\nsoeemp\nSOE employment\n\n\ncollemp\nTotal (urban) collective employment\n\n\nruralemp\nTotal rural employment\n\n\ntveemp\nTotal township and village enterprise employment\n\n\njointemp\nTotal joint-owned employment\n\n\nfieemp\nFIE employment\n\n\noveremp\nEmployment by overseas Chinese\n\n\nindemp\nEmployment by individual businesses\n\n\nfieshr\nfieemp / (jointemp + fieemp + overemp)\n\n\nfiechshr\n(fieemp + overemp) / (jointemp + fieemp)\n\n\nstatrat1\nstate / appcons\n\n\nimpute\n=1 if output is imputed\n\n\ncoastal\n=1 if coastal province\n\n\nsuprox\n=1 if Fujian or Guangdong\n\n\ntariff96\n1996 tariff estimates\n\n\nmerge1\nOld merge variable for tariffs?\n\n\nfdirv\nSets fdi=0 if missing\n\n\nfdistock\nCumulative FDI stock\n\n\nfdidum2\n=1 if fdistock &gt; 0\n\n\nfierat1\nfiech / (output + import)\n\n\nimprat1\nimport / (output + import)\n\n\nfdi_imp1\nfdistock * imprat1\n\n\ntar_imp1\ntariff96 * imprat1\n\n\nlfdistok\nLagged fdistock\n\n\ntar_imp\ntariff96 * import\n\n\nfdi_imp\nfdistock * import\n\n\nlfdi_imp\nLagged fdistock * import\n\n\ntar_stat\ntariff96 * state\n\n\nlfdi_sta\nLagged fdistock * state\n\n\ntar_lfdi\ntariff96 * lagged fdistock\n\n\nstat_imp\nstate * import\n\n\nimp_prem\nimport * newprem\n\n\nsta_prem\nstate * newprem\n\n\nlfdi_pre\nlfdistok * newprem\n\n\nnewprem\n(othwage - collwage) / other\n\n\ntar_prem\ntariff96 * newprem\n\n\nstatrat3\n= statrat2 if y &gt;= 1988, pc != 11,54\n\n\nfierat3\n= fierat2 if y &gt;= 1988, pc != 11,54\n\n\nimprat3\n= imprat2 if y &gt;= 1988, pc != 11,54\n\n\nfdi_imp3\nfdistock * imprat3\n\n\ntar_imp3\ntariff96 * imprat3\n\n\n\nNote: Additional interaction terms and various residuals are present in the dataset, often used as instruments for econometric analyses.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Chapter 9. Political Economy of Trade Policy</span>"
    ]
  },
  {
    "objectID": "chapter9.html#exercise-1",
    "href": "chapter9.html#exercise-1",
    "title": "Chapter 9. Political Economy of Trade Policy",
    "section": "Exercise 1",
    "text": "Exercise 1\nRun the program share_reg.do to reproduce the regression results in Table 9.1. Notice that apparent consumption (appcon3) is included as a control variables in these regressions. What happens if this variable is dropped?\n\nFeenstra’s code\nclear\ncapture log close\nlog using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\share_reg.log,replace\n\nuse Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\china_fdi,clear\n\nset matsize 100\n\nreg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18  if fiech3&gt;0, r \n\nreg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n     */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n     */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n     */  pd1-pd30 yd1-yd18)  if fiech3&gt;0, r \n\nreg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n     */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n     */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n     */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0, r \n\nmatrix cv=get(VCE)\n\nmatrix cv1 = cv[1..3,1..3]\n\nmatrix list cv1\n\nreg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n     */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n     */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n     */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0 & year&gt;=1988, r \n\nmatrix cv=get(VCE)\n\nmatrix cv1 = cv[1..3,1..3]\n\nmatrix list cv1\n\nreg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n     */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n     */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n     */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0 & year&gt;=1990, r \n\n\nmatrix cv=get(VCE)\n\nmatrix cv1 = cv[1..3,1..3]\n\nmatrix list cv1\n\nlog close\nOutput:\n\n. clear\n\n. capture log close\n\n. log using Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\share_reg.log,replace\n(note: file Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\share_reg.log not found)\n------------------------------------------------------------------------------------------------------------------------\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\share_reg.log\n  log type:  text\n opened on:  27 Oct 2024, 17:14:23\n\n. \n. use Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\china_fdi,clear\n\n. \n. set matsize 100\n\nCurrent memory allocation\n\n                    current                                 memory usage\n    settable          value     description                 (1M = 1024k)\n    --------------------------------------------------------------------\n    set maxvar         5000     max. variables allowed           1.909M\n    set memory           50M    max. data space                 50.000M\n    set matsize         100     max. RHS vars in models          0.085M\n                                                            -----------\n                                                                51.994M\n\n. \n. reg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18  if fiech3&gt;0, r \nnote: pd25 omitted because of collinearity\nnote: pd28 omitted because of collinearity\nnote: yd1 omitted because of collinearity\nnote: yd2 omitted because of collinearity\nnote: yd3 omitted because of collinearity\nnote: yd4 omitted because of collinearity\nnote: yd5 omitted because of collinearity\nnote: yd6 omitted because of collinearity\nnote: yd8 omitted because of collinearity\n\nLinear regression                                      Number of obs =     297\n                                                       F( 45,   251) =   13.17\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.8517\n                                                       Root MSE      =  70.771\n\n------------------------------------------------------------------------------\n             |               Robust\n      fiech3 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      state3 |  -.4120043   .1252756    -3.29   0.001    -.6587296   -.1652789\n    premsta3 |    .418439   .2349873     1.78   0.076    -.0443591    .8812372\n     tar_cm3 |  -.1462319   2.698182    -0.05   0.957    -5.460194     5.16773\n     newprem |  -118.4885   63.81774    -1.86   0.065     -244.175    7.197995\n    fdi2_cm3 |   3.67e-07   2.21e-07     1.66   0.099    -6.89e-08    8.03e-07\n    appcons3 |   .1085887   .0181638     5.98   0.000     .0728158    .1443616\n         pd1 |   138.6463   53.32884     2.60   0.010     33.61727    243.6753\n         pd2 |   111.7079   53.14862     2.10   0.037     7.033765    216.3819\n         pd3 |   47.80944   46.13068     1.04   0.301     -43.0431     138.662\n         pd4 |   38.63599   36.39048     1.06   0.289    -33.03362    110.3056\n         pd5 |   33.63291    33.2422     1.01   0.313    -31.83628     99.1021\n         pd6 |   56.76019   96.64213     0.59   0.558    -133.5726     247.093\n         pd7 |   63.22479   44.37549     1.42   0.155    -24.17098    150.6206\n         pd8 |   91.16894    58.7561     1.55   0.122    -24.54885    206.8867\n         pd9 |   334.7459   91.91022     3.64   0.000     153.7324    515.7594\n        pd10 |   91.62152   56.68167     1.62   0.107    -20.01078    203.2538\n        pd11 |  -23.90319   42.97933    -0.56   0.579    -108.5493    60.74289\n        pd12 |   15.61683   44.60963     0.35   0.727    -72.24007    103.4737\n        pd13 |   97.31858   42.69299     2.28   0.023     13.23643    181.4007\n        pd14 |   32.84924   34.97525     0.94   0.349    -36.03311    101.7316\n        pd15 |  -12.67496   71.00855    -0.18   0.858    -152.5235    127.1735\n        pd16 |   43.48629   48.61576     0.89   0.372    -52.26052    139.2331\n        pd17 |   78.74117   55.86131     1.41   0.160    -31.27545    188.7578\n        pd18 |   42.05588   42.98484     0.98   0.329    -42.60106    126.7128\n        pd19 |   5.776277   104.8443     0.06   0.956    -200.7105     212.263\n        pd20 |   38.00421    36.7446     1.03   0.302    -34.36282    110.3712\n        pd21 |    14.8177     32.051     0.46   0.644    -48.30546    77.94086\n        pd22 |   76.34966   66.17087     1.15   0.250    -53.97124    206.6706\n        pd23 |   33.08723   29.60536     1.12   0.265    -25.21934    91.39381\n        pd24 |   44.62833   38.59018     1.16   0.249     -31.3735    120.6302\n        pd25 |  (omitted)\n        pd26 |   39.83218    37.3268     1.07   0.287    -33.68146    113.3458\n        pd27 |   45.07108   33.09393     1.36   0.174     -20.1061    110.2483\n        pd28 |  (omitted)\n        pd29 |  -3.537009    27.8295    -0.13   0.899    -58.34611    51.27209\n        pd30 |    42.1159   31.27092     1.35   0.179    -19.47094    103.7027\n         yd1 |  (omitted)\n         yd2 |  (omitted)\n         yd3 |  (omitted)\n         yd4 |  (omitted)\n         yd5 |  (omitted)\n         yd6 |  (omitted)\n         yd7 |  -7.813549   31.83694    -0.25   0.806    -70.51514    54.88804\n         yd8 |  (omitted)\n         yd9 |    4.66118   19.13492     0.24   0.808    -33.02428    42.34664\n        yd10 |   8.009458   18.69165     0.43   0.669      -28.803    44.82192\n        yd11 |   4.120545   19.32224     0.21   0.831    -33.93384    42.17493\n        yd12 |   15.40138   20.54087     0.75   0.454    -25.05304    55.85579\n        yd13 |   18.11733   19.94841     0.91   0.365    -21.17027    57.40493\n        yd14 |   21.38019   23.03616     0.93   0.354    -23.98861    66.74899\n        yd15 |    37.6667   27.87403     1.35   0.178    -17.23009    92.56349\n        yd16 |   29.59672   34.22505     0.86   0.388    -37.80815    97.00159\n        yd17 |   9.661191   37.11564     0.26   0.795    -63.43658    82.75896\n        yd18 |   114.3398   43.81527     2.61   0.010     28.04735    200.6322\n       _cons |   8.138607   42.66315     0.19   0.849    -75.88476    92.16198\n------------------------------------------------------------------------------\n\n. \n. reg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n&gt;      */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n&gt;      */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n&gt;      */  pd1-pd30 yd1-yd18)  if fiech3&gt;0, r \n\nInstrumental variables (2SLS) regression               Number of obs =     280\n                                                       F( 43,   236) =   11.69\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.7437\n                                                       Root MSE      =   94.71\n\n------------------------------------------------------------------------------\n             |               Robust\n      fiech3 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      state3 |  -1.301465   .4036078    -3.22   0.001    -2.096599   -.5063307\n    premsta3 |   2.188291   .8745997     2.50   0.013     .4652708    3.911311\n     tar_cm3 |    -7.4778   3.316947    -2.25   0.025    -14.01241   -.9431926\n     newprem |   -967.166   435.0548    -2.22   0.027    -1824.253    -110.079\n    fdi2_cm3 |   3.73e-07   1.73e-07     2.15   0.032     3.18e-08    7.14e-07\n    appcons3 |   .1501362   .0251856     5.96   0.000     .1005188    .1997536\n         pd1 |   22.49351   84.71518     0.27   0.791    -144.4011    189.3881\n         pd2 |  (omitted)\n         pd3 |  -101.9567    68.5424    -1.49   0.138    -236.9898    33.07639\n         pd4 |  -62.65556   118.8012    -0.53   0.598     -296.702    171.3908\n         pd5 |  -261.3773   128.8722    -2.03   0.044    -515.2641   -7.490483\n         pd6 |  (omitted)\n         pd7 |  -95.03245   83.30879    -1.14   0.255    -259.1563    69.09143\n         pd8 |  -32.86181   81.23209    -0.40   0.686    -192.8945    127.1708\n         pd9 |     324.31   65.47577     4.95   0.000     195.3183    453.3016\n        pd10 |   24.40901   44.81474     0.54   0.586    -63.87903     112.697\n        pd11 |  -240.2662   82.48247    -2.91   0.004    -402.7622    -77.7702\n        pd12 |  -185.4254   106.2032    -1.75   0.082    -394.6528    23.80195\n        pd13 |  -38.63878   118.8187    -0.33   0.745    -272.7195     195.442\n        pd14 |  -136.9162   106.3078    -1.29   0.199    -346.3496    72.51729\n        pd15 |  (omitted)\n        pd16 |  -75.15068   69.47177    -1.08   0.280    -212.0147    61.71335\n        pd17 |   14.33876   50.61352     0.28   0.777    -85.37326    114.0508\n        pd18 |   -116.985   87.18557    -1.34   0.181    -288.7464    54.77642\n        pd19 |  -40.35602   124.3852    -0.32   0.746    -285.4032    204.6911\n        pd20 |  -179.2321   101.3529    -1.77   0.078     -378.904    20.43983\n        pd21 |  -119.2624   149.9743    -0.80   0.427    -414.7219     176.197\n        pd22 |   10.03015   64.99138     0.15   0.877    -118.0072    138.0675\n        pd23 |  -157.3637   121.3052    -1.30   0.196    -396.3431    81.61573\n        pd24 |  -170.5148   103.4955    -1.65   0.101    -374.4078    33.37831\n        pd25 |  (omitted)\n        pd26 |  -136.5358   112.6071    -1.21   0.227    -358.3793    85.30762\n        pd27 |  -130.0935   103.6251    -1.26   0.211    -334.2418    74.05478\n        pd28 |  -213.2504   156.1108    -1.37   0.173    -520.7991    94.29841\n        pd29 |  -371.6727   159.8529    -2.33   0.021    -686.5936   -56.75185\n        pd30 |  -131.4453   106.1748    -1.24   0.217    -340.6168    77.72623\n         yd1 |  (omitted)\n         yd2 |  (omitted)\n         yd3 |  (omitted)\n         yd4 |  (omitted)\n         yd5 |  (omitted)\n         yd6 |  (omitted)\n         yd7 |  (omitted)\n         yd8 |  -23.25973   50.76326    -0.46   0.647    -123.2667    76.74728\n         yd9 |  -12.41766   50.90956    -0.24   0.808    -112.7129    87.87757\n        yd10 |   15.76796   48.88126     0.32   0.747    -80.53139    112.0673\n        yd11 |   43.42377   51.59704     0.84   0.401    -58.22585    145.0734\n        yd12 |    79.3707   56.02184     1.42   0.158    -30.99606    189.7375\n        yd13 |   77.22576   55.69696     1.39   0.167    -32.50098    186.9525\n        yd14 |   98.32196   60.62045     1.62   0.106    -21.10439    217.7483\n        yd15 |    129.245   67.84135     1.91   0.058    -4.407003     262.897\n        yd16 |   134.9046   72.58903     1.86   0.064    -8.100661    277.9098\n        yd17 |   92.58514   67.73654     1.37   0.173    -40.86038    226.0307\n        yd18 |   218.5723   79.71104     2.74   0.007     61.53622    375.6084\n       _cons |   469.3039   197.0992     2.38   0.018     81.00532    857.6025\n------------------------------------------------------------------------------\n\n. \n. reg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n&gt;      */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n&gt;      */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n&gt;      */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0, r \n(analytic weights assumed)\n(sum of wgt is   2.4017e+05)\n\nInstrumental variables (2SLS) regression               Number of obs =     280\n                                                       F( 43,   236) =   26.43\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.7550\n                                                       Root MSE      =  171.68\n\n------------------------------------------------------------------------------\n             |               Robust\n      fiech3 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      state3 |  -1.660521   .4807088    -3.45   0.001    -2.607549   -.7134923\n    premsta3 |   3.618218   1.160893     3.12   0.002     1.331182    5.905255\n     tar_cm3 |  -15.85201    5.11311    -3.10   0.002    -25.92518   -5.778843\n     newprem |  -3333.269    1085.09    -3.07   0.002     -5470.97   -1195.569\n    fdi2_cm3 |   5.17e-07   1.25e-07     4.12   0.000     2.70e-07    7.65e-07\n    appcons3 |   .1497793   .0216163     6.93   0.000     .1071937    .1923649\n         pd1 |   151.3819   205.4259     0.74   0.462     -253.321    556.0847\n         pd2 |  (omitted)\n         pd3 |  -136.5562   231.6549    -0.59   0.556    -592.9319    319.8195\n         pd4 |    131.699   236.2008     0.56   0.578    -333.6322    597.0303\n         pd5 |  -519.0087   313.4677    -1.66   0.099    -1136.561    98.54363\n         pd6 |  (omitted)\n         pd7 |  -94.63755   227.7186    -0.42   0.678    -543.2584    353.9833\n         pd8 |  -97.71278   248.7448    -0.39   0.695    -587.7566     392.331\n         pd9 |   504.7952   252.3469     2.00   0.047     7.654983    1001.935\n        pd10 |   11.20123   247.3212     0.05   0.964     -476.038    498.4405\n        pd11 |  -384.5489   224.5097    -1.71   0.088    -826.8481    57.75023\n        pd12 |  -170.7961   215.2741    -0.79   0.428    -594.9006    253.3083\n        pd13 |   234.0235   204.0305     1.15   0.253    -167.9302    635.9771\n        pd14 |  -4.280486   199.6937    -0.02   0.983    -397.6905    389.1295\n        pd15 |  -61.50421   250.3792    -0.25   0.806    -554.7679    431.7595\n        pd16 |  -48.59471   226.6831    -0.21   0.830    -495.1755    397.9861\n        pd17 |   3.428437   244.1047     0.01   0.989    -477.4742     484.331\n        pd18 |  -83.46781   215.5776    -0.39   0.699      -508.17    341.2344\n        pd19 |   335.7746   280.9931     1.19   0.233    -217.8006    889.3499\n        pd20 |  -237.5962   238.2537    -1.00   0.320    -706.9719    231.7795\n        pd21 |   254.9373   222.6991     1.14   0.253    -183.7948    693.6694\n        pd22 |   -172.099   259.6178    -0.66   0.508    -683.5633    339.3653\n        pd23 |  -4.580315   199.7805    -0.02   0.982    -398.1613    389.0006\n        pd24 |   -248.713   253.6054    -0.98   0.328    -748.3327    250.9066\n        pd25 |  (omitted)\n        pd26 |   89.16112   207.6892     0.43   0.668    -320.0004    498.3226\n        pd27 |   -212.042   251.1014    -0.84   0.399    -706.7285    282.6444\n        pd28 |  (omitted)\n        pd29 |  -622.8209   321.3912    -1.94   0.054    -1255.983    10.34126\n        pd30 |  -171.1686   225.7568    -0.76   0.449    -615.9247    273.5874\n         yd1 |  (omitted)\n         yd2 |  (omitted)\n         yd3 |  (omitted)\n         yd4 |  (omitted)\n         yd5 |  (omitted)\n         yd6 |  (omitted)\n         yd7 |   43.01289   141.6405     0.30   0.762    -236.0284    322.0542\n         yd8 |  (omitted)\n         yd9 |   20.60074   86.75487     0.24   0.813    -150.3122    191.5136\n        yd10 |   140.6733   92.57702     1.52   0.130    -41.70964    323.0562\n        yd11 |    249.315   113.0118     2.21   0.028      26.6742    471.9558\n        yd12 |   297.7457   121.7527     2.45   0.015     57.88479    537.6067\n        yd13 |   301.1773   125.5635     2.40   0.017     53.80884    548.5457\n        yd14 |   364.4928   141.5999     2.57   0.011      85.5315    643.4542\n        yd15 |   432.1373   159.4536     2.71   0.007      118.003    746.2716\n        yd16 |   462.5475   187.6808     2.46   0.014     92.80381    832.2912\n        yd17 |   408.6656   200.4563     2.04   0.043     13.75323     803.578\n        yd18 |   580.9932   201.3976     2.88   0.004     184.2265      977.76\n       _cons |   898.3402   356.9691     2.52   0.013     195.0871    1601.593\n------------------------------------------------------------------------------\n\n. \n. matrix cv=get(VCE)\n\n. \n. matrix cv1 = cv[1..3,1..3]\n\n. \n. matrix list cv1\n\nsymmetric cv1[3,3]\n              state3    premsta3     tar_cm3\n  state3   .23108091\npremsta3   -.5216955   1.3476718\n tar_cm3    1.511459  -3.9109265   26.143895\n\n. \n. reg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n&gt;      */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n&gt;      */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n&gt;      */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0 & year&gt;=1988, r \n(analytic weights assumed)\n(sum of wgt is   2.1445e+05)\n\nInstrumental variables (2SLS) regression               Number of obs =     210\n                                                       F( 39,   170) =   23.69\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.8734\n                                                       Root MSE      =   130.7\n\n------------------------------------------------------------------------------\n             |               Robust\n      fiech3 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      state3 |  -1.320297    .497583    -2.65   0.009    -2.302534   -.3380597\n    premsta3 |   2.553575   1.187916     2.15   0.033     .2086084    4.898541\n     tar_cm3 |  -11.46246   6.712541    -1.71   0.090    -24.71313    1.788208\n     newprem |   -2519.84   1256.346    -2.01   0.046    -4999.888    -39.7934\n    fdi2_cm3 |   4.85e-07   1.50e-07     3.23   0.001     1.89e-07    7.81e-07\n    appcons3 |   .1486559    .024088     6.17   0.000     .1011058     .196206\n         pd1 |   163.2254   169.4229     0.96   0.337    -171.2181    497.6689\n         pd2 |  (omitted)\n         pd3 |  -34.73277   188.4823    -0.18   0.854    -406.7999    337.3344\n         pd4 |   51.19367    183.792     0.28   0.781    -311.6148    414.0022\n         pd5 |  -368.2653   282.3617    -1.30   0.194     -925.652    189.1214\n         pd6 |  (omitted)\n         pd7 |  -8.148863   187.4163    -0.04   0.965    -378.1118     361.814\n         pd8 |   42.97417   207.3155     0.21   0.836    -366.2702    452.2185\n         pd9 |   598.6921   241.8478     2.48   0.014     121.2806    1076.104\n        pd10 |   63.07135   209.5412     0.30   0.764    -350.5666    476.7093\n        pd11 |  -339.0711   190.8114    -1.78   0.077     -715.736    37.59373\n        pd12 |  -64.59059    172.208    -0.38   0.708    -404.5321    275.3509\n        pd13 |   196.2458   173.3039     1.13   0.259     -145.859    538.3505\n        pd14 |   33.28636   161.2055     0.21   0.837     -284.936    351.5087\n        pd15 |  -35.32299   218.3816    -0.16   0.872    -466.4118    395.7658\n        pd16 |   7.898497   190.3217     0.04   0.967    -367.7998    383.5968\n        pd17 |   58.21349    208.674     0.28   0.781    -353.7125    470.1395\n        pd18 |  -7.502736   175.9845    -0.04   0.966    -354.8991    339.8936\n        pd19 |   192.1812   346.1707     0.56   0.580    -491.1656     875.528\n        pd20 |  -160.9523   206.8624    -0.78   0.438    -569.3022    247.3976\n        pd21 |   192.3007   199.4306     0.96   0.336    -201.3787    585.9802\n        pd22 |    -48.786   215.9674    -0.23   0.822    -475.1092    377.5372\n        pd23 |   27.90071   159.6185     0.17   0.861    -287.1889    342.9903\n        pd24 |  -136.5801   218.0904    -0.63   0.532    -567.0941     293.934\n        pd25 |  (omitted)\n        pd26 |   164.0468   177.9983     0.92   0.358    -187.3247    515.4184\n        pd27 |  -238.2111   238.5003    -1.00   0.319    -709.0147    232.5925\n        pd28 |  (omitted)\n        pd29 |  -464.9702   303.1842    -1.53   0.127    -1063.461    133.5205\n        pd30 |  -152.6274   201.0469    -0.76   0.449    -549.4973    244.2425\n         yd1 |  (omitted)\n         yd2 |  (omitted)\n         yd3 |  (omitted)\n         yd4 |  (omitted)\n         yd5 |  (omitted)\n         yd6 |  (omitted)\n         yd7 |  (omitted)\n         yd8 |  (omitted)\n         yd9 |  (omitted)\n        yd10 |  (omitted)\n        yd11 |  (omitted)\n        yd12 |   42.70326   47.13385     0.91   0.366    -50.33976    135.7463\n        yd13 |   45.25918   45.69599     0.99   0.323    -44.94548    135.4638\n        yd14 |   97.22254   61.23666     1.59   0.114    -23.65965    218.1047\n        yd15 |   155.5728   85.44523     1.82   0.070    -13.09748    324.2432\n        yd16 |   186.4389   125.9879     1.48   0.141    -62.26333    435.1412\n        yd17 |   136.0366   144.7728     0.94   0.349    -149.7474    421.8206\n        yd18 |   315.0861   143.2271     2.20   0.029     32.35332    597.8188\n       _cons |   842.7119   438.2943     1.92   0.056    -22.48842    1707.912\n------------------------------------------------------------------------------\n\n. \n. matrix cv=get(VCE)\n\n. \n. matrix cv1 = cv[1..3,1..3]\n\n. \n. matrix list cv1\n\nsymmetric cv1[3,3]\n              state3    premsta3     tar_cm3\n  state3   .24758885\npremsta3  -.55788145   1.4111448\n tar_cm3   1.8692088  -4.6693021   45.058204\n\n. \n. reg fiech3 state3 premsta3 tar_cm3 newprem fdi2_cm3 appcons3 pd1-pd30 yd1-yd18 /*\n&gt;      */ (elecpro elecgdp elecpop elecurb elecrur elecwag elecwags elecwagu cmpr3 /*\n&gt;      */ cmprgdp  cmprpop cmprelec indewag indewags indewagu gdp pop urbaninc rurinc /*\n&gt;      */  pd1-pd30 yd1-yd18) [w=gdp]  if fiech3&gt;0 & year&gt;=1990, r \n(analytic weights assumed)\n(sum of wgt is   1.8621e+05)\n\nInstrumental variables (2SLS) regression               Number of obs =     158\n                                                       F( 37,   120) =   24.51\n                                                       Prob &gt; F      =  0.0000\n                                                       R-squared     =  0.9150\n                                                       Root MSE      =  115.63\n\n------------------------------------------------------------------------------\n             |               Robust\n      fiech3 |      Coef.   Std. Err.      t    P&gt;|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n      state3 |  -1.037144    .485102    -2.14   0.035    -1.997612   -.0766754\n    premsta3 |   1.837028   1.160133     1.58   0.116    -.4599559    4.134011\n     tar_cm3 |  -9.974153   7.575814    -1.32   0.190    -24.97374    5.025432\n     newprem |  -2125.903   1396.838    -1.52   0.131    -4891.545    639.7383\n    fdi2_cm3 |   5.11e-07   1.60e-07     3.19   0.002     1.94e-07    8.29e-07\n    appcons3 |   .1446918   .0269515     5.37   0.000     .0913298    .1980538\n         pd1 |   175.8829   154.8554     1.14   0.258    -130.7201    482.4859\n         pd2 |  (omitted)\n         pd3 |  -23.40224   173.3892    -0.13   0.893    -366.7008    319.8963\n         pd4 |  -33.34945   158.2301    -0.21   0.833     -346.634    279.9351\n         pd5 |  -183.8552   209.1258    -0.88   0.381    -597.9097    230.1993\n         pd6 |  (omitted)\n         pd7 |   43.79854   168.3807     0.26   0.795    -289.5835    377.1806\n         pd8 |    99.2044   192.0972     0.52   0.607    -281.1347    479.5435\n         pd9 |    677.295   252.7652     2.68   0.008     176.8374    1177.752\n        pd10 |   61.92765   195.3322     0.32   0.752    -324.8165    448.6718\n        pd11 |  -330.9045   175.7311    -1.88   0.062    -678.8399    17.03093\n        pd12 |  -30.48932   156.9822    -0.19   0.846    -341.3031    280.3245\n        pd13 |   201.1421   166.0392     1.21   0.228     -127.604    529.8881\n        pd14 |   42.74646    144.145     0.30   0.767    -242.6506    328.1435\n        pd15 |  -82.50432    214.247    -0.39   0.701    -506.6984    341.6897\n        pd16 |   15.49172   176.6563     0.09   0.930    -334.2755    365.2589\n        pd17 |   42.55748   199.6531     0.21   0.832    -352.7417    437.8567\n        pd18 |   9.402431   160.6178     0.06   0.953    -308.6096    327.4145\n        pd19 |   167.9075   418.6528     0.40   0.689    -660.9959     996.811\n        pd20 |  -120.0367   187.6748    -0.64   0.524    -491.6197    251.5464\n        pd21 |   170.3136    193.863     0.88   0.381    -213.5217    554.1488\n        pd22 |  -24.40219   200.0268    -0.12   0.903    -420.4413    371.6369\n        pd23 |      59.87   143.5248     0.42   0.677     -224.299     344.039\n        pd24 |  -82.74678   202.1043    -0.41   0.683    -482.8992    317.4057\n        pd25 |  (omitted)\n        pd26 |   180.1916   173.7741     1.04   0.302    -163.8691    524.2523\n        pd27 |  -231.2034   255.1446    -0.91   0.367    -736.3719    273.9651\n        pd28 |  (omitted)\n        pd29 |  -404.6779   325.7161    -1.24   0.217    -1049.573    240.2173\n        pd30 |  -173.7454   217.6256    -0.80   0.426    -604.6289    257.1381\n         yd1 |  (omitted)\n         yd2 |  (omitted)\n         yd3 |  (omitted)\n         yd4 |  (omitted)\n         yd5 |  (omitted)\n         yd6 |  (omitted)\n         yd7 |  (omitted)\n         yd8 |  (omitted)\n         yd9 |  (omitted)\n        yd10 |  (omitted)\n        yd11 |  (omitted)\n        yd12 |  (omitted)\n        yd13 |  -99.68378   152.6417    -0.65   0.515    -401.9037    202.5361\n        yd14 |  -51.76248   127.3657    -0.41   0.685    -303.9377    200.4127\n        yd15 |   1.204476   98.69447     0.01   0.990    -194.2037    196.6127\n        yd16 |   35.94405   57.09284     0.63   0.530    -77.09581    148.9839\n        yd17 |  (omitted)\n        yd18 |   171.8328   55.21844     3.11   0.002     62.50408    281.1614\n       _cons |   826.6987   609.2366     1.36   0.177    -379.5473    2032.945\n------------------------------------------------------------------------------\n\n. \n. \n. matrix cv=get(VCE)\n\n. \n. matrix cv1 = cv[1..3,1..3]\n\n. \n. matrix list cv1\n\nsymmetric cv1[3,3]\n              state3    premsta3     tar_cm3\n  state3   .23532398\npremsta3  -.52880818   1.3459097\n tar_cm3   1.8540186  -4.6583376   57.392959\n\n. \n. log close\n      name:  &lt;unnamed&gt;\n       log:  Z:\\home\\pacha\\github\\advanced-international-trade\\first-edition\\Chapter-9\\share_reg.log\n  log type:  text\n closed on:  27 Oct 2024, 17:14:31\n------------------------------------------------------------------------------------------------------------------------\n\n. \nend of do-file\n\n\nMy code\n\n# Packages ----\n\nlibrary(archive)\nlibrary(haven)\nlibrary(dplyr)\nlibrary(broom)\nlibrary(ivreg) # for 2SLS regression\nlibrary(sandwich) # for robust standard errors\nlibrary(purrr)\nlibrary(knitr)\n\n# Extract ----\n\nfzip &lt;- \"first-edition/Chapter-9.zip\"\ndout &lt;- gsub(\"\\\\.zip$\", \"\", fzip)\n\nif (!dir.exists(dout)) {\n  archive_extract(fzip, dir = dout)\n}\n\n# Read and transform ----\n\nfout &lt;- paste0(dout, \"/china_fdi.rds\")\n\nif (!file.exists(fout)) {\n  china_fdi &lt;- read_dta(paste0(dout, \"/china_fdi.dta\"))\n\n  saveRDS(china_fdi, fout)\n} else {\n  china_fdi &lt;- readRDS(fout)\n}\n\n\nrhs_vars &lt;- paste(c(\"state3\", \"premsta3\", \"tar_cm3\", \"newprem\", \"fdi2_cm3\",\n  \"appcons3\"), collapse = \" + \")\npd_vars &lt;- paste(\"pd\", 1:30, sep = \"\", collapse = \" + \")\nyd_vars &lt;- paste(\"yd\", 1:18, sep = \"\", collapse = \" + \")\n\nformula_str &lt;- paste(\"fiech3 ~\",  rhs_vars, \"+\", pd_vars, \"+\", yd_vars)\n\nfit1 &lt;- lm(formula_str, data = filter(china_fdi, fiech3 &gt; 0))\n\ntidy(fit1)\n\n# A tibble: 55 × 5\n   term        estimate     std.error statistic  p.value\n   &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)  1.65e+2 41.6              3.96  9.89e- 5\n 2 state3      -4.12e-1  0.0794          -5.19  4.33e- 7\n 3 premsta3     4.18e-1  0.138            3.04  2.65e- 3\n 4 tar_cm3     -1.46e-1  1.18            -0.124 9.02e- 1\n 5 newprem     -1.18e+2 65.2             -1.82  7.02e- 2\n 6 fdi2_cm3     3.67e-7  0.0000000750     4.89  1.80e- 6\n 7 appcons3     1.09e-1  0.00842         12.9   1.60e-29\n 8 pd1          9.65e+1 32.7              2.95  3.47e- 3\n 9 pd2          6.96e+1 32.7              2.13  3.41e- 2\n10 pd3          5.69e+0 31.9              0.178 8.58e- 1\n# ℹ 45 more rows\n\n\n\ninstruments &lt;- paste(\n  c(\n    \"elecpro\", \"elecgdp\", \"elecpop\", \"elecurb\", \"elecrur\", \"elecwag\",\n    \"elecwags\", \"elecwagu\", \"cmpr3\", \"cmprgdp\", \"cmprpop\", \"cmprelec\",\n    \"indewag\", \"indewags\", \"indewagu\", \"gdp\", \"pop\", \"urbaninc\", \"rurinc\"\n  ),\n  collapse = \" + \"\n)\n\nformula_str &lt;- paste(\n  \"fiech3 ~\", rhs_vars, \"+\", pd_vars, \"+\", yd_vars,\n  \"|\", instruments, \"+\", pd_vars, \"+\", yd_vars\n)\n\nchina_fdi_8495 &lt;- filter(china_fdi, fiech3 &gt; 0)\nchina_fdi_8895 &lt;- filter(china_fdi, fiech3 &gt; 0 & year &gt;= 1988)\nchina_fdi_9095 &lt;- filter(china_fdi, fiech3 &gt; 0 & year &gt;= 1990)\n\nfit_8495 &lt;- ivreg(formula_str,\n  data = china_fdi_8495,\n  weights = china_fdi_8495$gdp\n)\n\nfit_8895 &lt;- ivreg(formula_str,\n  data = china_fdi_8895,\n  weights = china_fdi_8895$gdp\n)\n\nfit_9095 &lt;- ivreg(formula_str,\n  data = china_fdi_9095,\n  weights = china_fdi_9095$gdp\n)\n\nThe models run correctly, however there is an issue with the summary() and tidy() functions, which fails because of dropped coefficients due to collinearity. Stata also dropped some coefficients, as we can see in the output of the previous regressions.\nIn order to bypass this issue, we can write a function to report the model summary.\n\niv_summary &lt;- function(model) {\n  coeffs &lt;- coef(model)\n  se &lt;- sqrt(diag(vcov(model)))\n  t_stats &lt;- coeffs / se\n  p_values &lt;- 2 * pt(abs(t_stats), df = model$df.residual, lower.tail = FALSE)\n  \n  results &lt;- tibble(\n    variable = names(coeffs),\n    coefficient = coeffs,\n    std_error = se,\n    t_value = t_stats,\n    p_value = p_values\n  )\n  \n  key_vars &lt;- c(\"state3\", \"premsta3\", \"tar_cm3\", \"newprem\", \"fdi2_cm3\", \"appcons3\")\n\n  results %&gt;%\n    filter(variable %in% key_vars)\n}\n\niv_summary(fit_8495)\n\n# A tibble: 6 × 5\n  variable coefficient     std_error t_value  p_value\n  &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 state3      -1.66e+0   0.285         -5.84 1.76e- 8\n2 premsta3     3.62e+0   0.764          4.74 3.75e- 6\n3 tar_cm3     -1.59e+1   3.73          -4.25 3.06e- 5\n4 newprem     -3.33e+3 878.            -3.80 1.87e- 4\n5 fdi2_cm3     5.17e-7   0.000000119    4.35 2.05e- 5\n6 appcons3     1.50e-1   0.0163         9.22 1.77e-17\n\niv_summary(fit_8895)\n\n# A tibble: 6 × 5\n  variable coefficient std_error t_value  p_value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 state3      -1.32e+0   2.91e-1   -4.54 1.06e- 5\n2 premsta3     2.55e+0   8.27e-1    3.09 2.37e- 3\n3 tar_cm3     -1.15e+1   3.91e+0   -2.93 3.81e- 3\n4 newprem     -2.52e+3   1.12e+3   -2.25 2.59e- 2\n5 fdi2_cm3     4.85e-7   1.03e-7    4.69 5.49e- 6\n6 appcons3     1.49e-1   1.49e-2    9.96 1.05e-18\n\niv_summary(fit_9095)\n\n# A tibble: 6 × 5\n  variable coefficient std_error t_value  p_value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 state3      -1.04e+0   3.09e-1   -3.35 1.07e- 3\n2 premsta3     1.84e+0   8.81e-1    2.08 3.92e- 2\n3 tar_cm3     -9.97e+0   4.18e+0   -2.39 1.85e- 2\n4 newprem     -2.13e+3   1.28e+3   -1.66 1.00e- 1\n5 fdi2_cm3     5.11e-7   1.03e-7    4.97 2.25e- 6\n6 appcons3     1.45e-1   1.60e-2    9.04 3.30e-15",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Chapter 9. Political Economy of Trade Policy</span>"
    ]
  },
  {
    "objectID": "chapter9.html#exercise-2",
    "href": "chapter9.html#exercise-2",
    "title": "Chapter 9. Political Economy of Trade Policy",
    "section": "Exercise 2",
    "text": "Exercise 2\nOpen the excel file standard_errors.xls to see how the results in Table 9.2 are computed. What formula is used for \\(\\alpha\\), and for its variance and standard error? Justify these formulas.\nHint: Consider the easier case of taking the difference between \\(\\alpha\\) and \\(\\beta\\). Then:\n\\[\nvar(\\alpha - \\beta) = E[(\\alpha - \\beta) - (\\bar{\\alpha} - \\bar{beta})]^2 = E f(\\alpha,\\beta),\n\\]\nwhere \\(f(\\alpha,\\beta)\\) is the quadratic function indicated. To compute this expected value, we take a second-order Taylor series expansion:\n\\[\n\\begin{aligned}\nf(\\alpha,\\beta) &\\approx f(\\bar{\\alpha},\\bar{\\beta}) +\n  f_{\\alpha}(\\bar{\\alpha},\\bar{\\beta})(\\alpha - \\bar{\\alpha}) +\n  f_{\\beta}(\\bar{\\alpha},\\bar{\\beta})(\\beta - \\bar{\\beta}) \\\\\n&\\quad + \\frac{1}{2} f_{\\alpha\\alpha}(\\bar{\\alpha},\\bar{\\beta})(\\alpha - \\bar{\\alpha})^2 +\n  \\frac{1}{2} f_{\\beta\\beta}(\\bar{\\alpha},\\bar{\\beta})(\\beta - \\bar{\\beta})^2 \\\\\n&\\quad + f_{\\alpha\\beta}(\\bar{\\alpha},\\bar{\\beta})(\\alpha - \\bar{\\alpha})(\\beta - \\bar{\\beta})\n\\end{aligned}\n\\]\nIt follows that,\n\\[\nEf(\\alpha,\\beta) \\approx \\frac{1}{2} f_{\\alpha\\alpha}(\\bar{\\alpha},\\bar{\\beta}) \\sigma_{\\alpha}^2 +\n  \\frac{1}{2} f_{\\beta\\beta}(\\bar{\\alpha},\\bar{\\beta}) \\sigma_{\\beta}^2 +\n  f_{\\alpha\\beta}(\\bar{\\alpha},\\bar{\\beta}) \\text{cov}(\\alpha,\\beta).\n\\]\nSo computing the derivatives of the quadratic function \\(f(\\alpha,\\beta)\\), we obtain,\n\\[\n\\text{var}(\\alpha - \\beta) = E[(\\alpha - \\beta) - (\\bar{\\alpha} - \\bar{\\beta})]^2 \\approx \\sigma_{\\alpha}^2 + \\sigma_{\\beta}^2- 2\\text{cov}(\\alpha,\\beta).\n\\]\nNow given the formula for \\(\\alpha\\), use the same approach to justify its variance.\n\nMy code\nThere is no official code for this exercise, here is my solution following the Excel file and the workaround for table 9.1 in the previous exercise.\nTo avoid confusion between the estimated coefficients and the \\((\\alpha,\\beta)\\) in the delta method, we will use \\(\\hat{\\gamma}\\) to denote estimated coefficients.\nWe compute \\(\\alpha\\) for two variables \\(x\\) and \\(y\\) as:\n\\[\n\\alpha = (\\alpha_{x}, \\alpha_{y}) = (-\\hat{\\gamma}_2 / (\\hat{\\gamma}_1 + 1), \\text{sd}(\\alpha))\n\\]\nThis requires the robust variance-covariance matrix of the coefficients, and \\(\\text{var}(\\alpha)\\) is computed as:\n\\[\n\\text{var}(\\hat{\\alpha}) = \\frac{\\text{var}(\\hat{\\gamma}_2)}{(\\hat{\\gamma}_1 + 1)^2} +\n  \\frac{\\text{var}(\\gamma)_2^2 \\text{var}(\\hat{\\gamma}_1)}{(\\hat{\\gamma}_1 + 1)^4} -\n  \\frac{2 \\hat{\\gamma}_2 \\text{cov}(\\hat{\\gamma}_1, \\hat{\\gamma}_2)}{(\\hat{\\gamma}_1 + 1)^3}\n\\]\nTaking a third variable \\(z\\), we can compute \\(\\beta\\) as:\n\\[\n\\hat{\\beta} = (\\hat{\\beta}_x, \\hat{\\beta}_y) = (-\\hat{\\gamma}_3, \\text{sd}(\\hat{\\gamma}_{z}))\n\\]\n\niv_summary_delta &lt;- function(model, period) {\n  coefs &lt;- coef(model)\n  gamma3 &lt;- coefs[\"state3\"]\n  gamma2 &lt;- coefs[\"premsta3\"]\n  gamma1 &lt;- coefs[\"tar_cm3\"]\n\n  vars &lt;- c(\"state3\", \"premsta3\", \"tar_cm3\")\n\n  vcov_matrix &lt;- vcovHC(model, type = \"HC1\")[vars, vars]\n\n  alpha &lt;- -gamma2 / (gamma1 + 1)\n\n  var_gamma1 &lt;- vcov_matrix[\"tar_cm3\", \"tar_cm3\"]\n  var_gamma2 &lt;- vcov_matrix[\"premsta3\", \"premsta3\"]\n  var_gamma3 &lt;- vcov_matrix[\"state3\", \"state3\"]\n\n  cov_gamma1_gamma3 &lt;- vcov_matrix[\"tar_cm3\", \"state3\"]\n  cov_gamma1_gamma2 &lt;- vcov_matrix[\"tar_cm3\", \"premsta3\"]\n  cov_gamma2_gamma3 &lt;- vcov_matrix[\"premsta3\", \"state3\"]\n\n  var_alpha &lt;- var_gamma2 / (gamma1 + 1)^2 +\n    var_gamma1 * gamma2^2 / (gamma1 + 1)^4 -\n    2 * cov_gamma1_gamma2 * gamma2 / (gamma1 + 1)^3\n\n  beta &lt;- -gamma3\n\n  cov_alpha_beta &lt;- cov_gamma2_gamma3 / (gamma1 + 1) -\n    gamma2 * cov_gamma1_gamma3 / (gamma1 + 1)^2\n\n  var_beta_minus_alpha &lt;- var_alpha + var_gamma3 - 2 * cov_alpha_beta\n\n  se_beta_minus_alpha &lt;- sqrt(var_beta_minus_alpha)\n\n  tibble(\n    period = period,\n    variable = c(\"tar_cm3\", \"premsta3\", \"state3\"),\n    coefficients = c(gamma1, gamma2, gamma3),\n    cov_tar_cm3 = c(var_gamma1, cov_gamma1_gamma2, cov_gamma1_gamma3),\n    cov_premsta3 = c(NA, var_gamma2, cov_gamma2_gamma3),\n    cov_state3 = c(NA, NA, var_gamma3),\n    var_alpha = c(var_alpha, NA, NA),\n    alpha = c(alpha, NA, NA),\n    beta = c(beta, NA, NA),\n    cov_alpha_beta = c(cov_alpha_beta, NA, NA),\n    var_beta_minus_alpha = c(var_beta_minus_alpha, NA, NA),\n    se_beta_minus_alpha = c(se_beta_minus_alpha, NA, NA)\n  )\n}\n\noptions(knitr.kable.NA = \"\")\n\nperiods &lt;- c(\"1984-1995\", \"1988-1995\", \"1990-1995\")\nmodels &lt;- list(fit_8495, fit_8895, fit_9095)\n\nmap2_df(models, periods, iv_summary_delta) %&gt;%\n  kable(na = \"\", digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nperiod\nvariable\ncoefficients\ncov_tar_cm3\ncov_premsta3\ncov_state3\nvar_alpha\nalpha\nbeta\ncov_alpha_beta\nvar_beta_minus_alpha\nse_beta_minus_alpha\n\n\n\n\n1984-1995\ntar_cm3\n-15.852\n26.144\n\n\n0.005\n0.244\n1.661\n0.010\n0.215\n0.464\n\n\n1984-1995\npremsta3\n3.618\n-3.911\n1.348\n\n\n\n\n\n\n\n\n\n1984-1995\nstate3\n-1.661\n1.511\n-0.522\n0.231\n\n\n\n\n\n\n\n\n1988-1995\ntar_cm3\n-11.462\n45.058\n\n\n0.017\n0.244\n1.320\n0.010\n0.245\n0.495\n\n\n1988-1995\npremsta3\n2.554\n-4.669\n1.411\n\n\n\n\n\n\n\n\n\n1988-1995\nstate3\n-1.320\n1.869\n-0.558\n0.248\n\n\n\n\n\n\n\n\n1990-1995\ntar_cm3\n-9.974\n57.393\n\n\n0.023\n0.205\n1.037\n0.017\n0.225\n0.474\n\n\n1990-1995\npremsta3\n1.837\n-4.658\n1.346\n\n\n\n\n\n\n\n\n\n1990-1995\nstate3\n-1.037\n1.854\n-0.529\n0.235",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Chapter 9. Political Economy of Trade Policy</span>"
    ]
  }
]